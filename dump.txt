
conflict:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__abi_tag-0x37>
 328:	78 38                	js     362 <__abi_tag-0x2a>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	80 00 c0             	addb   $0xc0,(%rax)
 35c:	04 00                	add    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	01 00                	add    %eax,(%rax)
 362:	00 00                	add    %al,(%rax)
 364:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 2d 28 96 3c 18    	add    %ch,0x183c9628(%rip)        # 183c99a5 <_end+0x183c4975>
 37d:	84 f0                	test   %dh,%al
 37f:	77 54                	ja     3d5 <__abi_tag+0x49>
 381:	74 43                	je     3c6 <__abi_tag+0x3a>
 383:	d4                   	(bad)  
 384:	1a 6e ee             	sbb    -0x12(%rsi),%ch
 387:	c0 d5 1e             	rcl    $0x1e,%ch
 38a:	54                   	push   %rsp
 38b:	d2                   	.byte 0xd2

Disassembly of section .note.ABI-tag:

000000000000038c <__abi_tag>:
 38c:	04 00                	add    $0x0,%al
 38e:	00 00                	add    %al,(%rax)
 390:	10 00                	adc    %al,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	01 00                	add    %eax,(%rax)
 396:	00 00                	add    %al,(%rax)
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push %rbp
 39b:	00 00                	add    %al,(%rax)
 39d:	00 00                	add    %al,(%rax)
 39f:	00 03                	add    %al,(%rbx)
 3a1:	00 00                	add    %al,(%rax)
 3a3:	00 02                	add    %al,(%rdx)
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 00                	add    %al,(%rax)
 3a9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    (%rax),%al
 3b2:	00 00                	add    %al,(%rax)
 3b4:	14 00                	adc    $0x0,%al
 3b6:	00 00                	add    %al,(%rax)
 3b8:	01 00                	add    %eax,(%rax)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	06                   	(bad)  
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 00                	add    %al,(%rax)
 3c1:	01 81 00 00 00 00    	add    %eax,0x0(%rcx)
 3c7:	02 14 00             	add    (%rax,%rax,1),%dl
 3ca:	00 00                	add    %al,(%rax)
 3cc:	15 00 00 00 d1       	adc    $0xd1000000,%eax
 3d1:	65 ce                	gs (bad) 
 3d3:	6d                   	insl   (%dx),%es:(%rdi)
 3d4:	39 f2                	cmp    %esi,%edx
 3d6:	8b                   	.byte 0x8b
 3d7:	1c                   	.byte 0x1c

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	67 00 00             	add    %al,(%eax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 39                	add    %bh,(%rcx)
 409:	00 00                	add    %al,(%rax)
 40b:	00 12                	add    %dl,(%rdx)
	...
 41d:	00 00                	add    %al,(%rax)
 41f:	00 c7                	add    %al,%bh
 421:	00 00                	add    %al,(%rax)
 423:	00 20                	add    %ah,(%rax)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 62 00             	add    %ah,0x0(%rdx)
 43a:	00 00                	add    %al,(%rax)
 43c:	12 00                	adc    (%rax),%al
	...
 44e:	00 00                	add    %al,(%rax)
 450:	8b 00                	mov    (%rax),%eax
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	4c 00 00             	rex.WR add %r8b,(%rax)
 46b:	00 12                	add    %dl,(%rdx)
	...
 47d:	00 00                	add    %al,(%rax)
 47f:	00 77 00             	add    %dh,0x0(%rdi)
 482:	00 00                	add    %al,(%rax)
 484:	12 00                	adc    (%rax),%al
	...
 496:	00 00                	add    %al,(%rax)
 498:	2b 00                	sub    (%rax),%eax
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	53                   	push   %rbx
 4b1:	00 00                	add    %al,(%rax)
 4b3:	00 12                	add    %dl,(%rdx)
	...
 4c5:	00 00                	add    %al,(%rax)
 4c7:	00 6c 00 00          	add    %ch,0x0(%rax,%rax,1)
 4cb:	00 12                	add    %dl,(%rdx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 10                	add    %dl,(%rax)
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 12                	add    %dl,(%rdx)
	...
 4f5:	00 00                	add    %al,(%rax)
 4f7:	00 4b 00             	add    %cl,0x0(%rbx)
 4fa:	00 00                	add    %al,(%rax)
 4fc:	12 00                	adc    (%rax),%al
	...
 50e:	00 00                	add    %al,(%rax)
 510:	e3 00                	jrcxz  512 <__abi_tag+0x186>
 512:	00 00                	add    %al,(%rax)
 514:	20 00                	and    %al,(%rax)
	...
 526:	00 00                	add    %al,(%rax)
 528:	15 00 00 00 12       	adc    $0x12000000,%eax
	...
 53d:	00 00                	add    %al,(%rax)
 53f:	00 5a 00             	add    %bl,0x0(%rdx)
 542:	00 00                	add    %al,(%rax)
 544:	12 00                	adc    (%rax),%al
	...
 556:	00 00                	add    %al,(%rax)
 558:	72 00                	jb     55a <__abi_tag+0x1ce>
 55a:	00 00                	add    %al,(%rax)
 55c:	12 00                	adc    (%rax),%al
	...
 56e:	00 00                	add    %al,(%rax)
 570:	84 00                	test   %al,(%rax)
 572:	00 00                	add    %al,(%rax)
 574:	12 00                	adc    (%rax),%al
	...
 586:	00 00                	add    %al,(%rax)
 588:	1c 00                	sbb    $0x0,%al
 58a:	00 00                	add    %al,(%rax)
 58c:	12 00                	adc    (%rax),%al
	...
 59e:	00 00                	add    %al,(%rax)
 5a0:	f2 00 00             	repnz add %al,(%rax)
 5a3:	00 20                	add    %ah,(%rax)
	...
 5b5:	00 00                	add    %al,(%rax)
 5b7:	00 01                	add    %al,(%rcx)
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 22                	add    %ah,(%rdx)
	...
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 7d 00             	add    %bh,0x0(%rbp)
 5d2:	00 00                	add    %al,(%rax)
 5d4:	11 00                	adc    %eax,(%rax)
 5d6:	1a 00                	sbb    (%rax),%al
 5d8:	20 50 00             	and    %dl,0x0(%rax)
 5db:	00 00                	add    %al,(%rax)
 5dd:	00 00                	add    %al,(%rax)
 5df:	00 08                	add    %cl,(%rax)
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 00                	add    %al,(%rax)
 5e5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

00000000000005e8 <.dynstr>:
 5e8:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5eb:	63 78 61             	movsxd 0x61(%rax),%edi
 5ee:	5f                   	pop    %rdi
 5ef:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5f5:	7a 65                	jp     65c <__abi_tag+0x2d0>
 5f7:	00 72 65             	add    %dh,0x65(%rdx)
 5fa:	61                   	(bad)  
 5fb:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 5ff:	6c                   	insb   (%dx),%es:(%rdi)
 600:	6c                   	insb   (%dx),%es:(%rdi)
 601:	6f                   	outsl  %ds:(%rsi),(%dx)
 602:	63 00                	movsxd (%rax),%eax
 604:	70 6f                	jo     675 <__abi_tag+0x2e9>
 606:	73 69                	jae    671 <__abi_tag+0x2e5>
 608:	78 5f                	js     669 <__abi_tag+0x2dd>
 60a:	6d                   	insl   (%dx),%es:(%rdi)
 60b:	65 6d                	gs insl (%dx),%es:(%rdi)
 60d:	61                   	(bad)  
 60e:	6c                   	insb   (%dx),%es:(%rdi)
 60f:	69 67 6e 00 5f 5f 61 	imul   $0x615f5f00,0x6e(%rdi),%esp
 616:	73 73                	jae    68b <__abi_tag+0x2ff>
 618:	65 72 74             	gs jb  68f <__abi_tag+0x303>
 61b:	5f                   	pop    %rdi
 61c:	66 61                	data16 (bad) 
 61e:	69 6c 00 5f 5f 6c 69 	imul   $0x62696c5f,0x5f(%rax,%rax,1),%ebp
 625:	62 
 626:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 629:	74 61                	je     68c <__abi_tag+0x300>
 62b:	72 74                	jb     6a1 <__abi_tag+0x315>
 62d:	5f                   	pop    %rdi
 62e:	6d                   	insl   (%dx),%es:(%rdi)
 62f:	61                   	(bad)  
 630:	69 6e 00 66 70 72 69 	imul   $0x69727066,0x0(%rsi),%ebp
 637:	6e                   	outsb  %ds:(%rsi),(%dx)
 638:	74 66                	je     6a0 <__abi_tag+0x314>
 63a:	00 6d 65             	add    %ch,0x65(%rbp)
 63d:	6d                   	insl   (%dx),%es:(%rdi)
 63e:	73 65                	jae    6a5 <__abi_tag+0x319>
 640:	74 00                	je     642 <__abi_tag+0x2b6>
 642:	6d                   	insl   (%dx),%es:(%rdi)
 643:	61                   	(bad)  
 644:	64 76 69             	fs jbe 6b0 <__abi_tag+0x324>
 647:	73 65                	jae    6ae <__abi_tag+0x322>
 649:	00 70 75             	add    %dh,0x75(%rax)
 64c:	74 73                	je     6c1 <__abi_tag+0x335>
 64e:	00 66 72             	add    %ah,0x72(%rsi)
 651:	65 65 00 63 6c       	gs add %ah,%gs:0x6c(%rbx)
 656:	6f                   	outsl  %ds:(%rsi),(%dx)
 657:	73 65                	jae    6be <__abi_tag+0x332>
 659:	00 6f 70             	add    %ch,0x70(%rdi)
 65c:	65 6e                	outsb  %gs:(%rsi),(%dx)
 65e:	00 6c 73 65          	add    %ch,0x65(%rbx,%rsi,2)
 662:	65 6b 00 73          	imul   $0x73,%gs:(%rax),%eax
 666:	74 64                	je     6cc <__abi_tag+0x340>
 668:	65 72 72             	gs jb  6dd <__abi_tag+0x351>
 66b:	00 66 77             	add    %ah,0x77(%rsi)
 66e:	72 69                	jb     6d9 <__abi_tag+0x34d>
 670:	74 65                	je     6d7 <__abi_tag+0x34b>
 672:	00 5f 5f             	add    %bl,0x5f(%rdi)
 675:	73 74                	jae    6eb <__abi_tag+0x35f>
 677:	61                   	(bad)  
 678:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 67b:	63 68 6b             	movsxd 0x6b(%rax),%ebp
 67e:	5f                   	pop    %rdi
 67f:	66 61                	data16 (bad) 
 681:	69 6c 00 6c 69 62 63 	imul   $0x2e636269,0x6c(%rax,%rax,1),%ebp
 688:	2e 
 689:	73 6f                	jae    6fa <__abi_tag+0x36e>
 68b:	2e 36 00 47 4c       	cs ss add %al,0x4c(%rdi)
 690:	49                   	rex.WB
 691:	42                   	rex.X
 692:	43 5f                	rex.XB pop %r15
 694:	32 2e                	xor    (%rsi),%ch
 696:	34 00                	xor    $0x0,%al
 698:	47                   	rex.RXB
 699:	4c                   	rex.WR
 69a:	49                   	rex.WB
 69b:	42                   	rex.X
 69c:	43 5f                	rex.XB pop %r15
 69e:	32 2e                	xor    (%rsi),%ch
 6a0:	33 34 00             	xor    (%rax,%rax,1),%esi
 6a3:	47                   	rex.RXB
 6a4:	4c                   	rex.WR
 6a5:	49                   	rex.WB
 6a6:	42                   	rex.X
 6a7:	43 5f                	rex.XB pop %r15
 6a9:	32 2e                	xor    (%rsi),%ch
 6ab:	32 2e                	xor    (%rsi),%ch
 6ad:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 6b2:	4d 5f                	rex.WRB pop %r15
 6b4:	64 65 72 65          	fs gs jb 71d <__abi_tag+0x391>
 6b8:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 6bf:	4d 
 6c0:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 6c2:	6f                   	outsl  %ds:(%rsi),(%dx)
 6c3:	6e                   	outsb  %ds:(%rsi),(%dx)
 6c4:	65 54                	gs push %rsp
 6c6:	61                   	(bad)  
 6c7:	62                   	(bad)  
 6c8:	6c                   	insb   (%dx),%es:(%rdi)
 6c9:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 6cd:	67 6d                	insl   (%dx),%es:(%edi)
 6cf:	6f                   	outsl  %ds:(%rsi),(%dx)
 6d0:	6e                   	outsb  %ds:(%rsi),(%dx)
 6d1:	5f                   	pop    %rdi
 6d2:	73 74                	jae    748 <__abi_tag+0x3bc>
 6d4:	61                   	(bad)  
 6d5:	72 74                	jb     74b <__abi_tag+0x3bf>
 6d7:	5f                   	pop    %rdi
 6d8:	5f                   	pop    %rdi
 6d9:	00 5f 49             	add    %bl,0x49(%rdi)
 6dc:	54                   	push   %rsp
 6dd:	4d 5f                	rex.WRB pop %r15
 6df:	72 65                	jb     746 <__abi_tag+0x3ba>
 6e1:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 6e8:	4d 
 6e9:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 6eb:	6f                   	outsl  %ds:(%rsi),(%dx)
 6ec:	6e                   	outsb  %ds:(%rsi),(%dx)
 6ed:	65 54                	gs push %rsp
 6ef:	61                   	(bad)  
 6f0:	62                   	.byte 0x62
 6f1:	6c                   	insb   (%dx),%es:(%rdi)
 6f2:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000006f4 <.gnu.version>:
 6f4:	00 00                	add    %al,(%rax)
 6f6:	02 00                	add    (%rax),%al
 6f8:	03 00                	add    (%rax),%eax
 6fa:	01 00                	add    %eax,(%rax)
 6fc:	02 00                	add    (%rax),%al
 6fe:	04 00                	add    $0x0,%al
 700:	02 00                	add    (%rax),%al
 702:	02 00                	add    (%rax),%al
 704:	02 00                	add    (%rax),%al
 706:	02 00                	add    (%rax),%al
 708:	02 00                	add    (%rax),%al
 70a:	02 00                	add    (%rax),%al
 70c:	02 00                	add    (%rax),%al
 70e:	01 00                	add    %eax,(%rax)
 710:	02 00                	add    (%rax),%al
 712:	02 00                	add    (%rax),%al
 714:	02 00                	add    (%rax),%al
 716:	02 00                	add    (%rax),%al
 718:	02 00                	add    (%rax),%al
 71a:	01 00                	add    %eax,(%rax)
 71c:	02 00                	add    (%rax),%al
 71e:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000720 <.gnu.version_r>:
 720:	01 00                	add    %eax,(%rax)
 722:	03 00                	add    (%rax),%eax
 724:	9c                   	pushf  
 725:	00 00                	add    %al,(%rax)
 727:	00 10                	add    %dl,(%rax)
 729:	00 00                	add    %al,(%rax)
 72b:	00 00                	add    %al,(%rax)
 72d:	00 00                	add    %al,(%rax)
 72f:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 732:	69 0d 00 00 04 00 a6 	imul   $0xa6,0x40000(%rip),%ecx        # 4073c <_end+0x3b70c>
 739:	00 00 00 
 73c:	10 00                	adc    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	b4 91                	mov    $0x91,%ah
 742:	96                   	xchg   %eax,%esi
 743:	06                   	(bad)  
 744:	00 00                	add    %al,(%rax)
 746:	03 00                	add    (%rax),%eax
 748:	b0 00                	mov    $0x0,%al
 74a:	00 00                	add    %al,(%rax)
 74c:	10 00                	adc    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	75 1a                	jne    76c <__abi_tag+0x3e0>
 752:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 758:	bb 00 00 00 00       	mov    $0x0,%ebx
 75d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000760 <.rela.dyn>:
 760:	48                   	rex.W
 761:	4d 00 00             	rex.WRB add %r8b,(%r8)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	08 00                	or     %al,(%rax)
 76a:	00 00                	add    %al,(%rax)
 76c:	00 00                	add    %al,(%rax)
 76e:	00 00                	add    %al,(%rax)
 770:	00 13                	add    %dl,(%rbx)
 772:	00 00                	add    %al,(%rax)
 774:	00 00                	add    %al,(%rax)
 776:	00 00                	add    %al,(%rax)
 778:	50                   	push   %rax
 779:	4d 00 00             	rex.WRB add %r8b,(%r8)
 77c:	00 00                	add    %al,(%rax)
 77e:	00 00                	add    %al,(%rax)
 780:	08 00                	or     %al,(%rax)
 782:	00 00                	add    %al,(%rax)
 784:	00 00                	add    %al,(%rax)
 786:	00 00                	add    %al,(%rax)
 788:	c0 12 00             	rclb   $0x0,(%rdx)
 78b:	00 00                	add    %al,(%rax)
 78d:	00 00                	add    %al,(%rax)
 78f:	00 08                	add    %cl,(%rax)
 791:	50                   	push   %rax
 792:	00 00                	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	08 00                	or     %al,(%rax)
 79a:	00 00                	add    %al,(%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	08 50 00             	or     %dl,0x0(%rax)
 7a3:	00 00                	add    %al,(%rax)
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 d8                	add    %bl,%al
 7a9:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	06                   	(bad)  
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 02                	add    %al,(%rdx)
	...
 7bd:	00 00                	add    %al,(%rax)
 7bf:	00 e0                	add    %ah,%al
 7c1:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 7c4:	00 00                	add    %al,(%rax)
 7c6:	00 00                	add    %al,(%rax)
 7c8:	06                   	(bad)  
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 03                	add    %al,(%rbx)
	...
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 e8                	add    %ch,%al
 7d9:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	06                   	(bad)  
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 7e9 <__abi_tag+0x45d>
 7e9:	00 00                	add    %al,(%rax)
 7eb:	00 00                	add    %al,(%rax)
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 f0                	add    %dh,%al
 7f1:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	06                   	(bad)  
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 13                	add    %dl,(%rbx)
	...
 805:	00 00                	add    %al,(%rax)
 807:	00 f8                	add    %bh,%al
 809:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	06                   	(bad)  
 811:	00 00                	add    %al,(%rax)
 813:	00 14 00             	add    %dl,(%rax,%rax,1)
	...
 81e:	00 00                	add    %al,(%rax)
 820:	20 50 00             	and    %dl,0x0(%rax)
 823:	00 00                	add    %al,(%rax)
 825:	00 00                	add    %al,(%rax)
 827:	00 05 00 00 00 15    	add    %al,0x15000000(%rip)        # 1500082d <_end+0x14ffb7fd>
	...

Disassembly of section .rela.plt:

0000000000000838 <.rela.plt>:
 838:	60                   	(bad)  
 839:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	07                   	(bad)  
 841:	00 00                	add    %al,(%rax)
 843:	00 01                	add    %al,(%rcx)
	...
 84d:	00 00                	add    %al,(%rax)
 84f:	00 68 4f             	add    %ch,0x4f(%rax)
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	07                   	(bad)  
 859:	00 00                	add    %al,(%rax)
 85b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 866:	00 00                	add    %al,(%rax)
 868:	70 4f                	jo     8b9 <__abi_tag+0x52d>
 86a:	00 00                	add    %al,(%rax)
 86c:	00 00                	add    %al,(%rax)
 86e:	00 00                	add    %al,(%rax)
 870:	07                   	(bad)  
 871:	00 00                	add    %al,(%rax)
 873:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 879 <__abi_tag+0x4ed>
 879:	00 00                	add    %al,(%rax)
 87b:	00 00                	add    %al,(%rax)
 87d:	00 00                	add    %al,(%rax)
 87f:	00 78 4f             	add    %bh,0x4f(%rax)
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	07                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 06                	add    %al,(%rsi)
	...
 895:	00 00                	add    %al,(%rax)
 897:	00 80 4f 00 00 00    	add    %al,0x4f(%rax)
 89d:	00 00                	add    %al,(%rax)
 89f:	00 07                	add    %al,(%rdi)
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 07                	add    %al,(%rdi)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 88 4f 00 00 00    	add    %cl,0x4f(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 07                	add    %al,(%rdi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 08                	add    %cl,(%rax)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 90 4f 00 00 00    	add    %dl,0x4f(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 07                	add    %al,(%rdi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 09                	add    %cl,(%rcx)
	...
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 98 4f 00 00 00    	add    %bl,0x4f(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 07                	add    %al,(%rdi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 0a                	add    %cl,(%rdx)
	...
 8f5:	00 00                	add    %al,(%rax)
 8f7:	00 a0 4f 00 00 00    	add    %ah,0x4f(%rax)
 8fd:	00 00                	add    %al,(%rax)
 8ff:	00 07                	add    %al,(%rdi)
 901:	00 00                	add    %al,(%rax)
 903:	00 0b                	add    %cl,(%rbx)
	...
 90d:	00 00                	add    %al,(%rax)
 90f:	00 a8 4f 00 00 00    	add    %ch,0x4f(%rax)
 915:	00 00                	add    %al,(%rax)
 917:	00 07                	add    %al,(%rdi)
 919:	00 00                	add    %al,(%rax)
 91b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 926:	00 00                	add    %al,(%rax)
 928:	b0 4f                	mov    $0x4f,%al
 92a:	00 00                	add    %al,(%rax)
 92c:	00 00                	add    %al,(%rax)
 92e:	00 00                	add    %al,(%rax)
 930:	07                   	(bad)  
 931:	00 00                	add    %al,(%rax)
 933:	00 0e                	add    %cl,(%rsi)
	...
 93d:	00 00                	add    %al,(%rax)
 93f:	00 b8 4f 00 00 00    	add    %bh,0x4f(%rax)
 945:	00 00                	add    %al,(%rax)
 947:	00 07                	add    %al,(%rdi)
 949:	00 00                	add    %al,(%rax)
 94b:	00 0f                	add    %cl,(%rdi)
	...
 955:	00 00                	add    %al,(%rax)
 957:	00 c0                	add    %al,%al
 959:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 95c:	00 00                	add    %al,(%rax)
 95e:	00 00                	add    %al,(%rax)
 960:	07                   	(bad)  
 961:	00 00                	add    %al,(%rax)
 963:	00 10                	add    %dl,(%rax)
	...
 96d:	00 00                	add    %al,(%rax)
 96f:	00 c8                	add    %cl,%al
 971:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 974:	00 00                	add    %al,(%rax)
 976:	00 00                	add    %al,(%rax)
 978:	07                   	(bad)  
 979:	00 00                	add    %al,(%rax)
 97b:	00 11                	add    %dl,(%rcx)
	...
 985:	00 00                	add    %al,(%rax)
 987:	00 d0                	add    %dl,%al
 989:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 98c:	00 00                	add    %al,(%rax)
 98e:	00 00                	add    %al,(%rax)
 990:	07                   	(bad)  
 991:	00 00                	add    %al,(%rax)
 993:	00 12                	add    %dl,(%rdx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 3f 00 00 	mov    0x3fd9(%rip),%rax        # 4fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 2a 3f 00 00    	push   0x3f2a(%rip)        # 4f50 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 2b 3f 00 00 	bnd jmp *0x3f2b(%rip)        # 4f58 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	push   $0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ff:	90                   	nop
    1100:	f3 0f 1e fa          	endbr64 
    1104:	68 0d 00 00 00       	push   $0xd
    1109:	f2 e9 11 ff ff ff    	bnd jmp 1020 <_init+0x20>
    110f:	90                   	nop
    1110:	f3 0f 1e fa          	endbr64 
    1114:	68 0e 00 00 00       	push   $0xe
    1119:	f2 e9 01 ff ff ff    	bnd jmp 1020 <_init+0x20>
    111f:	90                   	nop

Disassembly of section .plt.got:

0000000000001120 <__cxa_finalize@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 cd 3e 00 00 	bnd jmp *0x3ecd(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001130 <free@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 25 3e 00 00 	bnd jmp *0x3e25(%rip)        # 4f60 <free@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <puts@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 1d 3e 00 00 	bnd jmp *0x3e1d(%rip)        # 4f68 <puts@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <__stack_chk_fail@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 15 3e 00 00 	bnd jmp *0x3e15(%rip)        # 4f70 <__stack_chk_fail@GLIBC_2.4>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <printf@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 0d 3e 00 00 	bnd jmp *0x3e0d(%rip)        # 4f78 <printf@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <lseek@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 05 3e 00 00 	bnd jmp *0x3e05(%rip)        # 4f80 <lseek@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <__assert_fail@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 fd 3d 00 00 	bnd jmp *0x3dfd(%rip)        # 4f88 <__assert_fail@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <memset@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 f5 3d 00 00 	bnd jmp *0x3df5(%rip)        # 4f90 <memset@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <close@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 ed 3d 00 00 	bnd jmp *0x3ded(%rip)        # 4f98 <close@GLIBC_2.2.5>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <read@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 e5 3d 00 00 	bnd jmp *0x3de5(%rip)        # 4fa0 <read@GLIBC_2.2.5>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011c0 <fprintf@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 dd 3d 00 00 	bnd jmp *0x3ddd(%rip)        # 4fa8 <fprintf@GLIBC_2.2.5>
    11cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011d0 <malloc@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 d5 3d 00 00 	bnd jmp *0x3dd5(%rip)        # 4fb0 <malloc@GLIBC_2.2.5>
    11db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011e0 <madvise@plt>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	f2 ff 25 cd 3d 00 00 	bnd jmp *0x3dcd(%rip)        # 4fb8 <madvise@GLIBC_2.2.5>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <open@plt>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	f2 ff 25 c5 3d 00 00 	bnd jmp *0x3dc5(%rip)        # 4fc0 <open@GLIBC_2.2.5>
    11fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001200 <fwrite@plt>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	f2 ff 25 bd 3d 00 00 	bnd jmp *0x3dbd(%rip)        # 4fc8 <fwrite@GLIBC_2.2.5>
    120b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001210 <posix_memalign@plt>:
    1210:	f3 0f 1e fa          	endbr64 
    1214:	f2 ff 25 b5 3d 00 00 	bnd jmp *0x3db5(%rip)        # 4fd0 <posix_memalign@GLIBC_2.2.5>
    121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001220 <_start>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	31 ed                	xor    %ebp,%ebp
    1226:	49 89 d1             	mov    %rdx,%r9
    1229:	5e                   	pop    %rsi
    122a:	48 89 e2             	mov    %rsp,%rdx
    122d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1231:	50                   	push   %rax
    1232:	54                   	push   %rsp
    1233:	45 31 c0             	xor    %r8d,%r8d
    1236:	31 c9                	xor    %ecx,%ecx
    1238:	48 8d 3d 01 12 00 00 	lea    0x1201(%rip),%rdi        # 2440 <main>
    123f:	ff 15 93 3d 00 00    	call   *0x3d93(%rip)        # 4fd8 <__libc_start_main@GLIBC_2.34>
    1245:	f4                   	hlt    
    1246:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    124d:	00 00 00 

0000000000001250 <deregister_tm_clones>:
    1250:	48 8d 3d b9 3d 00 00 	lea    0x3db9(%rip),%rdi        # 5010 <__TMC_END__>
    1257:	48 8d 05 b2 3d 00 00 	lea    0x3db2(%rip),%rax        # 5010 <__TMC_END__>
    125e:	48 39 f8             	cmp    %rdi,%rax
    1261:	74 15                	je     1278 <deregister_tm_clones+0x28>
    1263:	48 8b 05 76 3d 00 00 	mov    0x3d76(%rip),%rax        # 4fe0 <_ITM_deregisterTMCloneTable@Base>
    126a:	48 85 c0             	test   %rax,%rax
    126d:	74 09                	je     1278 <deregister_tm_clones+0x28>
    126f:	ff e0                	jmp    *%rax
    1271:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1278:	c3                   	ret    
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001280 <register_tm_clones>:
    1280:	48 8d 3d 89 3d 00 00 	lea    0x3d89(%rip),%rdi        # 5010 <__TMC_END__>
    1287:	48 8d 35 82 3d 00 00 	lea    0x3d82(%rip),%rsi        # 5010 <__TMC_END__>
    128e:	48 29 fe             	sub    %rdi,%rsi
    1291:	48 89 f0             	mov    %rsi,%rax
    1294:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1298:	48 c1 f8 03          	sar    $0x3,%rax
    129c:	48 01 c6             	add    %rax,%rsi
    129f:	48 d1 fe             	sar    %rsi
    12a2:	74 14                	je     12b8 <register_tm_clones+0x38>
    12a4:	48 8b 05 45 3d 00 00 	mov    0x3d45(%rip),%rax        # 4ff0 <_ITM_registerTMCloneTable@Base>
    12ab:	48 85 c0             	test   %rax,%rax
    12ae:	74 08                	je     12b8 <register_tm_clones+0x38>
    12b0:	ff e0                	jmp    *%rax
    12b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12b8:	c3                   	ret    
    12b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012c0 <__do_global_dtors_aux>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	80 3d 5d 3d 00 00 00 	cmpb   $0x0,0x3d5d(%rip)        # 5028 <completed.0>
    12cb:	75 2b                	jne    12f8 <__do_global_dtors_aux+0x38>
    12cd:	55                   	push   %rbp
    12ce:	48 83 3d 22 3d 00 00 	cmpq   $0x0,0x3d22(%rip)        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    12d5:	00 
    12d6:	48 89 e5             	mov    %rsp,%rbp
    12d9:	74 0c                	je     12e7 <__do_global_dtors_aux+0x27>
    12db:	48 8b 3d 26 3d 00 00 	mov    0x3d26(%rip),%rdi        # 5008 <__dso_handle>
    12e2:	e8 39 fe ff ff       	call   1120 <__cxa_finalize@plt>
    12e7:	e8 64 ff ff ff       	call   1250 <deregister_tm_clones>
    12ec:	c6 05 35 3d 00 00 01 	movb   $0x1,0x3d35(%rip)        # 5028 <completed.0>
    12f3:	5d                   	pop    %rbp
    12f4:	c3                   	ret    
    12f5:	0f 1f 00             	nopl   (%rax)
    12f8:	c3                   	ret    
    12f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001300 <frame_dummy>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	e9 77 ff ff ff       	jmp    1280 <register_tm_clones>

0000000000001309 <dram_address>:
    1309:	f3 0f 1e fa          	endbr64 
    130d:	55                   	push   %rbp
    130e:	48 89 e5             	mov    %rsp,%rbp
    1311:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1315:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    131d:	48 c1 e8 06          	shr    $0x6,%rax
    1321:	48 89 c2             	mov    %rax,%rdx
    1324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1328:	48 c1 e8 0d          	shr    $0xd,%rax
    132c:	48 31 d0             	xor    %rdx,%rax
    132f:	83 e0 01             	and    $0x1,%eax
    1332:	48 89 c2             	mov    %rax,%rdx
    1335:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1339:	48 89 10             	mov    %rdx,(%rax)
    133c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1340:	48 c1 e8 0e          	shr    $0xe,%rax
    1344:	48 89 c2             	mov    %rax,%rdx
    1347:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    134b:	48 c1 e8 11          	shr    $0x11,%rax
    134f:	48 31 d0             	xor    %rdx,%rax
    1352:	83 e0 01             	and    $0x1,%eax
    1355:	48 89 c2             	mov    %rax,%rdx
    1358:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    135c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1364:	48 c1 e8 0f          	shr    $0xf,%rax
    1368:	48 89 c2             	mov    %rax,%rdx
    136b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    136f:	48 c1 e8 12          	shr    $0x12,%rax
    1373:	48 31 d0             	xor    %rdx,%rax
    1376:	83 e0 01             	and    $0x1,%eax
    1379:	48 89 c2             	mov    %rax,%rdx
    137c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1380:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1388:	48 c1 e8 10          	shr    $0x10,%rax
    138c:	48 89 c2             	mov    %rax,%rdx
    138f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1393:	48 c1 e8 13          	shr    $0x13,%rax
    1397:	48 31 d0             	xor    %rdx,%rax
    139a:	83 e0 01             	and    $0x1,%eax
    139d:	48 89 c2             	mov    %rax,%rdx
    13a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    13a4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    13a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    13ac:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    13b3:	00 
    13b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    13b8:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    13bf:	00 
    13c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13c4:	48 c1 e8 11          	shr    $0x11,%rax
    13c8:	25 ff ff 01 00       	and    $0x1ffff,%eax
    13cd:	48 89 c2             	mov    %rax,%rdx
    13d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    13d4:	48 89 50 38          	mov    %rdx,0x38(%rax)
    13d8:	90                   	nop
    13d9:	5d                   	pop    %rbp
    13da:	c3                   	ret    

00000000000013db <get_physical_addr>:
    13db:	f3 0f 1e fa          	endbr64 
    13df:	55                   	push   %rbp
    13e0:	48 89 e5             	mov    %rsp,%rbp
    13e3:	48 83 ec 40          	sub    $0x40,%rsp
    13e7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    13eb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    13f2:	00 00 
    13f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13f8:	31 c0                	xor    %eax,%eax
    13fa:	be 00 00 00 00       	mov    $0x0,%esi
    13ff:	48 8d 05 0a 1c 00 00 	lea    0x1c0a(%rip),%rax        # 3010 <_IO_stdin_used+0x10>
    1406:	48 89 c7             	mov    %rax,%rdi
    1409:	b8 00 00 00 00       	mov    $0x0,%eax
    140e:	e8 dd fd ff ff       	call   11f0 <open@plt>
    1413:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    1416:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    141a:	79 28                	jns    1444 <get_physical_addr+0x69>
    141c:	48 8d 05 bd 1d 00 00 	lea    0x1dbd(%rip),%rax        # 31e0 <__PRETTY_FUNCTION__.0>
    1423:	48 89 c1             	mov    %rax,%rcx
    1426:	ba 6e 00 00 00       	mov    $0x6e,%edx
    142b:	48 8d 05 f1 1b 00 00 	lea    0x1bf1(%rip),%rax        # 3023 <_IO_stdin_used+0x23>
    1432:	48 89 c6             	mov    %rax,%rsi
    1435:	48 8d 05 f9 1b 00 00 	lea    0x1bf9(%rip),%rax        # 3035 <_IO_stdin_used+0x35>
    143c:	48 89 c7             	mov    %rax,%rdi
    143f:	e8 3c fd ff ff       	call   1180 <__assert_fail@plt>
    1444:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1448:	48 c1 e8 0c          	shr    $0xc,%rax
    144c:	48 c1 e0 03          	shl    $0x3,%rax
    1450:	48 89 c1             	mov    %rax,%rcx
    1453:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1456:	ba 00 00 00 00       	mov    $0x0,%edx
    145b:	48 89 ce             	mov    %rcx,%rsi
    145e:	89 c7                	mov    %eax,%edi
    1460:	e8 0b fd ff ff       	call   1170 <lseek@plt>
    1465:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1469:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    146e:	79 28                	jns    1498 <get_physical_addr+0xbd>
    1470:	48 8d 05 69 1d 00 00 	lea    0x1d69(%rip),%rax        # 31e0 <__PRETTY_FUNCTION__.0>
    1477:	48 89 c1             	mov    %rax,%rcx
    147a:	ba 71 00 00 00       	mov    $0x71,%edx
    147f:	48 8d 05 9d 1b 00 00 	lea    0x1b9d(%rip),%rax        # 3023 <_IO_stdin_used+0x23>
    1486:	48 89 c6             	mov    %rax,%rsi
    1489:	48 8d 05 ad 1b 00 00 	lea    0x1bad(%rip),%rax        # 303d <_IO_stdin_used+0x3d>
    1490:	48 89 c7             	mov    %rax,%rdi
    1493:	e8 e8 fc ff ff       	call   1180 <__assert_fail@plt>
    1498:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    149c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    149f:	ba 08 00 00 00       	mov    $0x8,%edx
    14a4:	48 89 ce             	mov    %rcx,%rsi
    14a7:	89 c7                	mov    %eax,%edi
    14a9:	e8 02 fd ff ff       	call   11b0 <read@plt>
    14ae:	89 45 d8             	mov    %eax,-0x28(%rbp)
    14b1:	83 7d d8 08          	cmpl   $0x8,-0x28(%rbp)
    14b5:	74 28                	je     14df <get_physical_addr+0x104>
    14b7:	48 8d 05 22 1d 00 00 	lea    0x1d22(%rip),%rax        # 31e0 <__PRETTY_FUNCTION__.0>
    14be:	48 89 c1             	mov    %rax,%rcx
    14c1:	ba 74 00 00 00       	mov    $0x74,%edx
    14c6:	48 8d 05 56 1b 00 00 	lea    0x1b56(%rip),%rax        # 3023 <_IO_stdin_used+0x23>
    14cd:	48 89 c6             	mov    %rax,%rsi
    14d0:	48 8d 05 6f 1b 00 00 	lea    0x1b6f(%rip),%rax        # 3046 <_IO_stdin_used+0x46>
    14d7:	48 89 c7             	mov    %rax,%rdi
    14da:	e8 a1 fc ff ff       	call   1180 <__assert_fail@plt>
    14df:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    14e2:	89 c7                	mov    %eax,%edi
    14e4:	e8 b7 fc ff ff       	call   11a0 <close@plt>
    14e9:	89 45 dc             	mov    %eax,-0x24(%rbp)
    14ec:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    14f0:	74 28                	je     151a <get_physical_addr+0x13f>
    14f2:	48 8d 05 e7 1c 00 00 	lea    0x1ce7(%rip),%rax        # 31e0 <__PRETTY_FUNCTION__.0>
    14f9:	48 89 c1             	mov    %rax,%rcx
    14fc:	ba 76 00 00 00       	mov    $0x76,%edx
    1501:	48 8d 05 1b 1b 00 00 	lea    0x1b1b(%rip),%rax        # 3023 <_IO_stdin_used+0x23>
    1508:	48 89 c6             	mov    %rax,%rsi
    150b:	48 8d 05 3d 1b 00 00 	lea    0x1b3d(%rip),%rax        # 304f <_IO_stdin_used+0x4f>
    1512:	48 89 c7             	mov    %rax,%rdi
    1515:	e8 66 fc ff ff       	call   1180 <__assert_fail@plt>
    151a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    151e:	48 85 c0             	test   %rax,%rax
    1521:	78 28                	js     154b <get_physical_addr+0x170>
    1523:	48 8d 05 b6 1c 00 00 	lea    0x1cb6(%rip),%rax        # 31e0 <__PRETTY_FUNCTION__.0>
    152a:	48 89 c1             	mov    %rax,%rcx
    152d:	ba 79 00 00 00       	mov    $0x79,%edx
    1532:	48 8d 05 ea 1a 00 00 	lea    0x1aea(%rip),%rax        # 3023 <_IO_stdin_used+0x23>
    1539:	48 89 c6             	mov    %rax,%rsi
    153c:	48 8d 05 14 1b 00 00 	lea    0x1b14(%rip),%rax        # 3057 <_IO_stdin_used+0x57>
    1543:	48 89 c7             	mov    %rax,%rdi
    1546:	e8 35 fc ff ff       	call   1180 <__assert_fail@plt>
    154b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    154f:	48 ba ff ff ff ff ff 	movabs $0x3fffffffffffff,%rdx
    1556:	ff 3f 00 
    1559:	48 21 d0             	and    %rdx,%rax
    155c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1560:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1564:	48 c1 e0 0c          	shl    $0xc,%rax
    1568:	48 89 c2             	mov    %rax,%rdx
    156b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    156f:	25 ff 0f 00 00       	and    $0xfff,%eax
    1574:	48 09 d0             	or     %rdx,%rax
    1577:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    157b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1582:	00 00 
    1584:	74 05                	je     158b <get_physical_addr+0x1b0>
    1586:	e8 c5 fb ff ff       	call   1150 <__stack_chk_fail@plt>
    158b:	c9                   	leave  
    158c:	c3                   	ret    

000000000000158d <flush_chunck>:
    158d:	f3 0f 1e fa          	endbr64 
    1591:	55                   	push   %rbp
    1592:	48 89 e5             	mov    %rsp,%rbp
    1595:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1599:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    159c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    15a3:	eb 1d                	jmp    15c2 <flush_chunck+0x35>
    15a5:	8b 45 f4             	mov    -0xc(%rbp),%eax
    15a8:	48 63 d0             	movslq %eax,%rdx
    15ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    15af:	48 01 d0             	add    %rdx,%rax
    15b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    15b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15ba:	0f ae 38             	clflush (%rax)
    15bd:	90                   	nop
    15be:	83 45 f4 40          	addl   $0x40,-0xc(%rbp)
    15c2:	8b 45 f4             	mov    -0xc(%rbp),%eax
    15c5:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    15c8:	77 db                	ja     15a5 <flush_chunck+0x18>
    15ca:	90                   	nop
    15cb:	90                   	nop
    15cc:	5d                   	pop    %rbp
    15cd:	c3                   	ret    

00000000000015ce <check_consecutive>:
    15ce:	f3 0f 1e fa          	endbr64 
    15d2:	55                   	push   %rbp
    15d3:	48 89 e5             	mov    %rsp,%rbp
    15d6:	48 83 ec 30          	sub    $0x30,%rsp
    15da:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    15de:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    15e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15e6:	48 89 c7             	mov    %rax,%rdi
    15e9:	e8 ed fd ff ff       	call   13db <get_physical_addr>
    15ee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    15f2:	c6 45 e7 01          	movb   $0x1,-0x19(%rbp)
    15f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15fa:	48 05 00 10 00 00    	add    $0x1000,%rax
    1600:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1604:	eb 34                	jmp    163a <check_consecutive+0x6c>
    1606:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    160a:	48 89 c7             	mov    %rax,%rdi
    160d:	e8 c9 fd ff ff       	call   13db <get_physical_addr>
    1612:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1616:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    161a:	48 05 00 10 00 00    	add    $0x1000,%rax
    1620:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    1624:	74 04                	je     162a <check_consecutive+0x5c>
    1626:	c6 45 e7 00          	movb   $0x0,-0x19(%rbp)
    162a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    162e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1632:	48 81 45 f0 00 10 00 	addq   $0x1000,-0x10(%rbp)
    1639:	00 
    163a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    163e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1642:	48 01 d0             	add    %rdx,%rax
    1645:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    1649:	72 bb                	jb     1606 <check_consecutive+0x38>
    164b:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
    164f:	c9                   	leave  
    1650:	c3                   	ret    

0000000000001651 <alloc_buffer>:
    1651:	f3 0f 1e fa          	endbr64 
    1655:	55                   	push   %rbp
    1656:	48 89 e5             	mov    %rsp,%rbp
    1659:	48 83 ec 20          	sub    $0x20,%rsp
    165d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1661:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1668:	e9 04 01 00 00       	jmp    1771 <alloc_buffer+0x120>
    166d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1670:	48 98                	cltq   
    1672:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1679:	00 
    167a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    167e:	48 01 d0             	add    %rdx,%rax
    1681:	ba 00 00 20 00       	mov    $0x200000,%edx
    1686:	be 00 00 80 00       	mov    $0x800000,%esi
    168b:	48 89 c7             	mov    %rax,%rdi
    168e:	e8 7d fb ff ff       	call   1210 <posix_memalign@plt>
    1693:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1696:	48 98                	cltq   
    1698:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    169f:	00 
    16a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16a4:	48 01 d0             	add    %rdx,%rax
    16a7:	48 8b 00             	mov    (%rax),%rax
    16aa:	ba 0e 00 00 00       	mov    $0xe,%edx
    16af:	be 00 00 80 00       	mov    $0x800000,%esi
    16b4:	48 89 c7             	mov    %rax,%rdi
    16b7:	e8 24 fb ff ff       	call   11e0 <madvise@plt>
    16bc:	83 f8 ff             	cmp    $0xffffffff,%eax
    16bf:	75 21                	jne    16e2 <alloc_buffer+0x91>
    16c1:	48 8b 05 58 39 00 00 	mov    0x3958(%rip),%rax        # 5020 <stderr@GLIBC_2.2.5>
    16c8:	8b 55 fc             	mov    -0x4(%rbp),%edx
    16cb:	48 8d 0d 9a 19 00 00 	lea    0x199a(%rip),%rcx        # 306c <_IO_stdin_used+0x6c>
    16d2:	48 89 ce             	mov    %rcx,%rsi
    16d5:	48 89 c7             	mov    %rax,%rdi
    16d8:	b8 00 00 00 00       	mov    $0x0,%eax
    16dd:	e8 de fa ff ff       	call   11c0 <fprintf@plt>
    16e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16e5:	48 98                	cltq   
    16e7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    16ee:	00 
    16ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    16f3:	48 01 d0             	add    %rdx,%rax
    16f6:	48 8b 00             	mov    (%rax),%rax
    16f9:	c6 00 0a             	movb   $0xa,(%rax)
    16fc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16ff:	48 98                	cltq   
    1701:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1708:	00 
    1709:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    170d:	48 01 d0             	add    %rdx,%rax
    1710:	48 8b 00             	mov    (%rax),%rax
    1713:	ba 00 00 20 00       	mov    $0x200000,%edx
    1718:	be ff 00 00 00       	mov    $0xff,%esi
    171d:	48 89 c7             	mov    %rax,%rdi
    1720:	e8 6b fa ff ff       	call   1190 <memset@plt>
    1725:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1728:	48 98                	cltq   
    172a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1731:	00 
    1732:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1736:	48 01 d0             	add    %rdx,%rax
    1739:	48 8b 00             	mov    (%rax),%rax
    173c:	be 00 00 20 00       	mov    $0x200000,%esi
    1741:	48 89 c7             	mov    %rax,%rdi
    1744:	e8 85 fe ff ff       	call   15ce <check_consecutive>
    1749:	84 c0                	test   %al,%al
    174b:	74 11                	je     175e <alloc_buffer+0x10d>
    174d:	48 8d 05 28 19 00 00 	lea    0x1928(%rip),%rax        # 307c <_IO_stdin_used+0x7c>
    1754:	48 89 c7             	mov    %rax,%rdi
    1757:	e8 e4 f9 ff ff       	call   1140 <puts@plt>
    175c:	eb 0f                	jmp    176d <alloc_buffer+0x11c>
    175e:	48 8d 05 1c 19 00 00 	lea    0x191c(%rip),%rax        # 3081 <_IO_stdin_used+0x81>
    1765:	48 89 c7             	mov    %rax,%rdi
    1768:	e8 d3 f9 ff ff       	call   1140 <puts@plt>
    176d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1771:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    1775:	0f 8e f2 fe ff ff    	jle    166d <alloc_buffer+0x1c>
    177b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    177f:	48 8b 00             	mov    (%rax),%rax
    1782:	48 85 c0             	test   %rax,%rax
    1785:	74 23                	je     17aa <alloc_buffer+0x159>
    1787:	48 8b 05 92 38 00 00 	mov    0x3892(%rip),%rax        # 5020 <stderr@GLIBC_2.2.5>
    178e:	48 89 c1             	mov    %rax,%rcx
    1791:	ba 11 00 00 00       	mov    $0x11,%edx
    1796:	be 01 00 00 00       	mov    $0x1,%esi
    179b:	48 8d 05 e9 18 00 00 	lea    0x18e9(%rip),%rax        # 308b <_IO_stdin_used+0x8b>
    17a2:	48 89 c7             	mov    %rax,%rdi
    17a5:	e8 56 fa ff ff       	call   1200 <fwrite@plt>
    17aa:	b8 00 00 00 00       	mov    $0x0,%eax
    17af:	c9                   	leave  
    17b0:	c3                   	ret    

00000000000017b1 <find_bank_conflict>:
    17b1:	f3 0f 1e fa          	endbr64 
    17b5:	55                   	push   %rbp
    17b6:	48 89 e5             	mov    %rsp,%rbp
    17b9:	53                   	push   %rbx
    17ba:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    17c1:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    17c5:	89 75 84             	mov    %esi,-0x7c(%rbp)
    17c8:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    17cf:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    17d6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    17dd:	48 c1 e0 0c          	shl    $0xc,%rax
    17e1:	48 89 c2             	mov    %rax,%rdx
    17e4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    17e8:	48 01 d0             	add    %rdx,%rax
    17eb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    17ef:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    17f6:	bf 40 00 00 00       	mov    $0x40,%edi
    17fb:	e8 d0 f9 ff ff       	call   11d0 <malloc@plt>
    1800:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    1804:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1808:	48 89 c7             	mov    %rax,%rdi
    180b:	e8 cb fb ff ff       	call   13db <get_physical_addr>
    1810:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1814:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    1818:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    181c:	48 89 d6             	mov    %rdx,%rsi
    181f:	48 89 c7             	mov    %rax,%rdi
    1822:	e8 e2 fa ff ff       	call   1309 <dram_address>
    1827:	48 8d 05 6f 18 00 00 	lea    0x186f(%rip),%rax        # 309d <_IO_stdin_used+0x9d>
    182e:	48 89 c7             	mov    %rax,%rdi
    1831:	e8 0a f9 ff ff       	call   1140 <puts@plt>
    1836:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    183a:	48 8b 78 38          	mov    0x38(%rax),%rdi
    183e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1842:	48 8b 70 18          	mov    0x18(%rax),%rsi
    1846:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    184a:	48 8b 48 10          	mov    0x10(%rax),%rcx
    184e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1852:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1856:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    185a:	48 8b 00             	mov    (%rax),%rax
    185d:	49 89 f9             	mov    %rdi,%r9
    1860:	49 89 f0             	mov    %rsi,%r8
    1863:	48 89 c6             	mov    %rax,%rsi
    1866:	48 8d 05 43 18 00 00 	lea    0x1843(%rip),%rax        # 30b0 <_IO_stdin_used+0xb0>
    186d:	48 89 c7             	mov    %rax,%rdi
    1870:	b8 00 00 00 00       	mov    $0x0,%eax
    1875:	e8 e6 f8 ff ff       	call   1160 <printf@plt>
    187a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    187e:	48 89 c6             	mov    %rax,%rsi
    1881:	48 8d 05 51 18 00 00 	lea    0x1851(%rip),%rax        # 30d9 <_IO_stdin_used+0xd9>
    1888:	48 89 c7             	mov    %rax,%rdi
    188b:	b8 00 00 00 00       	mov    $0x0,%eax
    1890:	e8 cb f8 ff ff       	call   1160 <printf@plt>
    1895:	48 8d 05 42 18 00 00 	lea    0x1842(%rip),%rax        # 30de <_IO_stdin_used+0xde>
    189c:	48 89 c7             	mov    %rax,%rdi
    189f:	e8 9c f8 ff ff       	call   1140 <puts@plt>
    18a4:	48 8d 05 50 18 00 00 	lea    0x1850(%rip),%rax        # 30fb <_IO_stdin_used+0xfb>
    18ab:	48 89 c7             	mov    %rax,%rdi
    18ae:	e8 8d f8 ff ff       	call   1140 <puts@plt>
    18b3:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    18ba:	e9 df 01 00 00       	jmp    1a9e <find_bank_conflict+0x2ed>
    18bf:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    18c6:	e9 bf 01 00 00       	jmp    1a8a <find_bank_conflict+0x2d9>
    18cb:	8b 45 9c             	mov    -0x64(%rbp),%eax
    18ce:	c1 e0 0c             	shl    $0xc,%eax
    18d1:	48 63 d0             	movslq %eax,%rdx
    18d4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    18d8:	48 01 c2             	add    %rax,%rdx
    18db:	8b 45 a0             	mov    -0x60(%rbp),%eax
    18de:	c1 e0 06             	shl    $0x6,%eax
    18e1:	48 98                	cltq   
    18e3:	48 01 d0             	add    %rdx,%rax
    18e6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    18ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    18ee:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    18f2:	0f 84 8d 01 00 00    	je     1a85 <find_bank_conflict+0x2d4>
    18f8:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    18ff:	00 
    1900:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
    1907:	eb 63                	jmp    196c <find_bank_conflict+0x1bb>
    1909:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    190d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1911:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1915:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1919:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    191d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    1921:	48 89 c3             	mov    %rax,%rbx
    1924:	0f ae 3b             	clflush (%rbx)
    1927:	0f ae 3e             	clflush (%rsi)
    192a:	0f ae e8             	lfence 
    192d:	0f 01 f9             	rdtscp 
    1930:	0f ae e8             	lfence 
    1933:	48 89 c7             	mov    %rax,%rdi
    1936:	48 8b 03             	mov    (%rbx),%rax
    1939:	48 8b 06             	mov    (%rsi),%rax
    193c:	0f ae e8             	lfence 
    193f:	0f 01 f9             	rdtscp 
    1942:	0f ae e8             	lfence 
    1945:	48 29 f8             	sub    %rdi,%rax
    1948:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    194c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1950:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1954:	48 81 7d d0 e8 03 00 	cmpq   $0x3e8,-0x30(%rbp)
    195b:	00 
    195c:	76 02                	jbe    1960 <find_bank_conflict+0x1af>
    195e:	eb 0c                	jmp    196c <find_bank_conflict+0x1bb>
    1960:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
    1964:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1968:	48 01 45 a8          	add    %rax,-0x58(%rbp)
    196c:	81 7d a4 3f 1f 00 00 	cmpl   $0x1f3f,-0x5c(%rbp)
    1973:	7e 94                	jle    1909 <find_bank_conflict+0x158>
    1975:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1979:	48 c1 e8 06          	shr    $0x6,%rax
    197d:	48 ba 7d 3f 35 5e ba 	movabs $0x20c49ba5e353f7d,%rdx
    1984:	49 0c 02 
    1987:	48 f7 e2             	mul    %rdx
    198a:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    198e:	48 81 7d a8 d6 01 00 	cmpq   $0x1d6,-0x58(%rbp)
    1995:	00 
    1996:	0f 86 ea 00 00 00    	jbe    1a86 <find_bank_conflict+0x2d5>
    199c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    19a0:	48 89 c7             	mov    %rax,%rdi
    19a3:	e8 33 fa ff ff       	call   13db <get_physical_addr>
    19a8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    19ac:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    19b0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    19b4:	48 89 d6             	mov    %rdx,%rsi
    19b7:	48 89 c7             	mov    %rax,%rdi
    19ba:	e8 4a f9 ff ff       	call   1309 <dram_address>
    19bf:	8b 45 98             	mov    -0x68(%rbp),%eax
    19c2:	89 c6                	mov    %eax,%esi
    19c4:	48 8d 05 46 17 00 00 	lea    0x1746(%rip),%rax        # 3111 <_IO_stdin_used+0x111>
    19cb:	48 89 c7             	mov    %rax,%rdi
    19ce:	b8 00 00 00 00       	mov    $0x0,%eax
    19d3:	e8 88 f7 ff ff       	call   1160 <printf@plt>
    19d8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    19dc:	48 8b 78 38          	mov    0x38(%rax),%rdi
    19e0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    19e4:	48 8b 70 18          	mov    0x18(%rax),%rsi
    19e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    19ec:	48 8b 48 10          	mov    0x10(%rax),%rcx
    19f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    19f4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    19f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    19fc:	48 8b 00             	mov    (%rax),%rax
    19ff:	49 89 f9             	mov    %rdi,%r9
    1a02:	49 89 f0             	mov    %rsi,%r8
    1a05:	48 89 c6             	mov    %rax,%rsi
    1a08:	48 8d 05 a1 16 00 00 	lea    0x16a1(%rip),%rax        # 30b0 <_IO_stdin_used+0xb0>
    1a0f:	48 89 c7             	mov    %rax,%rdi
    1a12:	b8 00 00 00 00       	mov    $0x0,%eax
    1a17:	e8 44 f7 ff ff       	call   1160 <printf@plt>
    1a1c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1a20:	48 89 c6             	mov    %rax,%rsi
    1a23:	48 8d 05 af 16 00 00 	lea    0x16af(%rip),%rax        # 30d9 <_IO_stdin_used+0xd9>
    1a2a:	48 89 c7             	mov    %rax,%rdi
    1a2d:	b8 00 00 00 00       	mov    $0x0,%eax
    1a32:	e8 29 f7 ff ff       	call   1160 <printf@plt>
    1a37:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1a3b:	48 89 c6             	mov    %rax,%rsi
    1a3e:	48 8d 05 d0 16 00 00 	lea    0x16d0(%rip),%rax        # 3115 <_IO_stdin_used+0x115>
    1a45:	48 89 c7             	mov    %rax,%rdi
    1a48:	b8 00 00 00 00       	mov    $0x0,%eax
    1a4d:	e8 0e f7 ff ff       	call   1160 <printf@plt>
    1a52:	48 8d 05 85 16 00 00 	lea    0x1685(%rip),%rax        # 30de <_IO_stdin_used+0xde>
    1a59:	48 89 c7             	mov    %rax,%rdi
    1a5c:	e8 df f6 ff ff       	call   1140 <puts@plt>
    1a61:	8b 45 98             	mov    -0x68(%rbp),%eax
    1a64:	48 98                	cltq   
    1a66:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1a6d:	00 
    1a6e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    1a75:	48 01 c2             	add    %rax,%rdx
    1a78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1a7c:	48 89 02             	mov    %rax,(%rdx)
    1a7f:	83 45 98 01          	addl   $0x1,-0x68(%rbp)
    1a83:	eb 01                	jmp    1a86 <find_bank_conflict+0x2d5>
    1a85:	90                   	nop
    1a86:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
    1a8a:	83 7d a0 01          	cmpl   $0x1,-0x60(%rbp)
    1a8e:	0f 8e 37 fe ff ff    	jle    18cb <find_bank_conflict+0x11a>
    1a94:	83 7d 98 63          	cmpl   $0x63,-0x68(%rbp)
    1a98:	7f 12                	jg     1aac <find_bank_conflict+0x2fb>
    1a9a:	83 45 9c 01          	addl   $0x1,-0x64(%rbp)
    1a9e:	8b 45 9c             	mov    -0x64(%rbp),%eax
    1aa1:	3b 45 84             	cmp    -0x7c(%rbp),%eax
    1aa4:	0f 8c 15 fe ff ff    	jl     18bf <find_bank_conflict+0x10e>
    1aaa:	eb 01                	jmp    1aad <find_bank_conflict+0x2fc>
    1aac:	90                   	nop
    1aad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1ab1:	48 89 c7             	mov    %rax,%rdi
    1ab4:	e8 77 f6 ff ff       	call   1130 <free@plt>
    1ab9:	8b 45 98             	mov    -0x68(%rbp),%eax
    1abc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1ac0:	c9                   	leave  
    1ac1:	c3                   	ret    

0000000000001ac2 <memory_template>:
    1ac2:	f3 0f 1e fa          	endbr64 
    1ac6:	55                   	push   %rbp
    1ac7:	48 89 e5             	mov    %rsp,%rbp
    1aca:	41 54                	push   %r12
    1acc:	53                   	push   %rbx
    1acd:	48 83 ec 60          	sub    $0x60,%rsp
    1ad1:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    1ad5:	89 75 94             	mov    %esi,-0x6c(%rbp)
    1ad8:	c7 45 a8 24 00 00 00 	movl   $0x24,-0x58(%rbp)
    1adf:	bf 28 00 00 00       	mov    $0x28,%edi
    1ae4:	e8 e7 f6 ff ff       	call   11d0 <malloc@plt>
    1ae9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1aed:	e9 d4 03 00 00       	jmp    1ec6 <memory_template+0x404>
    1af2:	48 8d 05 27 16 00 00 	lea    0x1627(%rip),%rax        # 3120 <_IO_stdin_used+0x120>
    1af9:	48 89 c7             	mov    %rax,%rdi
    1afc:	e8 3f f6 ff ff       	call   1140 <puts@plt>
    1b01:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1b04:	48 98                	cltq   
    1b06:	48 c1 e0 03          	shl    $0x3,%rax
    1b0a:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    1b0e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1b12:	48 01 d0             	add    %rdx,%rax
    1b15:	48 8b 00             	mov    (%rax),%rax
    1b18:	ba 00 10 00 00       	mov    $0x1000,%edx
    1b1d:	be ff 00 00 00       	mov    $0xff,%esi
    1b22:	48 89 c7             	mov    %rax,%rdi
    1b25:	e8 66 f6 ff ff       	call   1190 <memset@plt>
    1b2a:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1b2d:	48 98                	cltq   
    1b2f:	48 c1 e0 03          	shl    $0x3,%rax
    1b33:	48 8d 50 e8          	lea    -0x18(%rax),%rdx
    1b37:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1b3b:	48 01 d0             	add    %rdx,%rax
    1b3e:	48 8b 00             	mov    (%rax),%rax
    1b41:	ba 00 10 00 00       	mov    $0x1000,%edx
    1b46:	be ff 00 00 00       	mov    $0xff,%esi
    1b4b:	48 89 c7             	mov    %rax,%rdi
    1b4e:	e8 3d f6 ff ff       	call   1190 <memset@plt>
    1b53:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1b56:	48 98                	cltq   
    1b58:	48 c1 e0 03          	shl    $0x3,%rax
    1b5c:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    1b60:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1b64:	48 01 d0             	add    %rdx,%rax
    1b67:	48 8b 00             	mov    (%rax),%rax
    1b6a:	ba 00 10 00 00       	mov    $0x1000,%edx
    1b6f:	be ff 00 00 00       	mov    $0xff,%esi
    1b74:	48 89 c7             	mov    %rax,%rdi
    1b77:	e8 14 f6 ff ff       	call   1190 <memset@plt>
    1b7c:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1b7f:	48 98                	cltq   
    1b81:	48 c1 e0 03          	shl    $0x3,%rax
    1b85:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    1b89:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1b8d:	48 01 d0             	add    %rdx,%rax
    1b90:	48 8b 00             	mov    (%rax),%rax
    1b93:	ba 00 10 00 00       	mov    $0x1000,%edx
    1b98:	be ff 00 00 00       	mov    $0xff,%esi
    1b9d:	48 89 c7             	mov    %rax,%rdi
    1ba0:	e8 eb f5 ff ff       	call   1190 <memset@plt>
    1ba5:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1ba8:	48 98                	cltq   
    1baa:	48 83 c0 04          	add    $0x4,%rax
    1bae:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1bb5:	00 
    1bb6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1bba:	48 01 d0             	add    %rdx,%rax
    1bbd:	48 8b 00             	mov    (%rax),%rax
    1bc0:	ba 00 10 00 00       	mov    $0x1000,%edx
    1bc5:	be ff 00 00 00       	mov    $0xff,%esi
    1bca:	48 89 c7             	mov    %rax,%rdi
    1bcd:	e8 be f5 ff ff       	call   1190 <memset@plt>
    1bd2:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1bd5:	48 98                	cltq   
    1bd7:	48 83 c0 05          	add    $0x5,%rax
    1bdb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1be2:	00 
    1be3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1be7:	48 01 d0             	add    %rdx,%rax
    1bea:	48 8b 00             	mov    (%rax),%rax
    1bed:	ba 00 10 00 00       	mov    $0x1000,%edx
    1bf2:	be ff 00 00 00       	mov    $0xff,%esi
    1bf7:	48 89 c7             	mov    %rax,%rdi
    1bfa:	e8 91 f5 ff ff       	call   1190 <memset@plt>
    1bff:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1c02:	48 98                	cltq   
    1c04:	48 83 c0 06          	add    $0x6,%rax
    1c08:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1c0f:	00 
    1c10:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1c14:	48 01 d0             	add    %rdx,%rax
    1c17:	48 8b 00             	mov    (%rax),%rax
    1c1a:	ba 00 10 00 00       	mov    $0x1000,%edx
    1c1f:	be ff 00 00 00       	mov    $0xff,%esi
    1c24:	48 89 c7             	mov    %rax,%rdi
    1c27:	e8 64 f5 ff ff       	call   1190 <memset@plt>
    1c2c:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1c2f:	48 98                	cltq   
    1c31:	48 83 c0 07          	add    $0x7,%rax
    1c35:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1c3c:	00 
    1c3d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1c41:	48 01 d0             	add    %rdx,%rax
    1c44:	48 8b 00             	mov    (%rax),%rax
    1c47:	ba 00 10 00 00       	mov    $0x1000,%edx
    1c4c:	be ff 00 00 00       	mov    $0xff,%esi
    1c51:	48 89 c7             	mov    %rax,%rdi
    1c54:	e8 37 f5 ff ff       	call   1190 <memset@plt>
    1c59:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1c5c:	48 98                	cltq   
    1c5e:	48 c1 e0 03          	shl    $0x3,%rax
    1c62:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    1c66:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1c6a:	48 01 d0             	add    %rdx,%rax
    1c6d:	48 8b 10             	mov    (%rax),%rdx
    1c70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1c74:	48 89 10             	mov    %rdx,(%rax)
    1c77:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1c7a:	48 98                	cltq   
    1c7c:	48 83 c0 04          	add    $0x4,%rax
    1c80:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1c87:	00 
    1c88:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1c8c:	48 01 d0             	add    %rdx,%rax
    1c8f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1c93:	48 83 c2 08          	add    $0x8,%rdx
    1c97:	48 8b 00             	mov    (%rax),%rax
    1c9a:	48 89 02             	mov    %rax,(%rdx)
    1c9d:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1ca0:	48 98                	cltq   
    1ca2:	48 83 c0 08          	add    $0x8,%rax
    1ca6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1cad:	00 
    1cae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1cb2:	48 01 d0             	add    %rdx,%rax
    1cb5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1cb9:	48 83 c2 10          	add    $0x10,%rdx
    1cbd:	48 8b 00             	mov    (%rax),%rax
    1cc0:	48 89 02             	mov    %rax,(%rdx)
    1cc3:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    1cca:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    1cd1:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    1cd8:	e9 db 01 00 00       	jmp    1eb8 <memory_template+0x3f6>
    1cdd:	8b 55 a8             	mov    -0x58(%rbp),%edx
    1ce0:	8b 45 ac             	mov    -0x54(%rbp),%eax
    1ce3:	01 d0                	add    %edx,%eax
    1ce5:	48 98                	cltq   
    1ce7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1cee:	00 
    1cef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1cf3:	48 01 d0             	add    %rdx,%rax
    1cf6:	48 8b 00             	mov    (%rax),%rax
    1cf9:	ba 00 10 00 00       	mov    $0x1000,%edx
    1cfe:	be 00 00 00 00       	mov    $0x0,%esi
    1d03:	48 89 c7             	mov    %rax,%rdi
    1d06:	e8 85 f4 ff ff       	call   1190 <memset@plt>
    1d0b:	8b 55 a8             	mov    -0x58(%rbp),%edx
    1d0e:	8b 45 ac             	mov    -0x54(%rbp),%eax
    1d11:	01 d0                	add    %edx,%eax
    1d13:	48 98                	cltq   
    1d15:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1d1c:	00 
    1d1d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1d21:	48 01 d0             	add    %rdx,%rax
    1d24:	48 8b 00             	mov    (%rax),%rax
    1d27:	be 00 10 00 00       	mov    $0x1000,%esi
    1d2c:	48 89 c7             	mov    %rax,%rdi
    1d2f:	e8 59 f8 ff ff       	call   158d <flush_chunck>
    1d34:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1d37:	48 98                	cltq   
    1d39:	48 83 c0 04          	add    $0x4,%rax
    1d3d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1d44:	00 
    1d45:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1d49:	48 01 d0             	add    %rdx,%rax
    1d4c:	48 8b 00             	mov    (%rax),%rax
    1d4f:	8b 55 a8             	mov    -0x58(%rbp),%edx
    1d52:	48 63 d2             	movslq %edx,%rdx
    1d55:	48 c1 e2 03          	shl    $0x3,%rdx
    1d59:	48 8d 4a e0          	lea    -0x20(%rdx),%rcx
    1d5d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    1d61:	48 01 ca             	add    %rcx,%rdx
    1d64:	48 8b 12             	mov    (%rdx),%rdx
    1d67:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    1d6b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1d6f:	c7 45 c0 40 42 0f 00 	movl   $0xf4240,-0x40(%rbp)
    1d76:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    1d7d:	eb 32                	jmp    1db1 <memory_template+0x2ef>
    1d7f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1d83:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1d8b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1d8f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1d93:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    1d97:	48 89 d1             	mov    %rdx,%rcx
    1d9a:	48 89 f3             	mov    %rsi,%rbx
    1d9d:	0f ae 39             	clflush (%rcx)
    1da0:	0f ae 3b             	clflush (%rbx)
    1da3:	0f ae f0             	mfence 
    1da6:	48 8b 01             	mov    (%rcx),%rax
    1da9:	48 8b 03             	mov    (%rbx),%rax
    1dac:	90                   	nop
    1dad:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
    1db1:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1db4:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    1db7:	7f c6                	jg     1d7f <memory_template+0x2bd>
    1db9:	90                   	nop
    1dba:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
    1dc1:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    1dc8:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    1dcf:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    1dd6:	e9 cc 00 00 00       	jmp    1ea7 <memory_template+0x3e5>
    1ddb:	8b 55 a8             	mov    -0x58(%rbp),%edx
    1dde:	8b 45 ac             	mov    -0x54(%rbp),%eax
    1de1:	01 d0                	add    %edx,%eax
    1de3:	48 98                	cltq   
    1de5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1dec:	00 
    1ded:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1df1:	48 01 d0             	add    %rdx,%rax
    1df4:	48 8b 10             	mov    (%rax),%rdx
    1df7:	8b 45 b0             	mov    -0x50(%rbp),%eax
    1dfa:	48 98                	cltq   
    1dfc:	48 01 d0             	add    %rdx,%rax
    1dff:	0f b6 00             	movzbl (%rax),%eax
    1e02:	84 c0                	test   %al,%al
    1e04:	0f 84 99 00 00 00    	je     1ea3 <memory_template+0x3e1>
    1e0a:	8b 55 a8             	mov    -0x58(%rbp),%edx
    1e0d:	8b 45 ac             	mov    -0x54(%rbp),%eax
    1e10:	01 d0                	add    %edx,%eax
    1e12:	48 98                	cltq   
    1e14:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1e1b:	00 
    1e1c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1e20:	48 01 d0             	add    %rdx,%rax
    1e23:	48 8b 10             	mov    (%rax),%rdx
    1e26:	8b 45 b0             	mov    -0x50(%rbp),%eax
    1e29:	48 98                	cltq   
    1e2b:	48 01 d0             	add    %rdx,%rax
    1e2e:	0f b6 00             	movzbl (%rax),%eax
    1e31:	0f be d8             	movsbl %al,%ebx
    1e34:	8b 55 a8             	mov    -0x58(%rbp),%edx
    1e37:	8b 45 ac             	mov    -0x54(%rbp),%eax
    1e3a:	01 d0                	add    %edx,%eax
    1e3c:	48 98                	cltq   
    1e3e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1e45:	00 
    1e46:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1e4a:	48 01 d0             	add    %rdx,%rax
    1e4d:	48 8b 10             	mov    (%rax),%rdx
    1e50:	8b 45 b0             	mov    -0x50(%rbp),%eax
    1e53:	48 98                	cltq   
    1e55:	48 01 d0             	add    %rdx,%rax
    1e58:	49 89 c4             	mov    %rax,%r12
    1e5b:	8b 55 a8             	mov    -0x58(%rbp),%edx
    1e5e:	8b 45 ac             	mov    -0x54(%rbp),%eax
    1e61:	01 d0                	add    %edx,%eax
    1e63:	48 98                	cltq   
    1e65:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1e6c:	00 
    1e6d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1e71:	48 01 d0             	add    %rdx,%rax
    1e74:	48 8b 10             	mov    (%rax),%rdx
    1e77:	8b 45 b0             	mov    -0x50(%rbp),%eax
    1e7a:	48 98                	cltq   
    1e7c:	48 01 d0             	add    %rdx,%rax
    1e7f:	48 89 c7             	mov    %rax,%rdi
    1e82:	e8 54 f5 ff ff       	call   13db <get_physical_addr>
    1e87:	89 d9                	mov    %ebx,%ecx
    1e89:	4c 89 e2             	mov    %r12,%rdx
    1e8c:	48 89 c6             	mov    %rax,%rsi
    1e8f:	48 8d 05 d2 12 00 00 	lea    0x12d2(%rip),%rax        # 3168 <_IO_stdin_used+0x168>
    1e96:	48 89 c7             	mov    %rax,%rdi
    1e99:	b8 00 00 00 00       	mov    $0x0,%eax
    1e9e:	e8 bd f2 ff ff       	call   1160 <printf@plt>
    1ea3:	83 45 b0 01          	addl   $0x1,-0x50(%rbp)
    1ea7:	81 7d b0 ff 0f 00 00 	cmpl   $0xfff,-0x50(%rbp)
    1eae:	0f 8e 27 ff ff ff    	jle    1ddb <memory_template+0x319>
    1eb4:	83 45 ac 01          	addl   $0x1,-0x54(%rbp)
    1eb8:	83 7d ac 03          	cmpl   $0x3,-0x54(%rbp)
    1ebc:	0f 8e 1b fe ff ff    	jle    1cdd <memory_template+0x21b>
    1ec2:	83 45 a8 04          	addl   $0x4,-0x58(%rbp)
    1ec6:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1ec9:	83 e8 07             	sub    $0x7,%eax
    1ecc:	39 45 a8             	cmp    %eax,-0x58(%rbp)
    1ecf:	0f 8c 1d fc ff ff    	jl     1af2 <memory_template+0x30>
    1ed5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1eda:	48 83 c4 60          	add    $0x60,%rsp
    1ede:	5b                   	pop    %rbx
    1edf:	41 5c                	pop    %r12
    1ee1:	5d                   	pop    %rbp
    1ee2:	c3                   	ret    

0000000000001ee3 <n_sided_temp>:
    1ee3:	f3 0f 1e fa          	endbr64 
    1ee7:	55                   	push   %rbp
    1ee8:	48 89 e5             	mov    %rsp,%rbp
    1eeb:	41 54                	push   %r12
    1eed:	53                   	push   %rbx
    1eee:	48 83 ec 40          	sub    $0x40,%rsp
    1ef2:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    1ef6:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    1ef9:	bf a0 00 00 00       	mov    $0xa0,%edi
    1efe:	e8 cd f2 ff ff       	call   11d0 <malloc@plt>
    1f03:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1f07:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    1f0e:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    1f15:	e9 b6 02 00 00       	jmp    21d0 <n_sided_temp+0x2ed>
    1f1a:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1f1d:	83 e0 01             	and    $0x1,%eax
    1f20:	85 c0                	test   %eax,%eax
    1f22:	0f 85 28 01 00 00    	jne    2050 <n_sided_temp+0x16d>
    1f28:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1f2b:	c1 e0 02             	shl    $0x2,%eax
    1f2e:	89 c6                	mov    %eax,%esi
    1f30:	48 8d 05 50 12 00 00 	lea    0x1250(%rip),%rax        # 3187 <_IO_stdin_used+0x187>
    1f37:	48 89 c7             	mov    %rax,%rdi
    1f3a:	b8 00 00 00 00       	mov    $0x0,%eax
    1f3f:	e8 1c f2 ff ff       	call   1160 <printf@plt>
    1f44:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1f47:	c1 e0 02             	shl    $0x2,%eax
    1f4a:	48 98                	cltq   
    1f4c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1f53:	00 
    1f54:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1f58:	48 01 d0             	add    %rdx,%rax
    1f5b:	48 8b 00             	mov    (%rax),%rax
    1f5e:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    1f64:	ba 00 10 00 00       	mov    $0x1000,%edx
    1f69:	be ff 00 00 00       	mov    $0xff,%esi
    1f6e:	48 89 c7             	mov    %rax,%rdi
    1f71:	e8 1a f2 ff ff       	call   1190 <memset@plt>
    1f76:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1f79:	c1 e0 02             	shl    $0x2,%eax
    1f7c:	48 98                	cltq   
    1f7e:	48 83 c0 01          	add    $0x1,%rax
    1f82:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1f89:	00 
    1f8a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1f8e:	48 01 d0             	add    %rdx,%rax
    1f91:	48 8b 00             	mov    (%rax),%rax
    1f94:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    1f9a:	ba 00 10 00 00       	mov    $0x1000,%edx
    1f9f:	be ff 00 00 00       	mov    $0xff,%esi
    1fa4:	48 89 c7             	mov    %rax,%rdi
    1fa7:	e8 e4 f1 ff ff       	call   1190 <memset@plt>
    1fac:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1faf:	c1 e0 02             	shl    $0x2,%eax
    1fb2:	48 98                	cltq   
    1fb4:	48 83 c0 02          	add    $0x2,%rax
    1fb8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1fbf:	00 
    1fc0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1fc4:	48 01 d0             	add    %rdx,%rax
    1fc7:	48 8b 00             	mov    (%rax),%rax
    1fca:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    1fd0:	ba 00 10 00 00       	mov    $0x1000,%edx
    1fd5:	be ff 00 00 00       	mov    $0xff,%esi
    1fda:	48 89 c7             	mov    %rax,%rdi
    1fdd:	e8 ae f1 ff ff       	call   1190 <memset@plt>
    1fe2:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1fe5:	c1 e0 02             	shl    $0x2,%eax
    1fe8:	48 98                	cltq   
    1fea:	48 83 c0 03          	add    $0x3,%rax
    1fee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1ff5:	00 
    1ff6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1ffa:	48 01 d0             	add    %rdx,%rax
    1ffd:	48 8b 00             	mov    (%rax),%rax
    2000:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2006:	ba 00 10 00 00       	mov    $0x1000,%edx
    200b:	be ff 00 00 00       	mov    $0xff,%esi
    2010:	48 89 c7             	mov    %rax,%rdi
    2013:	e8 78 f1 ff ff       	call   1190 <memset@plt>
    2018:	8b 45 c0             	mov    -0x40(%rbp),%eax
    201b:	48 98                	cltq   
    201d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2024:	00 
    2025:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2029:	48 01 d0             	add    %rdx,%rax
    202c:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    202f:	48 63 d2             	movslq %edx,%rdx
    2032:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    2039:	00 
    203a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    203e:	48 01 ca             	add    %rcx,%rdx
    2041:	48 8b 00             	mov    (%rax),%rax
    2044:	48 89 02             	mov    %rax,(%rdx)
    2047:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
    204b:	e9 7c 01 00 00       	jmp    21cc <n_sided_temp+0x2e9>
    2050:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2053:	c1 e0 02             	shl    $0x2,%eax
    2056:	48 98                	cltq   
    2058:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    205f:	00 
    2060:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2064:	48 01 d0             	add    %rdx,%rax
    2067:	48 8b 00             	mov    (%rax),%rax
    206a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2070:	ba 00 10 00 00       	mov    $0x1000,%edx
    2075:	be 00 00 00 00       	mov    $0x0,%esi
    207a:	48 89 c7             	mov    %rax,%rdi
    207d:	e8 0e f1 ff ff       	call   1190 <memset@plt>
    2082:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2085:	c1 e0 02             	shl    $0x2,%eax
    2088:	48 98                	cltq   
    208a:	48 83 c0 01          	add    $0x1,%rax
    208e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2095:	00 
    2096:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    209a:	48 01 d0             	add    %rdx,%rax
    209d:	48 8b 00             	mov    (%rax),%rax
    20a0:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    20a6:	ba 00 10 00 00       	mov    $0x1000,%edx
    20ab:	be 00 00 00 00       	mov    $0x0,%esi
    20b0:	48 89 c7             	mov    %rax,%rdi
    20b3:	e8 d8 f0 ff ff       	call   1190 <memset@plt>
    20b8:	8b 45 c0             	mov    -0x40(%rbp),%eax
    20bb:	c1 e0 02             	shl    $0x2,%eax
    20be:	48 98                	cltq   
    20c0:	48 83 c0 02          	add    $0x2,%rax
    20c4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    20cb:	00 
    20cc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    20d0:	48 01 d0             	add    %rdx,%rax
    20d3:	48 8b 00             	mov    (%rax),%rax
    20d6:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    20dc:	ba 00 10 00 00       	mov    $0x1000,%edx
    20e1:	be 00 00 00 00       	mov    $0x0,%esi
    20e6:	48 89 c7             	mov    %rax,%rdi
    20e9:	e8 a2 f0 ff ff       	call   1190 <memset@plt>
    20ee:	8b 45 c0             	mov    -0x40(%rbp),%eax
    20f1:	c1 e0 02             	shl    $0x2,%eax
    20f4:	48 98                	cltq   
    20f6:	48 83 c0 03          	add    $0x3,%rax
    20fa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2101:	00 
    2102:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2106:	48 01 d0             	add    %rdx,%rax
    2109:	48 8b 00             	mov    (%rax),%rax
    210c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    2112:	ba 00 10 00 00       	mov    $0x1000,%edx
    2117:	be 00 00 00 00       	mov    $0x0,%esi
    211c:	48 89 c7             	mov    %rax,%rdi
    211f:	e8 6c f0 ff ff       	call   1190 <memset@plt>
    2124:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2127:	c1 e0 02             	shl    $0x2,%eax
    212a:	48 98                	cltq   
    212c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2133:	00 
    2134:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2138:	48 01 d0             	add    %rdx,%rax
    213b:	48 8b 00             	mov    (%rax),%rax
    213e:	be 00 10 00 00       	mov    $0x1000,%esi
    2143:	48 89 c7             	mov    %rax,%rdi
    2146:	e8 42 f4 ff ff       	call   158d <flush_chunck>
    214b:	8b 45 c0             	mov    -0x40(%rbp),%eax
    214e:	c1 e0 02             	shl    $0x2,%eax
    2151:	48 98                	cltq   
    2153:	48 83 c0 01          	add    $0x1,%rax
    2157:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    215e:	00 
    215f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2163:	48 01 d0             	add    %rdx,%rax
    2166:	48 8b 00             	mov    (%rax),%rax
    2169:	be 00 10 00 00       	mov    $0x1000,%esi
    216e:	48 89 c7             	mov    %rax,%rdi
    2171:	e8 17 f4 ff ff       	call   158d <flush_chunck>
    2176:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2179:	c1 e0 02             	shl    $0x2,%eax
    217c:	48 98                	cltq   
    217e:	48 83 c0 02          	add    $0x2,%rax
    2182:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2189:	00 
    218a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    218e:	48 01 d0             	add    %rdx,%rax
    2191:	48 8b 00             	mov    (%rax),%rax
    2194:	be 00 10 00 00       	mov    $0x1000,%esi
    2199:	48 89 c7             	mov    %rax,%rdi
    219c:	e8 ec f3 ff ff       	call   158d <flush_chunck>
    21a1:	8b 45 c0             	mov    -0x40(%rbp),%eax
    21a4:	c1 e0 02             	shl    $0x2,%eax
    21a7:	48 98                	cltq   
    21a9:	48 83 c0 03          	add    $0x3,%rax
    21ad:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    21b4:	00 
    21b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    21b9:	48 01 d0             	add    %rdx,%rax
    21bc:	48 8b 00             	mov    (%rax),%rax
    21bf:	be 00 10 00 00       	mov    $0x1000,%esi
    21c4:	48 89 c7             	mov    %rax,%rdi
    21c7:	e8 c1 f3 ff ff       	call   158d <flush_chunck>
    21cc:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
    21d0:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    21d3:	8d 50 fd             	lea    -0x3(%rax),%edx
    21d6:	8b 45 c0             	mov    -0x40(%rbp),%eax
    21d9:	c1 e0 02             	shl    $0x2,%eax
    21dc:	39 c2                	cmp    %eax,%edx
    21de:	0f 8f 36 fd ff ff    	jg     1f1a <n_sided_temp+0x37>
    21e4:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    21e7:	89 c6                	mov    %eax,%esi
    21e9:	48 8d 05 a3 0f 00 00 	lea    0xfa3(%rip),%rax        # 3193 <_IO_stdin_used+0x193>
    21f0:	48 89 c7             	mov    %rax,%rdi
    21f3:	b8 00 00 00 00       	mov    $0x0,%eax
    21f8:	e8 63 ef ff ff       	call   1160 <printf@plt>
    21fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2201:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2205:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2208:	89 45 d0             	mov    %eax,-0x30(%rbp)
    220b:	c7 45 d4 a0 bb 0d 00 	movl   $0xdbba0,-0x2c(%rbp)
    2212:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    2219:	eb 3c                	jmp    2257 <n_sided_temp+0x374>
    221b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    2222:	eb 27                	jmp    224b <n_sided_temp+0x368>
    2224:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2227:	48 98                	cltq   
    2229:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2230:	00 
    2231:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2235:	48 01 d0             	add    %rdx,%rax
    2238:	48 8b 10             	mov    (%rax),%rdx
    223b:	48 89 d1             	mov    %rdx,%rcx
    223e:	0f ae 39             	clflush (%rcx)
    2241:	0f ae f0             	mfence 
    2244:	48 8b 01             	mov    (%rcx),%rax
    2247:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    224b:	8b 45 d0             	mov    -0x30(%rbp),%eax
    224e:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    2251:	7f d1                	jg     2224 <n_sided_temp+0x341>
    2253:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    2257:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    225a:	3b 45 d8             	cmp    -0x28(%rbp),%eax
    225d:	7f bc                	jg     221b <n_sided_temp+0x338>
    225f:	90                   	nop
    2260:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    2267:	e9 b6 01 00 00       	jmp    2422 <n_sided_temp+0x53f>
    226c:	8b 45 c0             	mov    -0x40(%rbp),%eax
    226f:	89 c6                	mov    %eax,%esi
    2271:	48 8d 05 2c 0f 00 00 	lea    0xf2c(%rip),%rax        # 31a4 <_IO_stdin_used+0x1a4>
    2278:	48 89 c7             	mov    %rax,%rdi
    227b:	b8 00 00 00 00       	mov    $0x0,%eax
    2280:	e8 db ee ff ff       	call   1160 <printf@plt>
    2285:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2288:	83 e0 01             	and    $0x1,%eax
    228b:	85 c0                	test   %eax,%eax
    228d:	75 09                	jne    2298 <n_sided_temp+0x3b5>
    228f:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
    2293:	e9 8a 01 00 00       	jmp    2422 <n_sided_temp+0x53f>
    2298:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
    229f:	e9 70 01 00 00       	jmp    2414 <n_sided_temp+0x531>
    22a4:	8b 45 c0             	mov    -0x40(%rbp),%eax
    22a7:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    22ae:	8b 45 c8             	mov    -0x38(%rbp),%eax
    22b1:	01 d0                	add    %edx,%eax
    22b3:	48 98                	cltq   
    22b5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    22bc:	00 
    22bd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    22c1:	48 01 d0             	add    %rdx,%rax
    22c4:	48 8b 00             	mov    (%rax),%rax
    22c7:	48 89 c3             	mov    %rax,%rbx
    22ca:	8b 45 c0             	mov    -0x40(%rbp),%eax
    22cd:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    22d4:	8b 45 c8             	mov    -0x38(%rbp),%eax
    22d7:	01 d0                	add    %edx,%eax
    22d9:	48 98                	cltq   
    22db:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    22e2:	00 
    22e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    22e7:	48 01 d0             	add    %rdx,%rax
    22ea:	48 8b 00             	mov    (%rax),%rax
    22ed:	48 89 c7             	mov    %rax,%rdi
    22f0:	e8 e6 f0 ff ff       	call   13db <get_physical_addr>
    22f5:	48 89 da             	mov    %rbx,%rdx
    22f8:	48 89 c6             	mov    %rax,%rsi
    22fb:	48 8d 05 af 0e 00 00 	lea    0xeaf(%rip),%rax        # 31b1 <_IO_stdin_used+0x1b1>
    2302:	48 89 c7             	mov    %rax,%rdi
    2305:	b8 00 00 00 00       	mov    $0x0,%eax
    230a:	e8 51 ee ff ff       	call   1160 <printf@plt>
    230f:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    2316:	e9 e8 00 00 00       	jmp    2403 <n_sided_temp+0x520>
    231b:	8b 45 c0             	mov    -0x40(%rbp),%eax
    231e:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    2325:	8b 45 c8             	mov    -0x38(%rbp),%eax
    2328:	01 d0                	add    %edx,%eax
    232a:	48 98                	cltq   
    232c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2333:	00 
    2334:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2338:	48 01 d0             	add    %rdx,%rax
    233b:	48 8b 10             	mov    (%rax),%rdx
    233e:	8b 45 cc             	mov    -0x34(%rbp),%eax
    2341:	48 98                	cltq   
    2343:	48 01 d0             	add    %rdx,%rax
    2346:	0f b6 00             	movzbl (%rax),%eax
    2349:	84 c0                	test   %al,%al
    234b:	0f 84 ae 00 00 00    	je     23ff <n_sided_temp+0x51c>
    2351:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2354:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    235b:	8b 45 c8             	mov    -0x38(%rbp),%eax
    235e:	01 d0                	add    %edx,%eax
    2360:	48 98                	cltq   
    2362:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2369:	00 
    236a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    236e:	48 01 d0             	add    %rdx,%rax
    2371:	48 8b 10             	mov    (%rax),%rdx
    2374:	8b 45 cc             	mov    -0x34(%rbp),%eax
    2377:	48 98                	cltq   
    2379:	48 01 d0             	add    %rdx,%rax
    237c:	0f b6 00             	movzbl (%rax),%eax
    237f:	0f be d8             	movsbl %al,%ebx
    2382:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2385:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    238c:	8b 45 c8             	mov    -0x38(%rbp),%eax
    238f:	01 d0                	add    %edx,%eax
    2391:	48 98                	cltq   
    2393:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    239a:	00 
    239b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    239f:	48 01 d0             	add    %rdx,%rax
    23a2:	48 8b 10             	mov    (%rax),%rdx
    23a5:	8b 45 cc             	mov    -0x34(%rbp),%eax
    23a8:	48 98                	cltq   
    23aa:	48 01 d0             	add    %rdx,%rax
    23ad:	49 89 c4             	mov    %rax,%r12
    23b0:	8b 45 c0             	mov    -0x40(%rbp),%eax
    23b3:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
    23ba:	8b 45 c8             	mov    -0x38(%rbp),%eax
    23bd:	01 d0                	add    %edx,%eax
    23bf:	48 98                	cltq   
    23c1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    23c8:	00 
    23c9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    23cd:	48 01 d0             	add    %rdx,%rax
    23d0:	48 8b 10             	mov    (%rax),%rdx
    23d3:	8b 45 cc             	mov    -0x34(%rbp),%eax
    23d6:	48 98                	cltq   
    23d8:	48 01 d0             	add    %rdx,%rax
    23db:	48 89 c7             	mov    %rax,%rdi
    23de:	e8 f8 ef ff ff       	call   13db <get_physical_addr>
    23e3:	89 d9                	mov    %ebx,%ecx
    23e5:	4c 89 e2             	mov    %r12,%rdx
    23e8:	48 89 c6             	mov    %rax,%rsi
    23eb:	48 8d 05 76 0d 00 00 	lea    0xd76(%rip),%rax        # 3168 <_IO_stdin_used+0x168>
    23f2:	48 89 c7             	mov    %rax,%rdi
    23f5:	b8 00 00 00 00       	mov    $0x0,%eax
    23fa:	e8 61 ed ff ff       	call   1160 <printf@plt>
    23ff:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    2403:	81 7d cc ff 0f 00 00 	cmpl   $0xfff,-0x34(%rbp)
    240a:	0f 8e 0b ff ff ff    	jle    231b <n_sided_temp+0x438>
    2410:	83 45 c8 01          	addl   $0x1,-0x38(%rbp)
    2414:	83 7d c8 03          	cmpl   $0x3,-0x38(%rbp)
    2418:	0f 8e 86 fe ff ff    	jle    22a4 <n_sided_temp+0x3c1>
    241e:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
    2422:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    2425:	8d 50 fd             	lea    -0x3(%rax),%edx
    2428:	8b 45 c0             	mov    -0x40(%rbp),%eax
    242b:	c1 e0 02             	shl    $0x2,%eax
    242e:	39 c2                	cmp    %eax,%edx
    2430:	0f 8f 36 fe ff ff    	jg     226c <n_sided_temp+0x389>
    2436:	90                   	nop
    2437:	48 83 c4 40          	add    $0x40,%rsp
    243b:	5b                   	pop    %rbx
    243c:	41 5c                	pop    %r12
    243e:	5d                   	pop    %rbp
    243f:	c3                   	ret    

0000000000002440 <main>:
    2440:	f3 0f 1e fa          	endbr64 
    2444:	55                   	push   %rbp
    2445:	48 89 e5             	mov    %rsp,%rbp
    2448:	48 83 ec 20          	sub    $0x20,%rsp
    244c:	bf 00 00 40 00       	mov    $0x400000,%edi
    2451:	e8 7a ed ff ff       	call   11d0 <malloc@plt>
    2456:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    245a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    245e:	48 89 c7             	mov    %rax,%rdi
    2461:	e8 eb f1 ff ff       	call   1651 <alloc_buffer>
    2466:	89 45 e8             	mov    %eax,-0x18(%rbp)
    2469:	bf 20 03 00 00       	mov    $0x320,%edi
    246e:	e8 5d ed ff ff       	call   11d0 <malloc@plt>
    2473:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2477:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    247b:	48 8b 00             	mov    (%rax),%rax
    247e:	48 89 c7             	mov    %rax,%rdi
    2481:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2485:	48 89 c1             	mov    %rax,%rcx
    2488:	ba 00 00 00 00       	mov    $0x0,%edx
    248d:	be 00 00 20 00       	mov    $0x200000,%esi
    2492:	e8 1a f3 ff ff       	call   17b1 <find_bank_conflict>
    2497:	89 45 ec             	mov    %eax,-0x14(%rbp)
    249a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    249d:	89 c6                	mov    %eax,%esi
    249f:	48 8d 05 20 0d 00 00 	lea    0xd20(%rip),%rax        # 31c6 <_IO_stdin_used+0x1c6>
    24a6:	48 89 c7             	mov    %rax,%rdi
    24a9:	b8 00 00 00 00       	mov    $0x0,%eax
    24ae:	e8 ad ec ff ff       	call   1160 <printf@plt>
    24b3:	8b 55 ec             	mov    -0x14(%rbp),%edx
    24b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    24ba:	89 d6                	mov    %edx,%esi
    24bc:	48 89 c7             	mov    %rax,%rdi
    24bf:	e8 1f fa ff ff       	call   1ee3 <n_sided_temp>
    24c4:	90                   	nop
    24c5:	c9                   	leave  
    24c6:	c3                   	ret    

Disassembly of section .fini:

00000000000024c8 <_fini>:
    24c8:	f3 0f 1e fa          	endbr64 
    24cc:	48 83 ec 08          	sub    $0x8,%rsp
    24d0:	48 83 c4 08          	add    $0x8,%rsp
    24d4:	c3                   	ret    

Disassembly of section .rodata:

0000000000003000 <_IO_stdin_used>:
    3000:	01 00                	add    %eax,(%rax)
    3002:	02 00                	add    (%rax),%al
	...
    3010:	2f                   	(bad)  
    3011:	70 72                	jo     3085 <_IO_stdin_used+0x85>
    3013:	6f                   	outsl  %ds:(%rsi),(%dx)
    3014:	63 2f                	movsxd (%rdi),%ebp
    3016:	73 65                	jae    307d <_IO_stdin_used+0x7d>
    3018:	6c                   	insb   (%dx),%es:(%rdi)
    3019:	66 2f                	data16 (bad) 
    301b:	70 61                	jo     307e <_IO_stdin_used+0x7e>
    301d:	67 65 6d             	gs insl (%dx),%es:(%edi)
    3020:	61                   	(bad)  
    3021:	70 00                	jo     3023 <_IO_stdin_used+0x23>
    3023:	72 6f                	jb     3094 <_IO_stdin_used+0x94>
    3025:	77 68                	ja     308f <_IO_stdin_used+0x8f>
    3027:	61                   	(bad)  
    3028:	6d                   	insl   (%dx),%es:(%rdi)
    3029:	6d                   	insl   (%dx),%es:(%rdi)
    302a:	65 72 5f             	gs jb  308c <_IO_stdin_used+0x8c>
    302d:	75 74                	jne    30a3 <_IO_stdin_used+0xa3>
    302f:	69 6c 73 2e 68 00 66 	imul   $0x64660068,0x2e(%rbx,%rsi,2),%ebp
    3036:	64 
    3037:	20 3e                	and    %bh,(%rsi)
    3039:	3d 20 30 00 70       	cmp    $0x70003020,%eax
    303e:	6f                   	outsl  %ds:(%rsi),(%dx)
    303f:	73 20                	jae    3061 <_IO_stdin_used+0x61>
    3041:	3e 3d 20 30 00 67    	ds cmp $0x67003020,%eax
    3047:	6f                   	outsl  %ds:(%rsi),(%dx)
    3048:	74 20                	je     306a <_IO_stdin_used+0x6a>
    304a:	3d 3d 20 38 00       	cmp    $0x38203d,%eax
    304f:	72 63                	jb     30b4 <_IO_stdin_used+0xb4>
    3051:	20 3d 3d 20 30 00    	and    %bh,0x30203d(%rip)        # 305094 <_end+0x300064>
    3057:	76 61                	jbe    30ba <_IO_stdin_used+0xba>
    3059:	6c                   	insb   (%dx),%es:(%rdi)
    305a:	75 65                	jne    30c1 <_IO_stdin_used+0xc1>
    305c:	20 26                	and    %ah,(%rsi)
    305e:	20 28                	and    %ch,(%rax)
    3060:	31 55 4c             	xor    %edx,0x4c(%rbp)
    3063:	4c 20 3c 3c          	rex.WR and %r15b,(%rsp,%rdi,1)
    3067:	20 36                	and    %dh,(%rsi)
    3069:	33 29                	xor    (%rcx),%ebp
    306b:	00 4d 41             	add    %cl,0x41(%rbp)
    306e:	44 56                	rex.R push %rsi
    3070:	20 25 64 20 46 61    	and    %ah,0x61462064(%rip)        # 614650da <_end+0x614600aa>
    3076:	69 6c 65 64 0a 00 63 	imul   $0x6f63000a,0x64(%rbp,%riz,2),%ebp
    307d:	6f 
    307e:	6e                   	outsb  %ds:(%rsi),(%dx)
    307f:	73 00                	jae    3081 <_IO_stdin_used+0x81>
    3081:	6e                   	outsb  %ds:(%rsi),(%dx)
    3082:	6f                   	outsl  %ds:(%rsi),(%dx)
    3083:	74 20                	je     30a5 <_IO_stdin_used+0xa5>
    3085:	63 6f 6e             	movsxd 0x6e(%rdi),%ebp
    3088:	73 20                	jae    30aa <_IO_stdin_used+0xaa>
    308a:	00 42 75             	add    %al,0x75(%rdx)
    308d:	66 66 65 72 20       	data16 data16 gs jb 30b2 <_IO_stdin_used+0xb2>
    3092:	61                   	(bad)  
    3093:	6c                   	insb   (%dx),%es:(%rdi)
    3094:	6c                   	insb   (%dx),%es:(%rdi)
    3095:	6f                   	outsl  %ds:(%rsi),(%dx)
    3096:	63 61 74             	movsxd 0x74(%rcx),%esp
    3099:	65 64 0a 00          	gs or  %fs:(%rax),%al
    309d:	42 61                	rex.X (bad) 
    309f:	73 65                	jae    3106 <_IO_stdin_used+0x106>
    30a1:	20 70 61             	and    %dh,0x61(%rax)
    30a4:	67 65 20 6d 65       	and    %ch,%gs:0x65(%ebp)
    30a9:	6d                   	insl   (%dx),%es:(%rdi)
    30aa:	6f                   	outsl  %ds:(%rsi),(%dx)
    30ab:	72 79                	jb     3126 <_IO_stdin_used+0x126>
    30ad:	00 00                	add    %al,(%rax)
    30af:	00 42 41             	add    %al,0x41(%rdx)
    30b2:	30 3a                	xor    %bh,(%rdx)
    30b4:	25 6c 78 20 42       	and    $0x4220786c,%eax
    30b9:	41 31 3a             	xor    %edi,(%r10)
    30bc:	25 6c 78 20 42       	and    $0x4220786c,%eax
    30c1:	41 32 3a             	xor    (%r10),%dil
    30c4:	25 6c 78 20 42       	and    $0x4220786c,%eax
    30c9:	41 33 3a             	xor    (%r10),%edi
    30cc:	25 6c 78 20 72       	and    $0x7220786c,%eax
    30d1:	6f                   	outsl  %ds:(%rsi),(%dx)
    30d2:	77 3a                	ja     310e <_IO_stdin_used+0x10e>
    30d4:	25 6c 78 0a 00       	and    $0xa786c,%eax
    30d9:	25 6c 78 0a 00       	and    $0xa786c,%eax
    30de:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    30e3:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    30e8:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    30ed:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    30f2:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    30f7:	2d 2d 2d 00 73       	sub    $0x73002d2d,%eax
    30fc:	74 61                	je     315f <_IO_stdin_used+0x15f>
    30fe:	72 74                	jb     3174 <_IO_stdin_used+0x174>
    3100:	69 6e 67 20 72 6f 77 	imul   $0x776f7220,0x67(%rsi),%ebp
    3107:	20 63 6f             	and    %ah,0x6f(%rbx)
    310a:	6e                   	outsb  %ds:(%rsi),(%dx)
    310b:	66 6c                	data16 insb (%dx),%es:(%rdi)
    310d:	69 63 74 00 25 64 0a 	imul   $0xa642500,0x74(%rbx),%esp
    3114:	00 25 6c 75 0a 00    	add    %ah,0xa756c(%rip)        # aa686 <_end+0xa5656>
    311a:	00 00                	add    %al,(%rax)
    311c:	00 00                	add    %al,(%rax)
    311e:	00 00                	add    %al,(%rax)
    3120:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    3125:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    312a:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    312f:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    3134:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    3139:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    313e:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    3143:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    3148:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    314d:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    3152:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    3157:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    315c:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    3161:	2d 2d 2d 00 00       	sub    $0x2d2d,%eax
    3166:	00 00                	add    %al,(%rax)
    3168:	46                   	rex.RX
    3169:	4c                   	rex.WR
    316a:	49 50                	rex.WB push %r8
    316c:	20 69 6e             	and    %ch,0x6e(%rcx)
    316f:	20 61 64             	and    %ah,0x64(%rcx)
    3172:	64 72 20             	fs jb  3195 <_IO_stdin_used+0x195>
    3175:	28 25 6c 78 2c 20    	sub    %ah,0x202c786c(%rip)        # 202ca9e7 <_end+0x202c59b7>
    317b:	25 6c 78 29 3a       	and    $0x3a29786c,%eax
    3180:	20 25 68 68 78 0a    	and    %ah,0xa786868(%rip)        # a7899ee <_end+0xa7849be>
    3186:	00 61 67             	add    %ah,0x67(%rcx)
    3189:	67 20 6e 64          	and    %ch,0x64(%esi)
    318d:	78 20                	js     31af <_IO_stdin_used+0x1af>
    318f:	25 64 0a 00 25       	and    $0x25000a64,%eax
    3194:	64 20 2d 20 61 67 67 	and    %ch,%fs:0x67676120(%rip)        # 676792bb <_end+0x6767428b>
    319b:	72 65                	jb     3202 <__GNU_EH_FRAME_HDR+0xe>
    319d:	73 73                	jae    3212 <__GNU_EH_FRAME_HDR+0x1e>
    319f:	6f                   	outsl  %ds:(%rsi),(%dx)
    31a0:	72 73                	jb     3215 <__GNU_EH_FRAME_HDR+0x21>
    31a2:	0a 00                	or     (%rax),%al
    31a4:	25 64 20 2d 2d       	and    $0x2d2d2064,%eax
    31a9:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    31ae:	2d 0a 00 63 68       	sub    $0x6863000a,%eax
    31b3:	65 63 6b 69          	movsxd %gs:0x69(%rbx),%ebp
    31b7:	6e                   	outsb  %ds:(%rsi),(%dx)
    31b8:	67 20 28             	and    %ch,(%eax)
    31bb:	25 6c 78 2c 20       	and    $0x202c786c,%eax
    31c0:	25 6c 78 29 0a       	and    $0xa29786c,%eax
    31c5:	00 6e 75             	add    %ch,0x75(%rsi)
    31c8:	6d                   	insl   (%dx),%es:(%rdi)
    31c9:	20 63 6f             	and    %ah,0x6f(%rbx)
    31cc:	6e                   	outsb  %ds:(%rsi),(%dx)
    31cd:	66 20 25 64 0a 00 00 	data16 and %ah,0xa64(%rip)        # 3c38 <__FRAME_END__+0x81c>
	...

00000000000031e0 <__PRETTY_FUNCTION__.0>:
    31e0:	67 65 74 5f          	addr32 gs je 3243 <__GNU_EH_FRAME_HDR+0x4f>
    31e4:	70 68                	jo     324e <__GNU_EH_FRAME_HDR+0x5a>
    31e6:	79 73                	jns    325b <__GNU_EH_FRAME_HDR+0x67>
    31e8:	69 63 61 6c 5f 61 64 	imul   $0x64615f6c,0x61(%rbx),%esp
    31ef:	64 72 00             	fs jb  31f2 <__PRETTY_FUNCTION__.0+0x12>

Disassembly of section .eh_frame_hdr:

00000000000031f4 <__GNU_EH_FRAME_HDR>:
    31f4:	01 1b                	add    %ebx,(%rbx)
    31f6:	03 3b                	add    (%rbx),%edi
    31f8:	70 00                	jo     31fa <__GNU_EH_FRAME_HDR+0x6>
    31fa:	00 00                	add    %al,(%rax)
    31fc:	0d 00 00 00 2c       	or     $0x2c000000,%eax
    3201:	de ff                	fdivrp %st,%st(7)
    3203:	ff a4 00 00 00 2c df 	jmp    *-0x20d40000(%rax,%rax,1)
    320a:	ff                   	(bad)  
    320b:	ff cc                	dec    %esp
    320d:	00 00                	add    %al,(%rax)
    320f:	00 3c df             	add    %bh,(%rdi,%rbx,8)
    3212:	ff                   	(bad)  
    3213:	ff e4                	jmp    *%rsp
    3215:	00 00                	add    %al,(%rax)
    3217:	00 2c e0             	add    %ch,(%rax,%riz,8)
    321a:	ff                   	(bad)  
    321b:	ff 8c 00 00 00 15 e1 	decl   -0x1eeb0000(%rax,%rax,1)
    3222:	ff                   	(bad)  
    3223:	ff                   	(bad)  
    3224:	fc                   	cld    
    3225:	00 00                	add    %al,(%rax)
    3227:	00 e7                	add    %ah,%bh
    3229:	e1 ff                	loope  322a <__GNU_EH_FRAME_HDR+0x36>
    322b:	ff 1c 01             	lcall  *(%rcx,%rax,1)
    322e:	00 00                	add    %al,(%rax)
    3230:	99                   	cltd   
    3231:	e3 ff                	jrcxz  3232 <__GNU_EH_FRAME_HDR+0x3e>
    3233:	ff                   	(bad)  
    3234:	3c 01                	cmp    $0x1,%al
    3236:	00 00                	add    %al,(%rax)
    3238:	da e3                	(bad)  
    323a:	ff                   	(bad)  
    323b:	ff 5c 01 00          	lcall  *0x0(%rcx,%rax,1)
    323f:	00 5d e4             	add    %bl,-0x1c(%rbp)
    3242:	ff                   	(bad)  
    3243:	ff                   	(bad)  
    3244:	7c 01                	jl     3247 <__GNU_EH_FRAME_HDR+0x53>
    3246:	00 00                	add    %al,(%rax)
    3248:	bd e5 ff ff 9c       	mov    $0x9cffffe5,%ebp
    324d:	01 00                	add    %eax,(%rax)
    324f:	00 ce                	add    %cl,%dh
    3251:	e8 ff ff c0 01       	call   1c13255 <_end+0x1c0e225>
    3256:	00 00                	add    %al,(%rax)
    3258:	ef                   	out    %eax,(%dx)
    3259:	ec                   	in     (%dx),%al
    325a:	ff                   	(bad)  
    325b:	ff e4                	jmp    *%rsp
    325d:	01 00                	add    %eax,(%rax)
    325f:	00 4c f2 ff          	add    %cl,-0x1(%rdx,%rsi,8)
    3263:	ff 08                	decl   (%rax)
    3265:	02 00                	add    (%rax),%al
	...

Disassembly of section .eh_frame:

0000000000003268 <__FRAME_END__-0x1b4>:
    3268:	14 00                	adc    $0x0,%al
    326a:	00 00                	add    %al,(%rax)
    326c:	00 00                	add    %al,(%rax)
    326e:	00 00                	add    %al,(%rax)
    3270:	01 7a 52             	add    %edi,0x52(%rdx)
    3273:	00 01                	add    %al,(%rcx)
    3275:	78 10                	js     3287 <__GNU_EH_FRAME_HDR+0x93>
    3277:	01 1b                	add    %ebx,(%rbx)
    3279:	0c 07                	or     $0x7,%al
    327b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    3281:	00 00                	add    %al,(%rax)
    3283:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3286:	00 00                	add    %al,(%rax)
    3288:	98                   	cwtl   
    3289:	df ff                	(bad)  
    328b:	ff 26                	jmp    *(%rsi)
    328d:	00 00                	add    %al,(%rax)
    328f:	00 00                	add    %al,(%rax)
    3291:	44 07                	rex.R (bad) 
    3293:	10 00                	adc    %al,(%rax)
    3295:	00 00                	add    %al,(%rax)
    3297:	00 24 00             	add    %ah,(%rax,%rax,1)
    329a:	00 00                	add    %al,(%rax)
    329c:	34 00                	xor    $0x0,%al
    329e:	00 00                	add    %al,(%rax)
    32a0:	80 dd ff             	sbb    $0xff,%ch
    32a3:	ff 00                	incl   (%rax)
    32a5:	01 00                	add    %eax,(%rax)
    32a7:	00 00                	add    %al,(%rax)
    32a9:	0e                   	(bad)  
    32aa:	10 46 0e             	adc    %al,0xe(%rsi)
    32ad:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    32b0:	0b 77 08             	or     0x8(%rdi),%esi
    32b3:	80 00 3f             	addb   $0x3f,(%rax)
    32b6:	1a 3a                	sbb    (%rdx),%bh
    32b8:	2a 33                	sub    (%rbx),%dh
    32ba:	24 22                	and    $0x22,%al
    32bc:	00 00                	add    %al,(%rax)
    32be:	00 00                	add    %al,(%rax)
    32c0:	14 00                	adc    $0x0,%al
    32c2:	00 00                	add    %al,(%rax)
    32c4:	5c                   	pop    %rsp
    32c5:	00 00                	add    %al,(%rax)
    32c7:	00 58 de             	add    %bl,-0x22(%rax)
    32ca:	ff                   	(bad)  
    32cb:	ff 10                	call   *(%rax)
	...
    32d5:	00 00                	add    %al,(%rax)
    32d7:	00 14 00             	add    %dl,(%rax,%rax,1)
    32da:	00 00                	add    %al,(%rax)
    32dc:	74 00                	je     32de <__GNU_EH_FRAME_HDR+0xea>
    32de:	00 00                	add    %al,(%rax)
    32e0:	50                   	push   %rax
    32e1:	de ff                	fdivrp %st,%st(7)
    32e3:	ff f0                	push   %rax
	...
    32ed:	00 00                	add    %al,(%rax)
    32ef:	00 1c 00             	add    %bl,(%rax,%rax,1)
    32f2:	00 00                	add    %al,(%rax)
    32f4:	8c 00                	mov    %es,(%rax)
    32f6:	00 00                	add    %al,(%rax)
    32f8:	11 e0                	adc    %esp,%eax
    32fa:	ff                   	(bad)  
    32fb:	ff d2                	call   *%rdx
    32fd:	00 00                	add    %al,(%rax)
    32ff:	00 00                	add    %al,(%rax)
    3301:	45 0e                	rex.RB (bad) 
    3303:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3309:	02 c9                	add    %cl,%cl
    330b:	0c 07                	or     $0x7,%al
    330d:	08 00                	or     %al,(%rax)
    330f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3312:	00 00                	add    %al,(%rax)
    3314:	ac                   	lods   %ds:(%rsi),%al
    3315:	00 00                	add    %al,(%rax)
    3317:	00 c3                	add    %al,%bl
    3319:	e0 ff                	loopne 331a <__GNU_EH_FRAME_HDR+0x126>
    331b:	ff b2 01 00 00 00    	push   0x1(%rdx)
    3321:	45 0e                	rex.RB (bad) 
    3323:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3329:	03 a9 01 0c 07 08    	add    0x8070c01(%rcx),%ebp
    332f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3332:	00 00                	add    %al,(%rax)
    3334:	cc                   	int3   
    3335:	00 00                	add    %al,(%rax)
    3337:	00 55 e2             	add    %dl,-0x1e(%rbp)
    333a:	ff                   	(bad)  
    333b:	ff 41 00             	incl   0x0(%rcx)
    333e:	00 00                	add    %al,(%rax)
    3340:	00 45 0e             	add    %al,0xe(%rbp)
    3343:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3349:	78 0c                	js     3357 <__GNU_EH_FRAME_HDR+0x163>
    334b:	07                   	(bad)  
    334c:	08 00                	or     %al,(%rax)
    334e:	00 00                	add    %al,(%rax)
    3350:	1c 00                	sbb    $0x0,%al
    3352:	00 00                	add    %al,(%rax)
    3354:	ec                   	in     (%dx),%al
    3355:	00 00                	add    %al,(%rax)
    3357:	00 76 e2             	add    %dh,-0x1e(%rsi)
    335a:	ff                   	(bad)  
    335b:	ff 83 00 00 00 00    	incl   0x0(%rbx)
    3361:	45 0e                	rex.RB (bad) 
    3363:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3369:	02 7a 0c             	add    0xc(%rdx),%bh
    336c:	07                   	(bad)  
    336d:	08 00                	or     %al,(%rax)
    336f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3372:	00 00                	add    %al,(%rax)
    3374:	0c 01                	or     $0x1,%al
    3376:	00 00                	add    %al,(%rax)
    3378:	d9 e2                	(bad)  
    337a:	ff                   	(bad)  
    337b:	ff 60 01             	jmp    *0x1(%rax)
    337e:	00 00                	add    %al,(%rax)
    3380:	00 45 0e             	add    %al,0xe(%rbp)
    3383:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3389:	03 57 01             	add    0x1(%rdi),%edx
    338c:	0c 07                	or     $0x7,%al
    338e:	08 00                	or     %al,(%rax)
    3390:	20 00                	and    %al,(%rax)
    3392:	00 00                	add    %al,(%rax)
    3394:	2c 01                	sub    $0x1,%al
    3396:	00 00                	add    %al,(%rax)
    3398:	19 e4                	sbb    %esp,%esp
    339a:	ff                   	(bad)  
    339b:	ff 11                	call   *(%rcx)
    339d:	03 00                	add    (%rax),%eax
    339f:	00 00                	add    %al,(%rax)
    33a1:	45 0e                	rex.RB (bad) 
    33a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    33a9:	48 83 03 03          	addq   $0x3,(%rbx)
    33ad:	00 03                	add    %al,(%rbx)
    33af:	0c 07                	or     $0x7,%al
    33b1:	08 00                	or     %al,(%rax)
    33b3:	00 20                	add    %ah,(%rax)
    33b5:	00 00                	add    %al,(%rax)
    33b7:	00 50 01             	add    %dl,0x1(%rax)
    33ba:	00 00                	add    %al,(%rax)
    33bc:	06                   	(bad)  
    33bd:	e7 ff                	out    %eax,$0xff
    33bf:	ff 21                	jmp    *(%rcx)
    33c1:	04 00                	add    $0x0,%al
    33c3:	00 00                	add    %al,(%rax)
    33c5:	45 0e                	rex.RB (bad) 
    33c7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    33cd:	47 8c 03             	rex.RXB mov %es,(%r11)
    33d0:	83 04 03 11          	addl   $0x11,(%rbx,%rax,1)
    33d4:	04 0c                	add    $0xc,%al
    33d6:	07                   	(bad)  
    33d7:	08 20                	or     %ah,(%rax)
    33d9:	00 00                	add    %al,(%rax)
    33db:	00 74 01 00          	add    %dh,0x0(%rcx,%rax,1)
    33df:	00 03                	add    %al,(%rbx)
    33e1:	eb ff                	jmp    33e2 <__GNU_EH_FRAME_HDR+0x1ee>
    33e3:	ff 5d 05             	lcall  *0x5(%rbp)
    33e6:	00 00                	add    %al,(%rax)
    33e8:	00 45 0e             	add    %al,0xe(%rbp)
    33eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    33f1:	47 8c 03             	rex.RXB mov %es,(%r11)
    33f4:	83 04 03 4d          	addl   $0x4d,(%rbx,%rax,1)
    33f8:	05 0c 07 08 1c       	add    $0x1c08070c,%eax
    33fd:	00 00                	add    %al,(%rax)
    33ff:	00 98 01 00 00 3c    	add    %bl,0x3c000001(%rax)
    3405:	f0 ff                	lock (bad) 
    3407:	ff 87 00 00 00 00    	incl   0x0(%rdi)
    340d:	45 0e                	rex.RB (bad) 
    340f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    3415:	02 7e 0c             	add    0xc(%rsi),%bh
    3418:	07                   	(bad)  
    3419:	08 00                	or     %al,(%rax)
	...

000000000000341c <__FRAME_END__>:
    341c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000004d48 <__frame_dummy_init_array_entry>:
    4d48:	00 13                	add    %dl,(%rbx)
    4d4a:	00 00                	add    %al,(%rax)
    4d4c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000004d50 <__do_global_dtors_aux_fini_array_entry>:
    4d50:	c0 12 00             	rclb   $0x0,(%rdx)
    4d53:	00 00                	add    %al,(%rax)
    4d55:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000004d58 <_DYNAMIC>:
    4d58:	01 00                	add    %eax,(%rax)
    4d5a:	00 00                	add    %al,(%rax)
    4d5c:	00 00                	add    %al,(%rax)
    4d5e:	00 00                	add    %al,(%rax)
    4d60:	9c                   	pushf  
    4d61:	00 00                	add    %al,(%rax)
    4d63:	00 00                	add    %al,(%rax)
    4d65:	00 00                	add    %al,(%rax)
    4d67:	00 0c 00             	add    %cl,(%rax,%rax,1)
    4d6a:	00 00                	add    %al,(%rax)
    4d6c:	00 00                	add    %al,(%rax)
    4d6e:	00 00                	add    %al,(%rax)
    4d70:	00 10                	add    %dl,(%rax)
    4d72:	00 00                	add    %al,(%rax)
    4d74:	00 00                	add    %al,(%rax)
    4d76:	00 00                	add    %al,(%rax)
    4d78:	0d 00 00 00 00       	or     $0x0,%eax
    4d7d:	00 00                	add    %al,(%rax)
    4d7f:	00 c8                	add    %cl,%al
    4d81:	24 00                	and    $0x0,%al
    4d83:	00 00                	add    %al,(%rax)
    4d85:	00 00                	add    %al,(%rax)
    4d87:	00 19                	add    %bl,(%rcx)
    4d89:	00 00                	add    %al,(%rax)
    4d8b:	00 00                	add    %al,(%rax)
    4d8d:	00 00                	add    %al,(%rax)
    4d8f:	00 48 4d             	add    %cl,0x4d(%rax)
    4d92:	00 00                	add    %al,(%rax)
    4d94:	00 00                	add    %al,(%rax)
    4d96:	00 00                	add    %al,(%rax)
    4d98:	1b 00                	sbb    (%rax),%eax
    4d9a:	00 00                	add    %al,(%rax)
    4d9c:	00 00                	add    %al,(%rax)
    4d9e:	00 00                	add    %al,(%rax)
    4da0:	08 00                	or     %al,(%rax)
    4da2:	00 00                	add    %al,(%rax)
    4da4:	00 00                	add    %al,(%rax)
    4da6:	00 00                	add    %al,(%rax)
    4da8:	1a 00                	sbb    (%rax),%al
    4daa:	00 00                	add    %al,(%rax)
    4dac:	00 00                	add    %al,(%rax)
    4dae:	00 00                	add    %al,(%rax)
    4db0:	50                   	push   %rax
    4db1:	4d 00 00             	rex.WRB add %r8b,(%r8)
    4db4:	00 00                	add    %al,(%rax)
    4db6:	00 00                	add    %al,(%rax)
    4db8:	1c 00                	sbb    $0x0,%al
    4dba:	00 00                	add    %al,(%rax)
    4dbc:	00 00                	add    %al,(%rax)
    4dbe:	00 00                	add    %al,(%rax)
    4dc0:	08 00                	or     %al,(%rax)
    4dc2:	00 00                	add    %al,(%rax)
    4dc4:	00 00                	add    %al,(%rax)
    4dc6:	00 00                	add    %al,(%rax)
    4dc8:	f5                   	cmc    
    4dc9:	fe                   	(bad)  
    4dca:	ff 6f 00             	ljmp   *0x0(%rdi)
    4dcd:	00 00                	add    %al,(%rax)
    4dcf:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    4dd5:	00 00                	add    %al,(%rax)
    4dd7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4ddd <_DYNAMIC+0x85>
    4ddd:	00 00                	add    %al,(%rax)
    4ddf:	00 e8                	add    %ch,%al
    4de1:	05 00 00 00 00       	add    $0x0,%eax
    4de6:	00 00                	add    %al,(%rax)
    4de8:	06                   	(bad)  
    4de9:	00 00                	add    %al,(%rax)
    4deb:	00 00                	add    %al,(%rax)
    4ded:	00 00                	add    %al,(%rax)
    4def:	00 d8                	add    %bl,%al
    4df1:	03 00                	add    (%rax),%eax
    4df3:	00 00                	add    %al,(%rax)
    4df5:	00 00                	add    %al,(%rax)
    4df7:	00 0a                	add    %cl,(%rdx)
    4df9:	00 00                	add    %al,(%rax)
    4dfb:	00 00                	add    %al,(%rax)
    4dfd:	00 00                	add    %al,(%rax)
    4dff:	00 0c 01             	add    %cl,(%rcx,%rax,1)
    4e02:	00 00                	add    %al,(%rax)
    4e04:	00 00                	add    %al,(%rax)
    4e06:	00 00                	add    %al,(%rax)
    4e08:	0b 00                	or     (%rax),%eax
    4e0a:	00 00                	add    %al,(%rax)
    4e0c:	00 00                	add    %al,(%rax)
    4e0e:	00 00                	add    %al,(%rax)
    4e10:	18 00                	sbb    %al,(%rax)
    4e12:	00 00                	add    %al,(%rax)
    4e14:	00 00                	add    %al,(%rax)
    4e16:	00 00                	add    %al,(%rax)
    4e18:	15 00 00 00 00       	adc    $0x0,%eax
	...
    4e25:	00 00                	add    %al,(%rax)
    4e27:	00 03                	add    %al,(%rbx)
    4e29:	00 00                	add    %al,(%rax)
    4e2b:	00 00                	add    %al,(%rax)
    4e2d:	00 00                	add    %al,(%rax)
    4e2f:	00 48 4f             	add    %cl,0x4f(%rax)
    4e32:	00 00                	add    %al,(%rax)
    4e34:	00 00                	add    %al,(%rax)
    4e36:	00 00                	add    %al,(%rax)
    4e38:	02 00                	add    (%rax),%al
    4e3a:	00 00                	add    %al,(%rax)
    4e3c:	00 00                	add    %al,(%rax)
    4e3e:	00 00                	add    %al,(%rax)
    4e40:	68 01 00 00 00       	push   $0x1
    4e45:	00 00                	add    %al,(%rax)
    4e47:	00 14 00             	add    %dl,(%rax,%rax,1)
    4e4a:	00 00                	add    %al,(%rax)
    4e4c:	00 00                	add    %al,(%rax)
    4e4e:	00 00                	add    %al,(%rax)
    4e50:	07                   	(bad)  
    4e51:	00 00                	add    %al,(%rax)
    4e53:	00 00                	add    %al,(%rax)
    4e55:	00 00                	add    %al,(%rax)
    4e57:	00 17                	add    %dl,(%rdi)
    4e59:	00 00                	add    %al,(%rax)
    4e5b:	00 00                	add    %al,(%rax)
    4e5d:	00 00                	add    %al,(%rax)
    4e5f:	00 38                	add    %bh,(%rax)
    4e61:	08 00                	or     %al,(%rax)
    4e63:	00 00                	add    %al,(%rax)
    4e65:	00 00                	add    %al,(%rax)
    4e67:	00 07                	add    %al,(%rdi)
    4e69:	00 00                	add    %al,(%rax)
    4e6b:	00 00                	add    %al,(%rax)
    4e6d:	00 00                	add    %al,(%rax)
    4e6f:	00 60 07             	add    %ah,0x7(%rax)
    4e72:	00 00                	add    %al,(%rax)
    4e74:	00 00                	add    %al,(%rax)
    4e76:	00 00                	add    %al,(%rax)
    4e78:	08 00                	or     %al,(%rax)
    4e7a:	00 00                	add    %al,(%rax)
    4e7c:	00 00                	add    %al,(%rax)
    4e7e:	00 00                	add    %al,(%rax)
    4e80:	d8 00                	fadds  (%rax)
    4e82:	00 00                	add    %al,(%rax)
    4e84:	00 00                	add    %al,(%rax)
    4e86:	00 00                	add    %al,(%rax)
    4e88:	09 00                	or     %eax,(%rax)
    4e8a:	00 00                	add    %al,(%rax)
    4e8c:	00 00                	add    %al,(%rax)
    4e8e:	00 00                	add    %al,(%rax)
    4e90:	18 00                	sbb    %al,(%rax)
    4e92:	00 00                	add    %al,(%rax)
    4e94:	00 00                	add    %al,(%rax)
    4e96:	00 00                	add    %al,(%rax)
    4e98:	1e                   	(bad)  
    4e99:	00 00                	add    %al,(%rax)
    4e9b:	00 00                	add    %al,(%rax)
    4e9d:	00 00                	add    %al,(%rax)
    4e9f:	00 08                	add    %cl,(%rax)
    4ea1:	00 00                	add    %al,(%rax)
    4ea3:	00 00                	add    %al,(%rax)
    4ea5:	00 00                	add    %al,(%rax)
    4ea7:	00 fb                	add    %bh,%bl
    4ea9:	ff                   	(bad)  
    4eaa:	ff 6f 00             	ljmp   *0x0(%rdi)
    4ead:	00 00                	add    %al,(%rax)
    4eaf:	00 01                	add    %al,(%rcx)
    4eb1:	00 00                	add    %al,(%rax)
    4eb3:	08 00                	or     %al,(%rax)
    4eb5:	00 00                	add    %al,(%rax)
    4eb7:	00 fe                	add    %bh,%dh
    4eb9:	ff                   	(bad)  
    4eba:	ff 6f 00             	ljmp   *0x0(%rdi)
    4ebd:	00 00                	add    %al,(%rax)
    4ebf:	00 20                	add    %ah,(%rax)
    4ec1:	07                   	(bad)  
    4ec2:	00 00                	add    %al,(%rax)
    4ec4:	00 00                	add    %al,(%rax)
    4ec6:	00 00                	add    %al,(%rax)
    4ec8:	ff                   	(bad)  
    4ec9:	ff                   	(bad)  
    4eca:	ff 6f 00             	ljmp   *0x0(%rdi)
    4ecd:	00 00                	add    %al,(%rax)
    4ecf:	00 01                	add    %al,(%rcx)
    4ed1:	00 00                	add    %al,(%rax)
    4ed3:	00 00                	add    %al,(%rax)
    4ed5:	00 00                	add    %al,(%rax)
    4ed7:	00 f0                	add    %dh,%al
    4ed9:	ff                   	(bad)  
    4eda:	ff 6f 00             	ljmp   *0x0(%rdi)
    4edd:	00 00                	add    %al,(%rax)
    4edf:	00 f4                	add    %dh,%ah
    4ee1:	06                   	(bad)  
    4ee2:	00 00                	add    %al,(%rax)
    4ee4:	00 00                	add    %al,(%rax)
    4ee6:	00 00                	add    %al,(%rax)
    4ee8:	f9                   	stc    
    4ee9:	ff                   	(bad)  
    4eea:	ff 6f 00             	ljmp   *0x0(%rdi)
    4eed:	00 00                	add    %al,(%rax)
    4eef:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000004f48 <_GLOBAL_OFFSET_TABLE_>:
    4f48:	58                   	pop    %rax
    4f49:	4d 00 00             	rex.WRB add %r8b,(%r8)
	...
    4f60:	30 10                	xor    %dl,(%rax)
    4f62:	00 00                	add    %al,(%rax)
    4f64:	00 00                	add    %al,(%rax)
    4f66:	00 00                	add    %al,(%rax)
    4f68:	40 10 00             	rex adc %al,(%rax)
    4f6b:	00 00                	add    %al,(%rax)
    4f6d:	00 00                	add    %al,(%rax)
    4f6f:	00 50 10             	add    %dl,0x10(%rax)
    4f72:	00 00                	add    %al,(%rax)
    4f74:	00 00                	add    %al,(%rax)
    4f76:	00 00                	add    %al,(%rax)
    4f78:	60                   	(bad)  
    4f79:	10 00                	adc    %al,(%rax)
    4f7b:	00 00                	add    %al,(%rax)
    4f7d:	00 00                	add    %al,(%rax)
    4f7f:	00 70 10             	add    %dh,0x10(%rax)
    4f82:	00 00                	add    %al,(%rax)
    4f84:	00 00                	add    %al,(%rax)
    4f86:	00 00                	add    %al,(%rax)
    4f88:	80 10 00             	adcb   $0x0,(%rax)
    4f8b:	00 00                	add    %al,(%rax)
    4f8d:	00 00                	add    %al,(%rax)
    4f8f:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
    4f95:	00 00                	add    %al,(%rax)
    4f97:	00 a0 10 00 00 00    	add    %ah,0x10(%rax)
    4f9d:	00 00                	add    %al,(%rax)
    4f9f:	00 b0 10 00 00 00    	add    %dh,0x10(%rax)
    4fa5:	00 00                	add    %al,(%rax)
    4fa7:	00 c0                	add    %al,%al
    4fa9:	10 00                	adc    %al,(%rax)
    4fab:	00 00                	add    %al,(%rax)
    4fad:	00 00                	add    %al,(%rax)
    4faf:	00 d0                	add    %dl,%al
    4fb1:	10 00                	adc    %al,(%rax)
    4fb3:	00 00                	add    %al,(%rax)
    4fb5:	00 00                	add    %al,(%rax)
    4fb7:	00 e0                	add    %ah,%al
    4fb9:	10 00                	adc    %al,(%rax)
    4fbb:	00 00                	add    %al,(%rax)
    4fbd:	00 00                	add    %al,(%rax)
    4fbf:	00 f0                	add    %dh,%al
    4fc1:	10 00                	adc    %al,(%rax)
    4fc3:	00 00                	add    %al,(%rax)
    4fc5:	00 00                	add    %al,(%rax)
    4fc7:	00 00                	add    %al,(%rax)
    4fc9:	11 00                	adc    %eax,(%rax)
    4fcb:	00 00                	add    %al,(%rax)
    4fcd:	00 00                	add    %al,(%rax)
    4fcf:	00 10                	add    %dl,(%rax)
    4fd1:	11 00                	adc    %eax,(%rax)
	...

Disassembly of section .data:

0000000000005000 <__data_start>:
	...

0000000000005008 <__dso_handle>:
    5008:	08 50 00             	or     %dl,0x0(%rax)
    500b:	00 00                	add    %al,(%rax)
    500d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000005020 <stderr@GLIBC_2.2.5>:
	...

0000000000005028 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__abi_tag-0x314>
   a:	74 75                	je     81 <__abi_tag-0x30b>
   c:	20 31                	and    %dh,(%rcx)
   e:	31 2e                	xor    %ebp,(%rsi)
  10:	34 2e                	xor    $0x2e,%al
  12:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627549 <_end+0x75622519>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__abi_tag-0x2fc>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	32 2e                	xor    (%rsi),%ch
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	31 2e                	xor    %ebp,(%rsi)
  27:	34 2e                	xor    $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
