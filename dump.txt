
conflict:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__abi_tag-0x37>
 328:	78 38                	js     362 <__abi_tag-0x2a>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	80 00 c0             	addb   $0xc0,(%rax)
 35c:	04 00                	add    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	01 00                	add    %eax,(%rax)
 362:	00 00                	add    %al,(%rax)
 364:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 40 c8             	add    %al,-0x38(%rax)
 37a:	0b 4e cc             	or     -0x34(%rsi),%ecx
 37d:	13 a2 45 f4 b9 da    	adc    -0x25460bbb(%rdx),%esp
 383:	45 63 04 87          	movsxd (%r15,%rax,4),%r8d
 387:	11 38                	adc    %edi,(%rax)
 389:	d0 2f                	shrb   (%rdi)
 38b:	46                   	rex.RX

Disassembly of section .note.ABI-tag:

000000000000038c <__abi_tag>:
 38c:	04 00                	add    $0x0,%al
 38e:	00 00                	add    %al,(%rax)
 390:	10 00                	adc    %al,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	01 00                	add    %eax,(%rax)
 396:	00 00                	add    %al,(%rax)
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push %rbp
 39b:	00 00                	add    %al,(%rax)
 39d:	00 00                	add    %al,(%rax)
 39f:	00 03                	add    %al,(%rbx)
 3a1:	00 00                	add    %al,(%rax)
 3a3:	00 02                	add    %al,(%rdx)
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 00                	add    %al,(%rax)
 3a9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    (%rax),%al
 3b2:	00 00                	add    %al,(%rax)
 3b4:	11 00                	adc    %eax,(%rax)
 3b6:	00 00                	add    %al,(%rax)
 3b8:	01 00                	add    %eax,(%rax)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	06                   	(bad)  
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 00                	add    %al,(%rax)
 3c1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3c7:	00 11                	add    %dl,(%rcx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 00                	add    %al,(%rax)
 3cd:	00 00                	add    %al,(%rax)
 3cf:	00 d1                	add    %dl,%cl
 3d1:	65 ce                	gs (bad) 
 3d3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	48 00 00             	rex.W add %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 2a                	add    %ch,(%rdx)
 409:	00 00                	add    %al,(%rax)
 40b:	00 12                	add    %dl,(%rdx)
	...
 41d:	00 00                	add    %al,(%rax)
 41f:	00 a6 00 00 00 20    	add    %ah,0x20000000(%rsi)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 43 00             	add    %al,0x0(%rbx)
 43a:	00 00                	add    %al,(%rax)
 43c:	12 00                	adc    (%rax),%al
	...
 44e:	00 00                	add    %al,(%rax)
 450:	5e                   	pop    %rsi
 451:	00 00                	add    %al,(%rax)
 453:	00 12                	add    %dl,(%rdx)
	...
 465:	00 00                	add    %al,(%rax)
 467:	00 76 00             	add    %dh,0x0(%rsi)
 46a:	00 00                	add    %al,(%rax)
 46c:	12 00                	adc    (%rax),%al
	...
 47e:	00 00                	add    %al,(%rax)
 480:	6f                   	outsl  %ds:(%rsi),(%dx)
 481:	00 00                	add    %al,(%rax)
 483:	00 12                	add    %dl,(%rdx)
	...
 495:	00 00                	add    %al,(%rax)
 497:	00 58 00             	add    %bl,0x0(%rax)
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	1c 00                	sbb    $0x0,%al
 4b2:	00 00                	add    %al,(%rax)
 4b4:	12 00                	adc    (%rax),%al
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	3c 00                	cmp    $0x0,%al
 4ca:	00 00                	add    %al,(%rax)
 4cc:	12 00                	adc    (%rax),%al
	...
 4de:	00 00                	add    %al,(%rax)
 4e0:	4d 00 00             	rex.WRB add %r8b,(%r8)
 4e3:	00 12                	add    %dl,(%rdx)
	...
 4f5:	00 00                	add    %al,(%rax)
 4f7:	00 10                	add    %dl,(%rax)
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 12                	add    %dl,(%rdx)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 c2                	add    %al,%dl
 511:	00 00                	add    %al,(%rax)
 513:	00 20                	add    %ah,(%rax)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 15 00 00 00 12    	add    %dl,0x12000000(%rip)        # 1200052d <_end+0x11ffc515>
	...
 53d:	00 00                	add    %al,(%rax)
 53f:	00 53 00             	add    %dl,0x0(%rbx)
 542:	00 00                	add    %al,(%rax)
 544:	12 00                	adc    (%rax),%al
	...
 556:	00 00                	add    %al,(%rax)
 558:	d1 00                	roll   (%rax)
 55a:	00 00                	add    %al,(%rax)
 55c:	20 00                	and    %al,(%rax)
	...
 56e:	00 00                	add    %al,(%rax)
 570:	01 00                	add    %eax,(%rax)
 572:	00 00                	add    %al,(%rax)
 574:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000588 <.dynstr>:
 588:	00 5f 5f             	add    %bl,0x5f(%rdi)
 58b:	63 78 61             	movsxd 0x61(%rax),%edi
 58e:	5f                   	pop    %rdi
 58f:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 595:	7a 65                	jp     5fc <__abi_tag+0x270>
 597:	00 72 65             	add    %dh,0x65(%rdx)
 59a:	61                   	(bad)  
 59b:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 59f:	6c                   	insb   (%dx),%es:(%rdi)
 5a0:	6c                   	insb   (%dx),%es:(%rdi)
 5a1:	6f                   	outsl  %ds:(%rsi),(%dx)
 5a2:	63 00                	movsxd (%rax),%eax
 5a4:	5f                   	pop    %rdi
 5a5:	5f                   	pop    %rdi
 5a6:	61                   	(bad)  
 5a7:	73 73                	jae    61c <__abi_tag+0x290>
 5a9:	65 72 74             	gs jb  620 <__abi_tag+0x294>
 5ac:	5f                   	pop    %rdi
 5ad:	66 61                	data16 (bad) 
 5af:	69 6c 00 5f 5f 6c 69 	imul   $0x62696c5f,0x5f(%rax,%rax,1),%ebp
 5b6:	62 
 5b7:	63 5f 73             	movsxd 0x73(%rdi),%ebx
 5ba:	74 61                	je     61d <__abi_tag+0x291>
 5bc:	72 74                	jb     632 <__abi_tag+0x2a6>
 5be:	5f                   	pop    %rdi
 5bf:	6d                   	insl   (%dx),%es:(%rdi)
 5c0:	61                   	(bad)  
 5c1:	69 6e 00 6d 65 6d 73 	imul   $0x736d656d,0x0(%rsi),%ebp
 5c8:	65 74 00             	gs je  5cb <__abi_tag+0x23f>
 5cb:	70 75                	jo     642 <__abi_tag+0x2b6>
 5cd:	74 73                	je     642 <__abi_tag+0x2b6>
 5cf:	00 66 72             	add    %ah,0x72(%rsi)
 5d2:	65 65 00 63 6c       	gs add %ah,%gs:0x6c(%rbx)
 5d7:	6f                   	outsl  %ds:(%rsi),(%dx)
 5d8:	73 65                	jae    63f <__abi_tag+0x2b3>
 5da:	00 6f 70             	add    %ch,0x70(%rdi)
 5dd:	65 6e                	outsb  %gs:(%rsi),(%dx)
 5df:	00 6c 73 65          	add    %ch,0x65(%rbx,%rsi,2)
 5e3:	65 6b 00 5f          	imul   $0x5f,%gs:(%rax),%eax
 5e7:	5f                   	pop    %rdi
 5e8:	73 74                	jae    65e <__abi_tag+0x2d2>
 5ea:	61                   	(bad)  
 5eb:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 5ee:	63 68 6b             	movsxd 0x6b(%rax),%ebp
 5f1:	5f                   	pop    %rdi
 5f2:	66 61                	data16 (bad) 
 5f4:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 5fb:	74 
 5fc:	66 00 6d 6d          	data16 add %ch,0x6d(%rbp)
 600:	61                   	(bad)  
 601:	70 00                	jo     603 <__abi_tag+0x277>
 603:	6c                   	insb   (%dx),%es:(%rdi)
 604:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 60b:	36 00 47 4c          	ss add %al,0x4c(%rdi)
 60f:	49                   	rex.WB
 610:	42                   	rex.X
 611:	43 5f                	rex.XB pop %r15
 613:	32 2e                	xor    (%rsi),%ch
 615:	34 00                	xor    $0x0,%al
 617:	47                   	rex.RXB
 618:	4c                   	rex.WR
 619:	49                   	rex.WB
 61a:	42                   	rex.X
 61b:	43 5f                	rex.XB pop %r15
 61d:	32 2e                	xor    (%rsi),%ch
 61f:	33 34 00             	xor    (%rax,%rax,1),%esi
 622:	47                   	rex.RXB
 623:	4c                   	rex.WR
 624:	49                   	rex.WB
 625:	42                   	rex.X
 626:	43 5f                	rex.XB pop %r15
 628:	32 2e                	xor    (%rsi),%ch
 62a:	32 2e                	xor    (%rsi),%ch
 62c:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 631:	4d 5f                	rex.WRB pop %r15
 633:	64 65 72 65          	fs gs jb 69c <__abi_tag+0x310>
 637:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 63e:	4d 
 63f:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 641:	6f                   	outsl  %ds:(%rsi),(%dx)
 642:	6e                   	outsb  %ds:(%rsi),(%dx)
 643:	65 54                	gs push %rsp
 645:	61                   	(bad)  
 646:	62                   	(bad)  
 647:	6c                   	insb   (%dx),%es:(%rdi)
 648:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 64c:	67 6d                	insl   (%dx),%es:(%edi)
 64e:	6f                   	outsl  %ds:(%rsi),(%dx)
 64f:	6e                   	outsb  %ds:(%rsi),(%dx)
 650:	5f                   	pop    %rdi
 651:	73 74                	jae    6c7 <__abi_tag+0x33b>
 653:	61                   	(bad)  
 654:	72 74                	jb     6ca <__abi_tag+0x33e>
 656:	5f                   	pop    %rdi
 657:	5f                   	pop    %rdi
 658:	00 5f 49             	add    %bl,0x49(%rdi)
 65b:	54                   	push   %rsp
 65c:	4d 5f                	rex.WRB pop %r15
 65e:	72 65                	jb     6c5 <__abi_tag+0x339>
 660:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 667:	4d 
 668:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 66a:	6f                   	outsl  %ds:(%rsi),(%dx)
 66b:	6e                   	outsb  %ds:(%rsi),(%dx)
 66c:	65 54                	gs push %rsp
 66e:	61                   	(bad)  
 66f:	62                   	.byte 0x62
 670:	6c                   	insb   (%dx),%es:(%rdi)
 671:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000674 <.gnu.version>:
 674:	00 00                	add    %al,(%rax)
 676:	02 00                	add    (%rax),%al
 678:	03 00                	add    (%rax),%eax
 67a:	01 00                	add    %eax,(%rax)
 67c:	02 00                	add    (%rax),%al
 67e:	04 00                	add    $0x0,%al
 680:	02 00                	add    (%rax),%al
 682:	02 00                	add    (%rax),%al
 684:	02 00                	add    (%rax),%al
 686:	02 00                	add    (%rax),%al
 688:	02 00                	add    (%rax),%al
 68a:	02 00                	add    (%rax),%al
 68c:	02 00                	add    (%rax),%al
 68e:	01 00                	add    %eax,(%rax)
 690:	02 00                	add    (%rax),%al
 692:	02 00                	add    (%rax),%al
 694:	01 00                	add    %eax,(%rax)
 696:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000698 <.gnu.version_r>:
 698:	01 00                	add    %eax,(%rax)
 69a:	03 00                	add    (%rax),%eax
 69c:	7b 00                	jnp    69e <__abi_tag+0x312>
 69e:	00 00                	add    %al,(%rax)
 6a0:	10 00                	adc    %al,(%rax)
 6a2:	00 00                	add    %al,(%rax)
 6a4:	00 00                	add    %al,(%rax)
 6a6:	00 00                	add    %al,(%rax)
 6a8:	14 69                	adc    $0x69,%al
 6aa:	69 0d 00 00 04 00 85 	imul   $0x85,0x40000(%rip),%ecx        # 406b4 <_end+0x3c69c>
 6b1:	00 00 00 
 6b4:	10 00                	adc    %al,(%rax)
 6b6:	00 00                	add    %al,(%rax)
 6b8:	b4 91                	mov    $0x91,%ah
 6ba:	96                   	xchg   %eax,%esi
 6bb:	06                   	(bad)  
 6bc:	00 00                	add    %al,(%rax)
 6be:	03 00                	add    (%rax),%eax
 6c0:	8f 00                	pop    (%rax)
 6c2:	00 00                	add    %al,(%rax)
 6c4:	10 00                	adc    %al,(%rax)
 6c6:	00 00                	add    %al,(%rax)
 6c8:	75 1a                	jne    6e4 <__abi_tag+0x358>
 6ca:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6d0:	9a                   	(bad)  
 6d1:	00 00                	add    %al,(%rax)
 6d3:	00 00                	add    %al,(%rax)
 6d5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006d8 <.rela.dyn>:
 6d8:	60                   	(bad)  
 6d9:	3d 00 00 00 00       	cmp    $0x0,%eax
 6de:	00 00                	add    %al,(%rax)
 6e0:	08 00                	or     %al,(%rax)
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	a0 12 00 00 00 00 00 	movabs 0x6800000000000012,%al
 6ef:	00 68 
 6f1:	3d 00 00 00 00       	cmp    $0x0,%eax
 6f6:	00 00                	add    %al,(%rax)
 6f8:	08 00                	or     %al,(%rax)
 6fa:	00 00                	add    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	60                   	(bad)  
 701:	12 00                	adc    (%rax),%al
 703:	00 00                	add    %al,(%rax)
 705:	00 00                	add    %al,(%rax)
 707:	00 08                	add    %cl,(%rax)
 709:	40 00 00             	rex add %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	08 00                	or     %al,(%rax)
 712:	00 00                	add    %al,(%rax)
 714:	00 00                	add    %al,(%rax)
 716:	00 00                	add    %al,(%rax)
 718:	08 40 00             	or     %al,0x0(%rax)
 71b:	00 00                	add    %al,(%rax)
 71d:	00 00                	add    %al,(%rax)
 71f:	00 d8                	add    %bl,%al
 721:	3f                   	(bad)  
 722:	00 00                	add    %al,(%rax)
 724:	00 00                	add    %al,(%rax)
 726:	00 00                	add    %al,(%rax)
 728:	06                   	(bad)  
 729:	00 00                	add    %al,(%rax)
 72b:	00 02                	add    %al,(%rdx)
	...
 735:	00 00                	add    %al,(%rax)
 737:	00 e0                	add    %ah,%al
 739:	3f                   	(bad)  
 73a:	00 00                	add    %al,(%rax)
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	06                   	(bad)  
 741:	00 00                	add    %al,(%rax)
 743:	00 03                	add    %al,(%rbx)
	...
 74d:	00 00                	add    %al,(%rax)
 74f:	00 e8                	add    %ch,%al
 751:	3f                   	(bad)  
 752:	00 00                	add    %al,(%rax)
 754:	00 00                	add    %al,(%rax)
 756:	00 00                	add    %al,(%rax)
 758:	06                   	(bad)  
 759:	00 00                	add    %al,(%rax)
 75b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 761 <__abi_tag+0x3d5>
 761:	00 00                	add    %al,(%rax)
 763:	00 00                	add    %al,(%rax)
 765:	00 00                	add    %al,(%rax)
 767:	00 f0                	add    %dh,%al
 769:	3f                   	(bad)  
 76a:	00 00                	add    %al,(%rax)
 76c:	00 00                	add    %al,(%rax)
 76e:	00 00                	add    %al,(%rax)
 770:	06                   	(bad)  
 771:	00 00                	add    %al,(%rax)
 773:	00 10                	add    %dl,(%rax)
	...
 77d:	00 00                	add    %al,(%rax)
 77f:	00 f8                	add    %bh,%al
 781:	3f                   	(bad)  
 782:	00 00                	add    %al,(%rax)
 784:	00 00                	add    %al,(%rax)
 786:	00 00                	add    %al,(%rax)
 788:	06                   	(bad)  
 789:	00 00                	add    %al,(%rax)
 78b:	00 11                	add    %dl,(%rcx)
	...

Disassembly of section .rela.plt:

0000000000000798 <.rela.plt>:
 798:	78 3f                	js     7d9 <__abi_tag+0x44d>
 79a:	00 00                	add    %al,(%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	07                   	(bad)  
 7a1:	00 00                	add    %al,(%rax)
 7a3:	00 01                	add    %al,(%rcx)
	...
 7ad:	00 00                	add    %al,(%rax)
 7af:	00 80 3f 00 00 00    	add    %al,0x3f(%rax)
 7b5:	00 00                	add    %al,(%rax)
 7b7:	00 07                	add    %al,(%rdi)
 7b9:	00 00                	add    %al,(%rax)
 7bb:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7c6:	00 00                	add    %al,(%rax)
 7c8:	88 3f                	mov    %bh,(%rdi)
 7ca:	00 00                	add    %al,(%rax)
 7cc:	00 00                	add    %al,(%rax)
 7ce:	00 00                	add    %al,(%rax)
 7d0:	07                   	(bad)  
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7d9 <__abi_tag+0x44d>
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 00                	add    %al,(%rax)
 7dd:	00 00                	add    %al,(%rax)
 7df:	00 90 3f 00 00 00    	add    %dl,0x3f(%rax)
 7e5:	00 00                	add    %al,(%rax)
 7e7:	00 07                	add    %al,(%rdi)
 7e9:	00 00                	add    %al,(%rax)
 7eb:	00 06                	add    %al,(%rsi)
	...
 7f5:	00 00                	add    %al,(%rax)
 7f7:	00 98 3f 00 00 00    	add    %bl,0x3f(%rax)
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 07                	add    %al,(%rdi)
 801:	00 00                	add    %al,(%rax)
 803:	00 07                	add    %al,(%rdi)
	...
 80d:	00 00                	add    %al,(%rax)
 80f:	00 a0 3f 00 00 00    	add    %ah,0x3f(%rax)
 815:	00 00                	add    %al,(%rax)
 817:	00 07                	add    %al,(%rdi)
 819:	00 00                	add    %al,(%rax)
 81b:	00 08                	add    %cl,(%rax)
	...
 825:	00 00                	add    %al,(%rax)
 827:	00 a8 3f 00 00 00    	add    %ch,0x3f(%rax)
 82d:	00 00                	add    %al,(%rax)
 82f:	00 07                	add    %al,(%rdi)
 831:	00 00                	add    %al,(%rax)
 833:	00 09                	add    %cl,(%rcx)
	...
 83d:	00 00                	add    %al,(%rax)
 83f:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
 845:	00 00                	add    %al,(%rax)
 847:	00 07                	add    %al,(%rdi)
 849:	00 00                	add    %al,(%rax)
 84b:	00 0a                	add    %cl,(%rdx)
	...
 855:	00 00                	add    %al,(%rax)
 857:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
 85d:	00 00                	add    %al,(%rax)
 85f:	00 07                	add    %al,(%rdi)
 861:	00 00                	add    %al,(%rax)
 863:	00 0b                	add    %cl,(%rbx)
	...
 86d:	00 00                	add    %al,(%rax)
 86f:	00 c0                	add    %al,%al
 871:	3f                   	(bad)  
 872:	00 00                	add    %al,(%rax)
 874:	00 00                	add    %al,(%rax)
 876:	00 00                	add    %al,(%rax)
 878:	07                   	(bad)  
 879:	00 00                	add    %al,(%rax)
 87b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 886:	00 00                	add    %al,(%rax)
 888:	c8 3f 00 00          	enter  $0x3f,$0x0
 88c:	00 00                	add    %al,(%rax)
 88e:	00 00                	add    %al,(%rax)
 890:	07                   	(bad)  
 891:	00 00                	add    %al,(%rax)
 893:	00 0e                	add    %cl,(%rsi)
	...
 89d:	00 00                	add    %al,(%rax)
 89f:	00 d0                	add    %dl,%al
 8a1:	3f                   	(bad)  
 8a2:	00 00                	add    %al,(%rax)
 8a4:	00 00                	add    %al,(%rax)
 8a6:	00 00                	add    %al,(%rax)
 8a8:	07                   	(bad)  
 8a9:	00 00                	add    %al,(%rax)
 8ab:	00 0f                	add    %cl,(%rdi)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 42 2f 00 00    	push   0x2f42(%rip)        # 3f68 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 43 2f 00 00 	bnd jmp *0x2f43(%rip)        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ef:	90                   	nop

Disassembly of section .plt.got:

00000000000010f0 <__cxa_finalize@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 fd 2e 00 00 	bnd jmp *0x2efd(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001100 <free@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 6d 2e 00 00 	bnd jmp *0x2e6d(%rip)        # 3f78 <free@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <puts@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 65 2e 00 00 	bnd jmp *0x2e65(%rip)        # 3f80 <puts@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__stack_chk_fail@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 5d 2e 00 00 	bnd jmp *0x2e5d(%rip)        # 3f88 <__stack_chk_fail@GLIBC_2.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <mmap@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 55 2e 00 00 	bnd jmp *0x2e55(%rip)        # 3f90 <mmap@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <printf@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 4d 2e 00 00 	bnd jmp *0x2e4d(%rip)        # 3f98 <printf@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <lseek@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 45 2e 00 00 	bnd jmp *0x2e45(%rip)        # 3fa0 <lseek@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <__assert_fail@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 3d 2e 00 00 	bnd jmp *0x2e3d(%rip)        # 3fa8 <__assert_fail@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <memset@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 35 2e 00 00 	bnd jmp *0x2e35(%rip)        # 3fb0 <memset@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <close@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 2d 2e 00 00 	bnd jmp *0x2e2d(%rip)        # 3fb8 <close@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <read@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 25 2e 00 00 	bnd jmp *0x2e25(%rip)        # 3fc0 <read@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <malloc@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 1d 2e 00 00 	bnd jmp *0x2e1d(%rip)        # 3fc8 <malloc@GLIBC_2.2.5>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <open@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 15 2e 00 00 	bnd jmp *0x2e15(%rip)        # 3fd0 <open@GLIBC_2.2.5>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000011c0 <_start>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	31 ed                	xor    %ebp,%ebp
    11c6:	49 89 d1             	mov    %rdx,%r9
    11c9:	5e                   	pop    %rsi
    11ca:	48 89 e2             	mov    %rsp,%rdx
    11cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    11d1:	50                   	push   %rax
    11d2:	54                   	push   %rsp
    11d3:	45 31 c0             	xor    %r8d,%r8d
    11d6:	31 c9                	xor    %ecx,%ecx
    11d8:	48 8d 3d c5 0a 00 00 	lea    0xac5(%rip),%rdi        # 1ca4 <main>
    11df:	ff 15 f3 2d 00 00    	call   *0x2df3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    11e5:	f4                   	hlt    
    11e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    11ed:	00 00 00 

00000000000011f0 <deregister_tm_clones>:
    11f0:	48 8d 3d 19 2e 00 00 	lea    0x2e19(%rip),%rdi        # 4010 <__TMC_END__>
    11f7:	48 8d 05 12 2e 00 00 	lea    0x2e12(%rip),%rax        # 4010 <__TMC_END__>
    11fe:	48 39 f8             	cmp    %rdi,%rax
    1201:	74 15                	je     1218 <deregister_tm_clones+0x28>
    1203:	48 8b 05 d6 2d 00 00 	mov    0x2dd6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    120a:	48 85 c0             	test   %rax,%rax
    120d:	74 09                	je     1218 <deregister_tm_clones+0x28>
    120f:	ff e0                	jmp    *%rax
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	c3                   	ret    
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <register_tm_clones>:
    1220:	48 8d 3d e9 2d 00 00 	lea    0x2de9(%rip),%rdi        # 4010 <__TMC_END__>
    1227:	48 8d 35 e2 2d 00 00 	lea    0x2de2(%rip),%rsi        # 4010 <__TMC_END__>
    122e:	48 29 fe             	sub    %rdi,%rsi
    1231:	48 89 f0             	mov    %rsi,%rax
    1234:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1238:	48 c1 f8 03          	sar    $0x3,%rax
    123c:	48 01 c6             	add    %rax,%rsi
    123f:	48 d1 fe             	sar    %rsi
    1242:	74 14                	je     1258 <register_tm_clones+0x38>
    1244:	48 8b 05 a5 2d 00 00 	mov    0x2da5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    124b:	48 85 c0             	test   %rax,%rax
    124e:	74 08                	je     1258 <register_tm_clones+0x38>
    1250:	ff e0                	jmp    *%rax
    1252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1258:	c3                   	ret    
    1259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001260 <__do_global_dtors_aux>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	80 3d a5 2d 00 00 00 	cmpb   $0x0,0x2da5(%rip)        # 4010 <__TMC_END__>
    126b:	75 2b                	jne    1298 <__do_global_dtors_aux+0x38>
    126d:	55                   	push   %rbp
    126e:	48 83 3d 82 2d 00 00 	cmpq   $0x0,0x2d82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1275:	00 
    1276:	48 89 e5             	mov    %rsp,%rbp
    1279:	74 0c                	je     1287 <__do_global_dtors_aux+0x27>
    127b:	48 8b 3d 86 2d 00 00 	mov    0x2d86(%rip),%rdi        # 4008 <__dso_handle>
    1282:	e8 69 fe ff ff       	call   10f0 <__cxa_finalize@plt>
    1287:	e8 64 ff ff ff       	call   11f0 <deregister_tm_clones>
    128c:	c6 05 7d 2d 00 00 01 	movb   $0x1,0x2d7d(%rip)        # 4010 <__TMC_END__>
    1293:	5d                   	pop    %rbp
    1294:	c3                   	ret    
    1295:	0f 1f 00             	nopl   (%rax)
    1298:	c3                   	ret    
    1299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012a0 <frame_dummy>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	e9 77 ff ff ff       	jmp    1220 <register_tm_clones>

00000000000012a9 <dram_address>:
    12a9:	f3 0f 1e fa          	endbr64 
    12ad:	55                   	push   %rbp
    12ae:	48 89 e5             	mov    %rsp,%rbp
    12b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    12b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    12b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12bd:	48 c1 e8 06          	shr    $0x6,%rax
    12c1:	48 89 c2             	mov    %rax,%rdx
    12c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12c8:	48 c1 e8 0d          	shr    $0xd,%rax
    12cc:	48 31 d0             	xor    %rdx,%rax
    12cf:	83 e0 01             	and    $0x1,%eax
    12d2:	48 89 c2             	mov    %rax,%rdx
    12d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12d9:	48 89 10             	mov    %rdx,(%rax)
    12dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12e0:	48 c1 e8 0e          	shr    $0xe,%rax
    12e4:	48 89 c2             	mov    %rax,%rdx
    12e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    12eb:	48 c1 e8 11          	shr    $0x11,%rax
    12ef:	48 31 d0             	xor    %rdx,%rax
    12f2:	83 e0 01             	and    $0x1,%eax
    12f5:	48 89 c2             	mov    %rax,%rdx
    12f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12fc:	48 89 50 08          	mov    %rdx,0x8(%rax)
    1300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1304:	48 c1 e8 0f          	shr    $0xf,%rax
    1308:	48 89 c2             	mov    %rax,%rdx
    130b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    130f:	48 c1 e8 12          	shr    $0x12,%rax
    1313:	48 31 d0             	xor    %rdx,%rax
    1316:	83 e0 01             	and    $0x1,%eax
    1319:	48 89 c2             	mov    %rax,%rdx
    131c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1320:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1328:	48 c1 e8 10          	shr    $0x10,%rax
    132c:	48 89 c2             	mov    %rax,%rdx
    132f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1333:	48 c1 e8 13          	shr    $0x13,%rax
    1337:	48 31 d0             	xor    %rdx,%rax
    133a:	83 e0 01             	and    $0x1,%eax
    133d:	48 89 c2             	mov    %rax,%rdx
    1340:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1344:	48 89 50 18          	mov    %rdx,0x18(%rax)
    1348:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    134c:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    1353:	00 
    1354:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1358:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    135f:	00 
    1360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1364:	48 c1 e8 11          	shr    $0x11,%rax
    1368:	25 ff ff 01 00       	and    $0x1ffff,%eax
    136d:	48 89 c2             	mov    %rax,%rdx
    1370:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1374:	48 89 50 38          	mov    %rdx,0x38(%rax)
    1378:	90                   	nop
    1379:	5d                   	pop    %rbp
    137a:	c3                   	ret    

000000000000137b <get_physical_addr>:
    137b:	f3 0f 1e fa          	endbr64 
    137f:	55                   	push   %rbp
    1380:	48 89 e5             	mov    %rsp,%rbp
    1383:	48 83 ec 40          	sub    $0x40,%rsp
    1387:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    138b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1392:	00 00 
    1394:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1398:	31 c0                	xor    %eax,%eax
    139a:	be 00 00 00 00       	mov    $0x0,%esi
    139f:	48 8d 05 6a 0c 00 00 	lea    0xc6a(%rip),%rax        # 2010 <_IO_stdin_used+0x10>
    13a6:	48 89 c7             	mov    %rax,%rdi
    13a9:	b8 00 00 00 00       	mov    $0x0,%eax
    13ae:	e8 fd fd ff ff       	call   11b0 <open@plt>
    13b3:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    13b6:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    13ba:	79 28                	jns    13e4 <get_physical_addr+0x69>
    13bc:	48 8d 05 1d 0e 00 00 	lea    0xe1d(%rip),%rax        # 21e0 <__PRETTY_FUNCTION__.0>
    13c3:	48 89 c1             	mov    %rax,%rcx
    13c6:	ba 6d 00 00 00       	mov    $0x6d,%edx
    13cb:	48 8d 05 51 0c 00 00 	lea    0xc51(%rip),%rax        # 2023 <_IO_stdin_used+0x23>
    13d2:	48 89 c6             	mov    %rax,%rsi
    13d5:	48 8d 05 59 0c 00 00 	lea    0xc59(%rip),%rax        # 2035 <_IO_stdin_used+0x35>
    13dc:	48 89 c7             	mov    %rax,%rdi
    13df:	e8 7c fd ff ff       	call   1160 <__assert_fail@plt>
    13e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    13e8:	48 c1 e8 0c          	shr    $0xc,%rax
    13ec:	48 c1 e0 03          	shl    $0x3,%rax
    13f0:	48 89 c1             	mov    %rax,%rcx
    13f3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    13f6:	ba 00 00 00 00       	mov    $0x0,%edx
    13fb:	48 89 ce             	mov    %rcx,%rsi
    13fe:	89 c7                	mov    %eax,%edi
    1400:	e8 4b fd ff ff       	call   1150 <lseek@plt>
    1405:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1409:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    140e:	79 28                	jns    1438 <get_physical_addr+0xbd>
    1410:	48 8d 05 c9 0d 00 00 	lea    0xdc9(%rip),%rax        # 21e0 <__PRETTY_FUNCTION__.0>
    1417:	48 89 c1             	mov    %rax,%rcx
    141a:	ba 70 00 00 00       	mov    $0x70,%edx
    141f:	48 8d 05 fd 0b 00 00 	lea    0xbfd(%rip),%rax        # 2023 <_IO_stdin_used+0x23>
    1426:	48 89 c6             	mov    %rax,%rsi
    1429:	48 8d 05 0d 0c 00 00 	lea    0xc0d(%rip),%rax        # 203d <_IO_stdin_used+0x3d>
    1430:	48 89 c7             	mov    %rax,%rdi
    1433:	e8 28 fd ff ff       	call   1160 <__assert_fail@plt>
    1438:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    143c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    143f:	ba 08 00 00 00       	mov    $0x8,%edx
    1444:	48 89 ce             	mov    %rcx,%rsi
    1447:	89 c7                	mov    %eax,%edi
    1449:	e8 42 fd ff ff       	call   1190 <read@plt>
    144e:	89 45 d8             	mov    %eax,-0x28(%rbp)
    1451:	83 7d d8 08          	cmpl   $0x8,-0x28(%rbp)
    1455:	74 28                	je     147f <get_physical_addr+0x104>
    1457:	48 8d 05 82 0d 00 00 	lea    0xd82(%rip),%rax        # 21e0 <__PRETTY_FUNCTION__.0>
    145e:	48 89 c1             	mov    %rax,%rcx
    1461:	ba 73 00 00 00       	mov    $0x73,%edx
    1466:	48 8d 05 b6 0b 00 00 	lea    0xbb6(%rip),%rax        # 2023 <_IO_stdin_used+0x23>
    146d:	48 89 c6             	mov    %rax,%rsi
    1470:	48 8d 05 cf 0b 00 00 	lea    0xbcf(%rip),%rax        # 2046 <_IO_stdin_used+0x46>
    1477:	48 89 c7             	mov    %rax,%rdi
    147a:	e8 e1 fc ff ff       	call   1160 <__assert_fail@plt>
    147f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1482:	89 c7                	mov    %eax,%edi
    1484:	e8 f7 fc ff ff       	call   1180 <close@plt>
    1489:	89 45 dc             	mov    %eax,-0x24(%rbp)
    148c:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    1490:	74 28                	je     14ba <get_physical_addr+0x13f>
    1492:	48 8d 05 47 0d 00 00 	lea    0xd47(%rip),%rax        # 21e0 <__PRETTY_FUNCTION__.0>
    1499:	48 89 c1             	mov    %rax,%rcx
    149c:	ba 75 00 00 00       	mov    $0x75,%edx
    14a1:	48 8d 05 7b 0b 00 00 	lea    0xb7b(%rip),%rax        # 2023 <_IO_stdin_used+0x23>
    14a8:	48 89 c6             	mov    %rax,%rsi
    14ab:	48 8d 05 9d 0b 00 00 	lea    0xb9d(%rip),%rax        # 204f <_IO_stdin_used+0x4f>
    14b2:	48 89 c7             	mov    %rax,%rdi
    14b5:	e8 a6 fc ff ff       	call   1160 <__assert_fail@plt>
    14ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    14be:	48 85 c0             	test   %rax,%rax
    14c1:	78 28                	js     14eb <get_physical_addr+0x170>
    14c3:	48 8d 05 16 0d 00 00 	lea    0xd16(%rip),%rax        # 21e0 <__PRETTY_FUNCTION__.0>
    14ca:	48 89 c1             	mov    %rax,%rcx
    14cd:	ba 78 00 00 00       	mov    $0x78,%edx
    14d2:	48 8d 05 4a 0b 00 00 	lea    0xb4a(%rip),%rax        # 2023 <_IO_stdin_used+0x23>
    14d9:	48 89 c6             	mov    %rax,%rsi
    14dc:	48 8d 05 74 0b 00 00 	lea    0xb74(%rip),%rax        # 2057 <_IO_stdin_used+0x57>
    14e3:	48 89 c7             	mov    %rax,%rdi
    14e6:	e8 75 fc ff ff       	call   1160 <__assert_fail@plt>
    14eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    14ef:	48 ba ff ff ff ff ff 	movabs $0x3fffffffffffff,%rdx
    14f6:	ff 3f 00 
    14f9:	48 21 d0             	and    %rdx,%rax
    14fc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1500:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1504:	48 c1 e0 0c          	shl    $0xc,%rax
    1508:	48 89 c2             	mov    %rax,%rdx
    150b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    150f:	25 ff 0f 00 00       	and    $0xfff,%eax
    1514:	48 09 d0             	or     %rdx,%rax
    1517:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    151b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1522:	00 00 
    1524:	74 05                	je     152b <get_physical_addr+0x1b0>
    1526:	e8 f5 fb ff ff       	call   1120 <__stack_chk_fail@plt>
    152b:	c9                   	leave  
    152c:	c3                   	ret    

000000000000152d <flush_chunck>:
    152d:	f3 0f 1e fa          	endbr64 
    1531:	55                   	push   %rbp
    1532:	48 89 e5             	mov    %rsp,%rbp
    1535:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1539:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    153c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1543:	eb 1d                	jmp    1562 <flush_chunck+0x35>
    1545:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1548:	48 63 d0             	movslq %eax,%rdx
    154b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    154f:	48 01 d0             	add    %rdx,%rax
    1552:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    155a:	0f ae 38             	clflush (%rax)
    155d:	90                   	nop
    155e:	83 45 f4 40          	addl   $0x40,-0xc(%rbp)
    1562:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1565:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    1568:	77 db                	ja     1545 <flush_chunck+0x18>
    156a:	90                   	nop
    156b:	90                   	nop
    156c:	5d                   	pop    %rbp
    156d:	c3                   	ret    

000000000000156e <check_consecutive>:
    156e:	f3 0f 1e fa          	endbr64 
    1572:	55                   	push   %rbp
    1573:	48 89 e5             	mov    %rsp,%rbp
    1576:	48 83 ec 30          	sub    $0x30,%rsp
    157a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    157e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1582:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1586:	48 89 c7             	mov    %rax,%rdi
    1589:	e8 ed fd ff ff       	call   137b <get_physical_addr>
    158e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1592:	c6 45 e7 01          	movb   $0x1,-0x19(%rbp)
    1596:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    159a:	48 05 00 10 00 00    	add    $0x1000,%rax
    15a0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    15a4:	eb 34                	jmp    15da <check_consecutive+0x6c>
    15a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    15aa:	48 89 c7             	mov    %rax,%rdi
    15ad:	e8 c9 fd ff ff       	call   137b <get_physical_addr>
    15b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    15b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    15ba:	48 05 00 10 00 00    	add    $0x1000,%rax
    15c0:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    15c4:	74 04                	je     15ca <check_consecutive+0x5c>
    15c6:	c6 45 e7 00          	movb   $0x0,-0x19(%rbp)
    15ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    15d2:	48 81 45 f0 00 10 00 	addq   $0x1000,-0x10(%rbp)
    15d9:	00 
    15da:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    15de:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    15e2:	48 01 d0             	add    %rdx,%rax
    15e5:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    15e9:	72 bb                	jb     15a6 <check_consecutive+0x38>
    15eb:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
    15ef:	c9                   	leave  
    15f0:	c3                   	ret    

00000000000015f1 <find_bank_conflict>:
    15f1:	f3 0f 1e fa          	endbr64 
    15f5:	55                   	push   %rbp
    15f6:	48 89 e5             	mov    %rsp,%rbp
    15f9:	53                   	push   %rbx
    15fa:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    1601:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    1605:	89 75 84             	mov    %esi,-0x7c(%rbp)
    1608:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    160f:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    1616:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    161d:	48 c1 e0 0c          	shl    $0xc,%rax
    1621:	48 89 c2             	mov    %rax,%rdx
    1624:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1628:	48 01 d0             	add    %rdx,%rax
    162b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    162f:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    1636:	bf 40 00 00 00       	mov    $0x40,%edi
    163b:	e8 60 fb ff ff       	call   11a0 <malloc@plt>
    1640:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    1644:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1648:	48 89 c7             	mov    %rax,%rdi
    164b:	e8 2b fd ff ff       	call   137b <get_physical_addr>
    1650:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1654:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    1658:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    165c:	48 89 d6             	mov    %rdx,%rsi
    165f:	48 89 c7             	mov    %rax,%rdi
    1662:	e8 42 fc ff ff       	call   12a9 <dram_address>
    1667:	48 8d 05 fe 09 00 00 	lea    0x9fe(%rip),%rax        # 206c <_IO_stdin_used+0x6c>
    166e:	48 89 c7             	mov    %rax,%rdi
    1671:	e8 9a fa ff ff       	call   1110 <puts@plt>
    1676:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    167a:	48 8b 78 38          	mov    0x38(%rax),%rdi
    167e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1682:	48 8b 70 18          	mov    0x18(%rax),%rsi
    1686:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    168a:	48 8b 48 10          	mov    0x10(%rax),%rcx
    168e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1692:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1696:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    169a:	48 8b 00             	mov    (%rax),%rax
    169d:	49 89 f9             	mov    %rdi,%r9
    16a0:	49 89 f0             	mov    %rsi,%r8
    16a3:	48 89 c6             	mov    %rax,%rsi
    16a6:	48 8d 05 d3 09 00 00 	lea    0x9d3(%rip),%rax        # 2080 <_IO_stdin_used+0x80>
    16ad:	48 89 c7             	mov    %rax,%rdi
    16b0:	b8 00 00 00 00       	mov    $0x0,%eax
    16b5:	e8 86 fa ff ff       	call   1140 <printf@plt>
    16ba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    16be:	48 89 c6             	mov    %rax,%rsi
    16c1:	48 8d 05 e1 09 00 00 	lea    0x9e1(%rip),%rax        # 20a9 <_IO_stdin_used+0xa9>
    16c8:	48 89 c7             	mov    %rax,%rdi
    16cb:	b8 00 00 00 00       	mov    $0x0,%eax
    16d0:	e8 6b fa ff ff       	call   1140 <printf@plt>
    16d5:	48 8d 05 d2 09 00 00 	lea    0x9d2(%rip),%rax        # 20ae <_IO_stdin_used+0xae>
    16dc:	48 89 c7             	mov    %rax,%rdi
    16df:	e8 2c fa ff ff       	call   1110 <puts@plt>
    16e4:	48 8d 05 e0 09 00 00 	lea    0x9e0(%rip),%rax        # 20cb <_IO_stdin_used+0xcb>
    16eb:	48 89 c7             	mov    %rax,%rdi
    16ee:	e8 1d fa ff ff       	call   1110 <puts@plt>
    16f3:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    16fa:	e9 c0 01 00 00       	jmp    18bf <find_bank_conflict+0x2ce>
    16ff:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    1706:	e9 a6 01 00 00       	jmp    18b1 <find_bank_conflict+0x2c0>
    170b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    170e:	c1 e0 0c             	shl    $0xc,%eax
    1711:	48 63 d0             	movslq %eax,%rdx
    1714:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1718:	48 01 c2             	add    %rax,%rdx
    171b:	8b 45 a0             	mov    -0x60(%rbp),%eax
    171e:	c1 e0 06             	shl    $0x6,%eax
    1721:	48 98                	cltq   
    1723:	48 01 d0             	add    %rdx,%rax
    1726:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    172a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    172e:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    1732:	0f 84 74 01 00 00    	je     18ac <find_bank_conflict+0x2bb>
    1738:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    173f:	00 
    1740:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
    1747:	eb 63                	jmp    17ac <find_bank_conflict+0x1bb>
    1749:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    174d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1751:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1755:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1759:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    175d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    1761:	48 89 c3             	mov    %rax,%rbx
    1764:	0f ae 3b             	clflush (%rbx)
    1767:	0f ae 3e             	clflush (%rsi)
    176a:	0f ae e8             	lfence 
    176d:	0f 01 f9             	rdtscp 
    1770:	0f ae e8             	lfence 
    1773:	48 89 c7             	mov    %rax,%rdi
    1776:	48 8b 03             	mov    (%rbx),%rax
    1779:	48 8b 06             	mov    (%rsi),%rax
    177c:	0f ae e8             	lfence 
    177f:	0f 01 f9             	rdtscp 
    1782:	0f ae e8             	lfence 
    1785:	48 29 f8             	sub    %rdi,%rax
    1788:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    178c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1790:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1794:	48 81 7d d0 e8 03 00 	cmpq   $0x3e8,-0x30(%rbp)
    179b:	00 
    179c:	76 02                	jbe    17a0 <find_bank_conflict+0x1af>
    179e:	eb 0c                	jmp    17ac <find_bank_conflict+0x1bb>
    17a0:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
    17a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17a8:	48 01 45 a8          	add    %rax,-0x58(%rbp)
    17ac:	81 7d a4 3f 1f 00 00 	cmpl   $0x1f3f,-0x5c(%rbp)
    17b3:	7e 94                	jle    1749 <find_bank_conflict+0x158>
    17b5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    17b9:	48 c1 e8 06          	shr    $0x6,%rax
    17bd:	48 ba 7d 3f 35 5e ba 	movabs $0x20c49ba5e353f7d,%rdx
    17c4:	49 0c 02 
    17c7:	48 f7 e2             	mul    %rdx
    17ca:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    17ce:	48 81 7d a8 d6 01 00 	cmpq   $0x1d6,-0x58(%rbp)
    17d5:	00 
    17d6:	0f 86 d1 00 00 00    	jbe    18ad <find_bank_conflict+0x2bc>
    17dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    17e0:	48 89 c7             	mov    %rax,%rdi
    17e3:	e8 93 fb ff ff       	call   137b <get_physical_addr>
    17e8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    17ec:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    17f0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    17f4:	48 89 d6             	mov    %rdx,%rsi
    17f7:	48 89 c7             	mov    %rax,%rdi
    17fa:	e8 aa fa ff ff       	call   12a9 <dram_address>
    17ff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1803:	48 8b 78 38          	mov    0x38(%rax),%rdi
    1807:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    180b:	48 8b 70 18          	mov    0x18(%rax),%rsi
    180f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1813:	48 8b 48 10          	mov    0x10(%rax),%rcx
    1817:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    181b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    181f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1823:	48 8b 00             	mov    (%rax),%rax
    1826:	49 89 f9             	mov    %rdi,%r9
    1829:	49 89 f0             	mov    %rsi,%r8
    182c:	48 89 c6             	mov    %rax,%rsi
    182f:	48 8d 05 4a 08 00 00 	lea    0x84a(%rip),%rax        # 2080 <_IO_stdin_used+0x80>
    1836:	48 89 c7             	mov    %rax,%rdi
    1839:	b8 00 00 00 00       	mov    $0x0,%eax
    183e:	e8 fd f8 ff ff       	call   1140 <printf@plt>
    1843:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1847:	48 89 c6             	mov    %rax,%rsi
    184a:	48 8d 05 58 08 00 00 	lea    0x858(%rip),%rax        # 20a9 <_IO_stdin_used+0xa9>
    1851:	48 89 c7             	mov    %rax,%rdi
    1854:	b8 00 00 00 00       	mov    $0x0,%eax
    1859:	e8 e2 f8 ff ff       	call   1140 <printf@plt>
    185e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1862:	48 89 c6             	mov    %rax,%rsi
    1865:	48 8d 05 75 08 00 00 	lea    0x875(%rip),%rax        # 20e1 <_IO_stdin_used+0xe1>
    186c:	48 89 c7             	mov    %rax,%rdi
    186f:	b8 00 00 00 00       	mov    $0x0,%eax
    1874:	e8 c7 f8 ff ff       	call   1140 <printf@plt>
    1879:	48 8d 05 2e 08 00 00 	lea    0x82e(%rip),%rax        # 20ae <_IO_stdin_used+0xae>
    1880:	48 89 c7             	mov    %rax,%rdi
    1883:	e8 88 f8 ff ff       	call   1110 <puts@plt>
    1888:	8b 45 98             	mov    -0x68(%rbp),%eax
    188b:	48 98                	cltq   
    188d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1894:	00 
    1895:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    189c:	48 01 c2             	add    %rax,%rdx
    189f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    18a3:	48 89 02             	mov    %rax,(%rdx)
    18a6:	83 45 98 01          	addl   $0x1,-0x68(%rbp)
    18aa:	eb 01                	jmp    18ad <find_bank_conflict+0x2bc>
    18ac:	90                   	nop
    18ad:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
    18b1:	83 7d a0 01          	cmpl   $0x1,-0x60(%rbp)
    18b5:	0f 8e 50 fe ff ff    	jle    170b <find_bank_conflict+0x11a>
    18bb:	83 45 9c 01          	addl   $0x1,-0x64(%rbp)
    18bf:	8b 45 9c             	mov    -0x64(%rbp),%eax
    18c2:	3b 45 84             	cmp    -0x7c(%rbp),%eax
    18c5:	0f 8c 34 fe ff ff    	jl     16ff <find_bank_conflict+0x10e>
    18cb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    18cf:	48 89 c7             	mov    %rax,%rdi
    18d2:	e8 29 f8 ff ff       	call   1100 <free@plt>
    18d7:	8b 45 98             	mov    -0x68(%rbp),%eax
    18da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    18de:	c9                   	leave  
    18df:	c3                   	ret    

00000000000018e0 <memory_template>:
    18e0:	f3 0f 1e fa          	endbr64 
    18e4:	55                   	push   %rbp
    18e5:	48 89 e5             	mov    %rsp,%rbp
    18e8:	48 83 ec 50          	sub    $0x50,%rsp
    18ec:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    18f0:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    18f3:	c7 45 c8 04 00 00 00 	movl   $0x4,-0x38(%rbp)
    18fa:	bf 28 00 00 00       	mov    $0x28,%edi
    18ff:	e8 9c f8 ff ff       	call   11a0 <malloc@plt>
    1904:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1908:	e9 81 03 00 00       	jmp    1c8e <memory_template+0x3ae>
    190d:	48 8d 05 d4 07 00 00 	lea    0x7d4(%rip),%rax        # 20e8 <_IO_stdin_used+0xe8>
    1914:	48 89 c7             	mov    %rax,%rdi
    1917:	e8 f4 f7 ff ff       	call   1110 <puts@plt>
    191c:	8b 45 c8             	mov    -0x38(%rbp),%eax
    191f:	48 98                	cltq   
    1921:	48 c1 e0 03          	shl    $0x3,%rax
    1925:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    1929:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    192d:	48 01 d0             	add    %rdx,%rax
    1930:	48 8b 00             	mov    (%rax),%rax
    1933:	ba 00 10 00 00       	mov    $0x1000,%edx
    1938:	be 00 00 00 00       	mov    $0x0,%esi
    193d:	48 89 c7             	mov    %rax,%rdi
    1940:	e8 2b f8 ff ff       	call   1170 <memset@plt>
    1945:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1948:	48 98                	cltq   
    194a:	48 c1 e0 03          	shl    $0x3,%rax
    194e:	48 8d 50 e8          	lea    -0x18(%rax),%rdx
    1952:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1956:	48 01 d0             	add    %rdx,%rax
    1959:	48 8b 00             	mov    (%rax),%rax
    195c:	ba 00 10 00 00       	mov    $0x1000,%edx
    1961:	be 00 00 00 00       	mov    $0x0,%esi
    1966:	48 89 c7             	mov    %rax,%rdi
    1969:	e8 02 f8 ff ff       	call   1170 <memset@plt>
    196e:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1971:	48 98                	cltq   
    1973:	48 c1 e0 03          	shl    $0x3,%rax
    1977:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
    197b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    197f:	48 01 d0             	add    %rdx,%rax
    1982:	48 8b 00             	mov    (%rax),%rax
    1985:	ba 00 10 00 00       	mov    $0x1000,%edx
    198a:	be 00 00 00 00       	mov    $0x0,%esi
    198f:	48 89 c7             	mov    %rax,%rdi
    1992:	e8 d9 f7 ff ff       	call   1170 <memset@plt>
    1997:	8b 45 c8             	mov    -0x38(%rbp),%eax
    199a:	48 98                	cltq   
    199c:	48 c1 e0 03          	shl    $0x3,%rax
    19a0:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
    19a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    19a8:	48 01 d0             	add    %rdx,%rax
    19ab:	48 8b 00             	mov    (%rax),%rax
    19ae:	ba 00 10 00 00       	mov    $0x1000,%edx
    19b3:	be 00 00 00 00       	mov    $0x0,%esi
    19b8:	48 89 c7             	mov    %rax,%rdi
    19bb:	e8 b0 f7 ff ff       	call   1170 <memset@plt>
    19c0:	8b 45 c8             	mov    -0x38(%rbp),%eax
    19c3:	48 98                	cltq   
    19c5:	48 83 c0 04          	add    $0x4,%rax
    19c9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    19d0:	00 
    19d1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    19d5:	48 01 d0             	add    %rdx,%rax
    19d8:	48 8b 00             	mov    (%rax),%rax
    19db:	ba 00 10 00 00       	mov    $0x1000,%edx
    19e0:	be 00 00 00 00       	mov    $0x0,%esi
    19e5:	48 89 c7             	mov    %rax,%rdi
    19e8:	e8 83 f7 ff ff       	call   1170 <memset@plt>
    19ed:	8b 45 c8             	mov    -0x38(%rbp),%eax
    19f0:	48 98                	cltq   
    19f2:	48 83 c0 05          	add    $0x5,%rax
    19f6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    19fd:	00 
    19fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1a02:	48 01 d0             	add    %rdx,%rax
    1a05:	48 8b 00             	mov    (%rax),%rax
    1a08:	ba 00 10 00 00       	mov    $0x1000,%edx
    1a0d:	be 00 00 00 00       	mov    $0x0,%esi
    1a12:	48 89 c7             	mov    %rax,%rdi
    1a15:	e8 56 f7 ff ff       	call   1170 <memset@plt>
    1a1a:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1a1d:	48 98                	cltq   
    1a1f:	48 83 c0 06          	add    $0x6,%rax
    1a23:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1a2a:	00 
    1a2b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1a2f:	48 01 d0             	add    %rdx,%rax
    1a32:	48 8b 00             	mov    (%rax),%rax
    1a35:	ba 00 10 00 00       	mov    $0x1000,%edx
    1a3a:	be 00 00 00 00       	mov    $0x0,%esi
    1a3f:	48 89 c7             	mov    %rax,%rdi
    1a42:	e8 29 f7 ff ff       	call   1170 <memset@plt>
    1a47:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1a4a:	48 98                	cltq   
    1a4c:	48 83 c0 07          	add    $0x7,%rax
    1a50:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1a57:	00 
    1a58:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1a5c:	48 01 d0             	add    %rdx,%rax
    1a5f:	48 8b 00             	mov    (%rax),%rax
    1a62:	ba 00 10 00 00       	mov    $0x1000,%edx
    1a67:	be 00 00 00 00       	mov    $0x0,%esi
    1a6c:	48 89 c7             	mov    %rax,%rdi
    1a6f:	e8 fc f6 ff ff       	call   1170 <memset@plt>
    1a74:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1a77:	48 98                	cltq   
    1a79:	48 c1 e0 03          	shl    $0x3,%rax
    1a7d:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    1a81:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1a85:	48 01 d0             	add    %rdx,%rax
    1a88:	48 8b 10             	mov    (%rax),%rdx
    1a8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a8f:	48 89 10             	mov    %rdx,(%rax)
    1a92:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1a95:	48 98                	cltq   
    1a97:	48 83 c0 04          	add    $0x4,%rax
    1a9b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1aa2:	00 
    1aa3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1aa7:	48 01 d0             	add    %rdx,%rax
    1aaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1aae:	48 83 c2 08          	add    $0x8,%rdx
    1ab2:	48 8b 00             	mov    (%rax),%rax
    1ab5:	48 89 02             	mov    %rax,(%rdx)
    1ab8:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1abb:	48 98                	cltq   
    1abd:	48 83 c0 08          	add    $0x8,%rax
    1ac1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1ac8:	00 
    1ac9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1acd:	48 01 d0             	add    %rdx,%rax
    1ad0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1ad4:	48 83 c2 10          	add    $0x10,%rdx
    1ad8:	48 8b 00             	mov    (%rax),%rax
    1adb:	48 89 02             	mov    %rax,(%rdx)
    1ade:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    1ae5:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    1aec:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    1af3:	e9 88 01 00 00       	jmp    1c80 <memory_template+0x3a0>
    1af8:	8b 55 c8             	mov    -0x38(%rbp),%edx
    1afb:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1afe:	01 d0                	add    %edx,%eax
    1b00:	48 98                	cltq   
    1b02:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1b09:	00 
    1b0a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1b0e:	48 01 d0             	add    %rdx,%rax
    1b11:	48 8b 00             	mov    (%rax),%rax
    1b14:	ba 00 10 00 00       	mov    $0x1000,%edx
    1b19:	be ff 00 00 00       	mov    $0xff,%esi
    1b1e:	48 89 c7             	mov    %rax,%rdi
    1b21:	e8 4a f6 ff ff       	call   1170 <memset@plt>
    1b26:	8b 55 c8             	mov    -0x38(%rbp),%edx
    1b29:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1b2c:	01 d0                	add    %edx,%eax
    1b2e:	48 98                	cltq   
    1b30:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1b37:	00 
    1b38:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1b3c:	48 01 d0             	add    %rdx,%rax
    1b3f:	48 8b 00             	mov    (%rax),%rax
    1b42:	be 00 10 00 00       	mov    $0x1000,%esi
    1b47:	48 89 c7             	mov    %rax,%rdi
    1b4a:	e8 de f9 ff ff       	call   152d <flush_chunck>
    1b4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1b57:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%rbp)
    1b5e:	c7 45 e4 a0 bb 0d 00 	movl   $0xdbba0,-0x1c(%rbp)
    1b65:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    1b6c:	eb 3c                	jmp    1baa <memory_template+0x2ca>
    1b6e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1b75:	eb 27                	jmp    1b9e <memory_template+0x2be>
    1b77:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b7a:	48 98                	cltq   
    1b7c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1b83:	00 
    1b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1b88:	48 01 d0             	add    %rdx,%rax
    1b8b:	48 8b 10             	mov    (%rax),%rdx
    1b8e:	48 89 d1             	mov    %rdx,%rcx
    1b91:	0f ae 39             	clflush (%rcx)
    1b94:	0f ae f0             	mfence 
    1b97:	48 8b 01             	mov    (%rcx),%rax
    1b9a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1b9e:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1ba1:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    1ba4:	7f d1                	jg     1b77 <memory_template+0x297>
    1ba6:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    1baa:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1bad:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    1bb0:	7f bc                	jg     1b6e <memory_template+0x28e>
    1bb2:	90                   	nop
    1bb3:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    1bba:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    1bc1:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    1bc8:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    1bcf:	e9 9b 00 00 00       	jmp    1c6f <memory_template+0x38f>
    1bd4:	8b 55 c8             	mov    -0x38(%rbp),%edx
    1bd7:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1bda:	01 d0                	add    %edx,%eax
    1bdc:	48 98                	cltq   
    1bde:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1be5:	00 
    1be6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1bea:	48 01 d0             	add    %rdx,%rax
    1bed:	48 8b 10             	mov    (%rax),%rdx
    1bf0:	8b 45 d0             	mov    -0x30(%rbp),%eax
    1bf3:	48 98                	cltq   
    1bf5:	48 01 d0             	add    %rdx,%rax
    1bf8:	0f b6 00             	movzbl (%rax),%eax
    1bfb:	3c ff                	cmp    $0xff,%al
    1bfd:	74 6c                	je     1c6b <memory_template+0x38b>
    1bff:	8b 55 c8             	mov    -0x38(%rbp),%edx
    1c02:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1c05:	01 d0                	add    %edx,%eax
    1c07:	48 98                	cltq   
    1c09:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1c10:	00 
    1c11:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1c15:	48 01 d0             	add    %rdx,%rax
    1c18:	48 8b 10             	mov    (%rax),%rdx
    1c1b:	8b 45 d0             	mov    -0x30(%rbp),%eax
    1c1e:	48 98                	cltq   
    1c20:	48 01 d0             	add    %rdx,%rax
    1c23:	0f b6 00             	movzbl (%rax),%eax
    1c26:	0f be c0             	movsbl %al,%eax
    1c29:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    1c2c:	8b 55 cc             	mov    -0x34(%rbp),%edx
    1c2f:	01 ca                	add    %ecx,%edx
    1c31:	48 63 d2             	movslq %edx,%rdx
    1c34:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    1c3b:	00 
    1c3c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    1c40:	48 01 ca             	add    %rcx,%rdx
    1c43:	48 8b 0a             	mov    (%rdx),%rcx
    1c46:	8b 55 d0             	mov    -0x30(%rbp),%edx
    1c49:	48 63 d2             	movslq %edx,%rdx
    1c4c:	48 01 ca             	add    %rcx,%rdx
    1c4f:	48 89 d1             	mov    %rdx,%rcx
    1c52:	89 c2                	mov    %eax,%edx
    1c54:	48 89 ce             	mov    %rcx,%rsi
    1c57:	48 8d 05 cf 04 00 00 	lea    0x4cf(%rip),%rax        # 212d <_IO_stdin_used+0x12d>
    1c5e:	48 89 c7             	mov    %rax,%rdi
    1c61:	b8 00 00 00 00       	mov    $0x0,%eax
    1c66:	e8 d5 f4 ff ff       	call   1140 <printf@plt>
    1c6b:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    1c6f:	81 7d d0 ff 0f 00 00 	cmpl   $0xfff,-0x30(%rbp)
    1c76:	0f 8e 58 ff ff ff    	jle    1bd4 <memory_template+0x2f4>
    1c7c:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    1c80:	83 7d cc 03          	cmpl   $0x3,-0x34(%rbp)
    1c84:	0f 8e 6e fe ff ff    	jle    1af8 <memory_template+0x218>
    1c8a:	83 45 c8 04          	addl   $0x4,-0x38(%rbp)
    1c8e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    1c91:	83 e8 07             	sub    $0x7,%eax
    1c94:	39 45 c8             	cmp    %eax,-0x38(%rbp)
    1c97:	0f 8c 70 fc ff ff    	jl     190d <memory_template+0x2d>
    1c9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1ca2:	c9                   	leave  
    1ca3:	c3                   	ret    

0000000000001ca4 <main>:
    1ca4:	f3 0f 1e fa          	endbr64 
    1ca8:	55                   	push   %rbp
    1ca9:	48 89 e5             	mov    %rsp,%rbp
    1cac:	48 83 ec 20          	sub    $0x20,%rsp
    1cb0:	c7 45 e4 00 01 00 00 	movl   $0x100,-0x1c(%rbp)
    1cb7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1cba:	c1 e0 0c             	shl    $0xc,%eax
    1cbd:	48 98                	cltq   
    1cbf:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    1cc5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    1ccb:	b9 22 80 00 00       	mov    $0x8022,%ecx
    1cd0:	ba 03 00 00 00       	mov    $0x3,%edx
    1cd5:	48 89 c6             	mov    %rax,%rsi
    1cd8:	bf 00 00 00 00       	mov    $0x0,%edi
    1cdd:	e8 4e f4 ff ff       	call   1130 <mmap@plt>
    1ce2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1ce6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    1ce9:	c1 e0 0c             	shl    $0xc,%eax
    1cec:	48 63 d0             	movslq %eax,%rdx
    1cef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1cf3:	48 89 d6             	mov    %rdx,%rsi
    1cf6:	48 89 c7             	mov    %rax,%rdi
    1cf9:	e8 70 f8 ff ff       	call   156e <check_consecutive>
    1cfe:	83 f0 01             	xor    $0x1,%eax
    1d01:	84 c0                	test   %al,%al
    1d03:	75 b2                	jne    1cb7 <main+0x13>
    1d05:	bf 20 03 00 00       	mov    $0x320,%edi
    1d0a:	e8 91 f4 ff ff       	call   11a0 <malloc@plt>
    1d0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1d13:	48 8d 05 2e 04 00 00 	lea    0x42e(%rip),%rax        # 2148 <_IO_stdin_used+0x148>
    1d1a:	48 89 c7             	mov    %rax,%rdi
    1d1d:	e8 ee f3 ff ff       	call   1110 <puts@plt>
    1d22:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    1d29:	eb 5c                	jmp    1d87 <main+0xe3>
    1d2b:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1d2e:	89 c6                	mov    %eax,%esi
    1d30:	48 8d 05 69 04 00 00 	lea    0x469(%rip),%rax        # 21a0 <_IO_stdin_used+0x1a0>
    1d37:	48 89 c7             	mov    %rax,%rdi
    1d3a:	b8 00 00 00 00       	mov    $0x0,%eax
    1d3f:	e8 fc f3 ff ff       	call   1140 <printf@plt>
    1d44:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1d47:	48 63 d0             	movslq %eax,%rdx
    1d4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1d4e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1d52:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    1d55:	48 89 c7             	mov    %rax,%rdi
    1d58:	e8 94 f8 ff ff       	call   15f1 <find_bank_conflict>
    1d5d:	89 45 e8             	mov    %eax,-0x18(%rbp)
    1d60:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1d67:	89 d6                	mov    %edx,%esi
    1d69:	48 89 c7             	mov    %rax,%rdi
    1d6c:	e8 6f fb ff ff       	call   18e0 <memory_template>
    1d71:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1d74:	48 8d 05 cd 03 00 00 	lea    0x3cd(%rip),%rax        # 2148 <_IO_stdin_used+0x148>
    1d7b:	48 89 c7             	mov    %rax,%rdi
    1d7e:	e8 8d f3 ff ff       	call   1110 <puts@plt>
    1d83:	83 45 e0 02          	addl   $0x2,-0x20(%rbp)
    1d87:	83 7d e0 3f          	cmpl   $0x3f,-0x20(%rbp)
    1d8b:	7e 9e                	jle    1d2b <main+0x87>
    1d8d:	90                   	nop
    1d8e:	90                   	nop
    1d8f:	c9                   	leave  
    1d90:	c3                   	ret    

Disassembly of section .fini:

0000000000001d94 <_fini>:
    1d94:	f3 0f 1e fa          	endbr64 
    1d98:	48 83 ec 08          	sub    $0x8,%rsp
    1d9c:	48 83 c4 08          	add    $0x8,%rsp
    1da0:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
	...
    2010:	2f                   	(bad)  
    2011:	70 72                	jo     2085 <_IO_stdin_used+0x85>
    2013:	6f                   	outsl  %ds:(%rsi),(%dx)
    2014:	63 2f                	movsxd (%rdi),%ebp
    2016:	73 65                	jae    207d <_IO_stdin_used+0x7d>
    2018:	6c                   	insb   (%dx),%es:(%rdi)
    2019:	66 2f                	data16 (bad) 
    201b:	70 61                	jo     207e <_IO_stdin_used+0x7e>
    201d:	67 65 6d             	gs insl (%dx),%es:(%edi)
    2020:	61                   	(bad)  
    2021:	70 00                	jo     2023 <_IO_stdin_used+0x23>
    2023:	72 6f                	jb     2094 <_IO_stdin_used+0x94>
    2025:	77 68                	ja     208f <_IO_stdin_used+0x8f>
    2027:	61                   	(bad)  
    2028:	6d                   	insl   (%dx),%es:(%rdi)
    2029:	6d                   	insl   (%dx),%es:(%rdi)
    202a:	65 72 5f             	gs jb  208c <_IO_stdin_used+0x8c>
    202d:	75 74                	jne    20a3 <_IO_stdin_used+0xa3>
    202f:	69 6c 73 2e 68 00 66 	imul   $0x64660068,0x2e(%rbx,%rsi,2),%ebp
    2036:	64 
    2037:	20 3e                	and    %bh,(%rsi)
    2039:	3d 20 30 00 70       	cmp    $0x70003020,%eax
    203e:	6f                   	outsl  %ds:(%rsi),(%dx)
    203f:	73 20                	jae    2061 <_IO_stdin_used+0x61>
    2041:	3e 3d 20 30 00 67    	ds cmp $0x67003020,%eax
    2047:	6f                   	outsl  %ds:(%rsi),(%dx)
    2048:	74 20                	je     206a <_IO_stdin_used+0x6a>
    204a:	3d 3d 20 38 00       	cmp    $0x38203d,%eax
    204f:	72 63                	jb     20b4 <_IO_stdin_used+0xb4>
    2051:	20 3d 3d 20 30 00    	and    %bh,0x30203d(%rip)        # 304094 <_end+0x30007c>
    2057:	76 61                	jbe    20ba <_IO_stdin_used+0xba>
    2059:	6c                   	insb   (%dx),%es:(%rdi)
    205a:	75 65                	jne    20c1 <_IO_stdin_used+0xc1>
    205c:	20 26                	and    %ah,(%rsi)
    205e:	20 28                	and    %ch,(%rax)
    2060:	31 55 4c             	xor    %edx,0x4c(%rbp)
    2063:	4c 20 3c 3c          	rex.WR and %r15b,(%rsp,%rdi,1)
    2067:	20 36                	and    %dh,(%rsi)
    2069:	33 29                	xor    (%rcx),%ebp
    206b:	00 42 61             	add    %al,0x61(%rdx)
    206e:	73 65                	jae    20d5 <_IO_stdin_used+0xd5>
    2070:	20 70 61             	and    %dh,0x61(%rax)
    2073:	67 65 20 6d 65       	and    %ch,%gs:0x65(%ebp)
    2078:	6d                   	insl   (%dx),%es:(%rdi)
    2079:	6f                   	outsl  %ds:(%rsi),(%dx)
    207a:	72 79                	jb     20f5 <_IO_stdin_used+0xf5>
    207c:	00 00                	add    %al,(%rax)
    207e:	00 00                	add    %al,(%rax)
    2080:	42                   	rex.X
    2081:	41 30 3a             	xor    %dil,(%r10)
    2084:	25 6c 78 20 42       	and    $0x4220786c,%eax
    2089:	41 31 3a             	xor    %edi,(%r10)
    208c:	25 6c 78 20 42       	and    $0x4220786c,%eax
    2091:	41 32 3a             	xor    (%r10),%dil
    2094:	25 6c 78 20 42       	and    $0x4220786c,%eax
    2099:	41 33 3a             	xor    (%r10),%edi
    209c:	25 6c 78 20 72       	and    $0x7220786c,%eax
    20a1:	6f                   	outsl  %ds:(%rsi),(%dx)
    20a2:	77 3a                	ja     20de <_IO_stdin_used+0xde>
    20a4:	25 6c 78 0a 00       	and    $0xa786c,%eax
    20a9:	25 6c 78 0a 00       	and    $0xa786c,%eax
    20ae:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    20b3:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    20b8:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    20bd:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    20c2:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    20c7:	2d 2d 2d 00 73       	sub    $0x73002d2d,%eax
    20cc:	74 61                	je     212f <_IO_stdin_used+0x12f>
    20ce:	72 74                	jb     2144 <_IO_stdin_used+0x144>
    20d0:	69 6e 67 20 72 6f 77 	imul   $0x776f7220,0x67(%rsi),%ebp
    20d7:	20 63 6f             	and    %ah,0x6f(%rbx)
    20da:	6e                   	outsb  %ds:(%rsi),(%dx)
    20db:	66 6c                	data16 insb (%dx),%es:(%rdi)
    20dd:	69 63 74 00 25 6c 75 	imul   $0x756c2500,0x74(%rbx),%esp
    20e4:	0a 00                	or     (%rax),%al
    20e6:	00 00                	add    %al,(%rax)
    20e8:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    20ed:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    20f2:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    20f7:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    20fc:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2101:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2106:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    210b:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2110:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2115:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    211a:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    211f:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2124:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    2129:	2d 2d 2d 00 46       	sub    $0x46002d2d,%eax
    212e:	4c                   	rex.WR
    212f:	49 50                	rex.WB push %r8
    2131:	20 69 6e             	and    %ch,0x6e(%rcx)
    2134:	20 61 64             	and    %ah,0x64(%rcx)
    2137:	64 72 20             	fs jb  215a <_IO_stdin_used+0x15a>
    213a:	25 6c 78 3a 20       	and    $0x203a786c,%eax
    213f:	25 68 68 78 0a       	and    $0xa786868,%eax
    2144:	00 00                	add    %al,(%rax)
    2146:	00 00                	add    %al,(%rax)
    2148:	23 23                	and    (%rbx),%esp
    214a:	23 23                	and    (%rbx),%esp
    214c:	23 23                	and    (%rbx),%esp
    214e:	23 23                	and    (%rbx),%esp
    2150:	23 23                	and    (%rbx),%esp
    2152:	23 23                	and    (%rbx),%esp
    2154:	23 23                	and    (%rbx),%esp
    2156:	23 23                	and    (%rbx),%esp
    2158:	23 23                	and    (%rbx),%esp
    215a:	23 23                	and    (%rbx),%esp
    215c:	23 23                	and    (%rbx),%esp
    215e:	23 23                	and    (%rbx),%esp
    2160:	23 23                	and    (%rbx),%esp
    2162:	23 23                	and    (%rbx),%esp
    2164:	23 23                	and    (%rbx),%esp
    2166:	23 23                	and    (%rbx),%esp
    2168:	23 23                	and    (%rbx),%esp
    216a:	23 23                	and    (%rbx),%esp
    216c:	23 23                	and    (%rbx),%esp
    216e:	23 23                	and    (%rbx),%esp
    2170:	23 23                	and    (%rbx),%esp
    2172:	23 23                	and    (%rbx),%esp
    2174:	23 23                	and    (%rbx),%esp
    2176:	23 23                	and    (%rbx),%esp
    2178:	23 23                	and    (%rbx),%esp
    217a:	23 23                	and    (%rbx),%esp
    217c:	23 23                	and    (%rbx),%esp
    217e:	23 23                	and    (%rbx),%esp
    2180:	23 23                	and    (%rbx),%esp
    2182:	23 23                	and    (%rbx),%esp
    2184:	23 23                	and    (%rbx),%esp
    2186:	23 23                	and    (%rbx),%esp
    2188:	23 23                	and    (%rbx),%esp
    218a:	23 23                	and    (%rbx),%esp
    218c:	23 23                	and    (%rbx),%esp
    218e:	23 23                	and    (%rbx),%esp
    2190:	23 23                	and    (%rbx),%esp
    2192:	23 23                	and    (%rbx),%esp
    2194:	23 23                	and    (%rbx),%esp
    2196:	23 23                	and    (%rbx),%esp
	...
    21a0:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    21a5:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    21aa:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    21af:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    21b4:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    21b9:	42                   	rex.X
    21ba:	41 53                	push   %r11
    21bc:	45 20 50 61          	and    %r10b,0x61(%r8)
    21c0:	67 65 3a 20          	cmp    %gs:(%eax),%ah
    21c4:	25 64 2d 2d 2d       	and    $0x2d2d2d64,%eax
    21c9:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    21ce:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    21d3:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    21d8:	2d 2d 2d 2d 0a       	sub    $0xa2d2d2d,%eax
    21dd:	00 00                	add    %al,(%rax)
	...

00000000000021e0 <__PRETTY_FUNCTION__.0>:
    21e0:	67 65 74 5f          	addr32 gs je 2243 <__GNU_EH_FRAME_HDR+0x4f>
    21e4:	70 68                	jo     224e <__GNU_EH_FRAME_HDR+0x5a>
    21e6:	79 73                	jns    225b <__GNU_EH_FRAME_HDR+0x67>
    21e8:	69 63 61 6c 5f 61 64 	imul   $0x64615f6c,0x61(%rbx),%esp
    21ef:	64 72 00             	fs jb  21f2 <__PRETTY_FUNCTION__.0+0x12>

Disassembly of section .eh_frame_hdr:

00000000000021f4 <__GNU_EH_FRAME_HDR>:
    21f4:	01 1b                	add    %ebx,(%rbx)
    21f6:	03 3b                	add    (%rbx),%edi
    21f8:	60                   	(bad)  
    21f9:	00 00                	add    %al,(%rax)
    21fb:	00 0b                	add    %cl,(%rbx)
    21fd:	00 00                	add    %al,(%rax)
    21ff:	00 2c ee             	add    %ch,(%rsi,%rbp,8)
    2202:	ff                   	(bad)  
    2203:	ff 94 00 00 00 fc ee 	call   *-0x11040000(%rax,%rax,1)
    220a:	ff                   	(bad)  
    220b:	ff                   	(bad)  
    220c:	bc 00 00 00 0c       	mov    $0xc000000,%esp
    2211:	ef                   	out    %eax,(%dx)
    2212:	ff                   	(bad)  
    2213:	ff d4                	call   *%rsp
    2215:	00 00                	add    %al,(%rax)
    2217:	00 cc                	add    %cl,%ah
    2219:	ef                   	out    %eax,(%dx)
    221a:	ff                   	(bad)  
    221b:	ff                   	(bad)  
    221c:	7c 00                	jl     221e <__GNU_EH_FRAME_HDR+0x2a>
    221e:	00 00                	add    %al,(%rax)
    2220:	b5 f0                	mov    $0xf0,%ch
    2222:	ff                   	(bad)  
    2223:	ff                   	(bad)  
    2224:	ec                   	in     (%dx),%al
    2225:	00 00                	add    %al,(%rax)
    2227:	00 87 f1 ff ff 0c    	add    %al,0xcfffff1(%rdi)
    222d:	01 00                	add    %eax,(%rax)
    222f:	00 39                	add    %bh,(%rcx)
    2231:	f3 ff                	repz (bad) 
    2233:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
    2236:	00 00                	add    %al,(%rax)
    2238:	7a f3                	jp     222d <__GNU_EH_FRAME_HDR+0x39>
    223a:	ff                   	(bad)  
    223b:	ff 4c 01 00          	decl   0x0(%rcx,%rax,1)
    223f:	00 fd                	add    %bh,%ch
    2241:	f3 ff                	repz (bad) 
    2243:	ff 6c 01 00          	ljmp   *0x0(%rcx,%rax,1)
    2247:	00 ec                	add    %ch,%ah
    2249:	f6 ff                	idiv   %bh
    224b:	ff 90 01 00 00 b0    	call   *-0x4fffffff(%rax)
    2251:	fa                   	cli    
    2252:	ff                   	(bad)  
    2253:	ff                   	.byte 0xff
    2254:	b0 01                	mov    $0x1,%al
	...

Disassembly of section .eh_frame:

0000000000002258 <__FRAME_END__-0x16c>:
    2258:	14 00                	adc    $0x0,%al
    225a:	00 00                	add    %al,(%rax)
    225c:	00 00                	add    %al,(%rax)
    225e:	00 00                	add    %al,(%rax)
    2260:	01 7a 52             	add    %edi,0x52(%rdx)
    2263:	00 01                	add    %al,(%rcx)
    2265:	78 10                	js     2277 <__GNU_EH_FRAME_HDR+0x83>
    2267:	01 1b                	add    %ebx,(%rbx)
    2269:	0c 07                	or     $0x7,%al
    226b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2271:	00 00                	add    %al,(%rax)
    2273:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2276:	00 00                	add    %al,(%rax)
    2278:	48 ef                	rex.W out %eax,(%dx)
    227a:	ff                   	(bad)  
    227b:	ff 26                	jmp    *(%rsi)
    227d:	00 00                	add    %al,(%rax)
    227f:	00 00                	add    %al,(%rax)
    2281:	44 07                	rex.R (bad) 
    2283:	10 00                	adc    %al,(%rax)
    2285:	00 00                	add    %al,(%rax)
    2287:	00 24 00             	add    %ah,(%rax,%rax,1)
    228a:	00 00                	add    %al,(%rax)
    228c:	34 00                	xor    $0x0,%al
    228e:	00 00                	add    %al,(%rax)
    2290:	90                   	nop
    2291:	ed                   	in     (%dx),%eax
    2292:	ff                   	(bad)  
    2293:	ff d0                	call   *%rax
    2295:	00 00                	add    %al,(%rax)
    2297:	00 00                	add    %al,(%rax)
    2299:	0e                   	(bad)  
    229a:	10 46 0e             	adc    %al,0xe(%rsi)
    229d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    22a0:	0b 77 08             	or     0x8(%rdi),%esi
    22a3:	80 00 3f             	addb   $0x3f,(%rax)
    22a6:	1a 3a                	sbb    (%rdx),%bh
    22a8:	2a 33                	sub    (%rbx),%dh
    22aa:	24 22                	and    $0x22,%al
    22ac:	00 00                	add    %al,(%rax)
    22ae:	00 00                	add    %al,(%rax)
    22b0:	14 00                	adc    $0x0,%al
    22b2:	00 00                	add    %al,(%rax)
    22b4:	5c                   	pop    %rsp
    22b5:	00 00                	add    %al,(%rax)
    22b7:	00 38                	add    %bh,(%rax)
    22b9:	ee                   	out    %al,(%dx)
    22ba:	ff                   	(bad)  
    22bb:	ff 10                	call   *(%rax)
	...
    22c5:	00 00                	add    %al,(%rax)
    22c7:	00 14 00             	add    %dl,(%rax,%rax,1)
    22ca:	00 00                	add    %al,(%rax)
    22cc:	74 00                	je     22ce <__GNU_EH_FRAME_HDR+0xda>
    22ce:	00 00                	add    %al,(%rax)
    22d0:	30 ee                	xor    %ch,%dh
    22d2:	ff                   	(bad)  
    22d3:	ff c0                	inc    %eax
	...
    22dd:	00 00                	add    %al,(%rax)
    22df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22e2:	00 00                	add    %al,(%rax)
    22e4:	8c 00                	mov    %es,(%rax)
    22e6:	00 00                	add    %al,(%rax)
    22e8:	c1 ef ff             	shr    $0xff,%edi
    22eb:	ff d2                	call   *%rdx
    22ed:	00 00                	add    %al,(%rax)
    22ef:	00 00                	add    %al,(%rax)
    22f1:	45 0e                	rex.RB (bad) 
    22f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22f9:	02 c9                	add    %cl,%cl
    22fb:	0c 07                	or     $0x7,%al
    22fd:	08 00                	or     %al,(%rax)
    22ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2302:	00 00                	add    %al,(%rax)
    2304:	ac                   	lods   %ds:(%rsi),%al
    2305:	00 00                	add    %al,(%rax)
    2307:	00 73 f0             	add    %dh,-0x10(%rbx)
    230a:	ff                   	(bad)  
    230b:	ff b2 01 00 00 00    	push   0x1(%rdx)
    2311:	45 0e                	rex.RB (bad) 
    2313:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2319:	03 a9 01 0c 07 08    	add    0x8070c01(%rcx),%ebp
    231f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2322:	00 00                	add    %al,(%rax)
    2324:	cc                   	int3   
    2325:	00 00                	add    %al,(%rax)
    2327:	00 05 f2 ff ff 41    	add    %al,0x41fffff2(%rip)        # 4200231f <_end+0x41ffe307>
    232d:	00 00                	add    %al,(%rax)
    232f:	00 00                	add    %al,(%rax)
    2331:	45 0e                	rex.RB (bad) 
    2333:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2339:	78 0c                	js     2347 <__GNU_EH_FRAME_HDR+0x153>
    233b:	07                   	(bad)  
    233c:	08 00                	or     %al,(%rax)
    233e:	00 00                	add    %al,(%rax)
    2340:	1c 00                	sbb    $0x0,%al
    2342:	00 00                	add    %al,(%rax)
    2344:	ec                   	in     (%dx),%al
    2345:	00 00                	add    %al,(%rax)
    2347:	00 26                	add    %ah,(%rsi)
    2349:	f2 ff                	repnz (bad) 
    234b:	ff 83 00 00 00 00    	incl   0x0(%rbx)
    2351:	45 0e                	rex.RB (bad) 
    2353:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2359:	02 7a 0c             	add    0xc(%rdx),%bh
    235c:	07                   	(bad)  
    235d:	08 00                	or     %al,(%rax)
    235f:	00 20                	add    %ah,(%rax)
    2361:	00 00                	add    %al,(%rax)
    2363:	00 0c 01             	add    %cl,(%rcx,%rax,1)
    2366:	00 00                	add    %al,(%rax)
    2368:	89 f2                	mov    %esi,%edx
    236a:	ff                   	(bad)  
    236b:	ff                   	(bad)  
    236c:	ef                   	out    %eax,(%dx)
    236d:	02 00                	add    (%rax),%al
    236f:	00 00                	add    %al,(%rax)
    2371:	45 0e                	rex.RB (bad) 
    2373:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2379:	48 83 03 03          	addq   $0x3,(%rbx)
    237d:	de 02                	fiadds (%rdx)
    237f:	0c 07                	or     $0x7,%al
    2381:	08 00                	or     %al,(%rax)
    2383:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2386:	00 00                	add    %al,(%rax)
    2388:	30 01                	xor    %al,(%rcx)
    238a:	00 00                	add    %al,(%rax)
    238c:	54                   	push   %rsp
    238d:	f5                   	cmc    
    238e:	ff                   	(bad)  
    238f:	ff c4                	inc    %esp
    2391:	03 00                	add    (%rax),%eax
    2393:	00 00                	add    %al,(%rax)
    2395:	45 0e                	rex.RB (bad) 
    2397:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    239d:	03 bb 03 0c 07 08    	add    0x8070c03(%rbx),%edi
    23a3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23a6:	00 00                	add    %al,(%rax)
    23a8:	50                   	push   %rax
    23a9:	01 00                	add    %eax,(%rax)
    23ab:	00 f8                	add    %bh,%al
    23ad:	f8                   	clc    
    23ae:	ff                   	(bad)  
    23af:	ff                   	(bad)  
    23b0:	ed                   	in     (%dx),%eax
    23b1:	00 00                	add    %al,(%rax)
    23b3:	00 00                	add    %al,(%rax)
    23b5:	45 0e                	rex.RB (bad) 
    23b7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23bd:	02 e4                	add    %ah,%ah
    23bf:	0c 07                	or     $0x7,%al
    23c1:	08 00                	or     %al,(%rax)
	...

00000000000023c4 <__FRAME_END__>:
    23c4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003d60 <__frame_dummy_init_array_entry>:
    3d60:	a0                   	.byte 0xa0
    3d61:	12 00                	adc    (%rax),%al
    3d63:	00 00                	add    %al,(%rax)
    3d65:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003d68 <__do_global_dtors_aux_fini_array_entry>:
    3d68:	60                   	(bad)  
    3d69:	12 00                	adc    (%rax),%al
    3d6b:	00 00                	add    %al,(%rax)
    3d6d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003d70 <_DYNAMIC>:
    3d70:	01 00                	add    %eax,(%rax)
    3d72:	00 00                	add    %al,(%rax)
    3d74:	00 00                	add    %al,(%rax)
    3d76:	00 00                	add    %al,(%rax)
    3d78:	7b 00                	jnp    3d7a <_DYNAMIC+0xa>
    3d7a:	00 00                	add    %al,(%rax)
    3d7c:	00 00                	add    %al,(%rax)
    3d7e:	00 00                	add    %al,(%rax)
    3d80:	0c 00                	or     $0x0,%al
    3d82:	00 00                	add    %al,(%rax)
    3d84:	00 00                	add    %al,(%rax)
    3d86:	00 00                	add    %al,(%rax)
    3d88:	00 10                	add    %dl,(%rax)
    3d8a:	00 00                	add    %al,(%rax)
    3d8c:	00 00                	add    %al,(%rax)
    3d8e:	00 00                	add    %al,(%rax)
    3d90:	0d 00 00 00 00       	or     $0x0,%eax
    3d95:	00 00                	add    %al,(%rax)
    3d97:	00 94 1d 00 00 00 00 	add    %dl,0x0(%rbp,%rbx,1)
    3d9e:	00 00                	add    %al,(%rax)
    3da0:	19 00                	sbb    %eax,(%rax)
    3da2:	00 00                	add    %al,(%rax)
    3da4:	00 00                	add    %al,(%rax)
    3da6:	00 00                	add    %al,(%rax)
    3da8:	60                   	(bad)  
    3da9:	3d 00 00 00 00       	cmp    $0x0,%eax
    3dae:	00 00                	add    %al,(%rax)
    3db0:	1b 00                	sbb    (%rax),%eax
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	08 00                	or     %al,(%rax)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	1a 00                	sbb    (%rax),%al
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	68 3d 00 00 00       	push   $0x3d
    3dcd:	00 00                	add    %al,(%rax)
    3dcf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	08 00                	or     %al,(%rax)
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	f5                   	cmc    
    3de1:	fe                   	(bad)  
    3de2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3df5 <_DYNAMIC+0x85>
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 88 05 00 00 00    	add    %cl,0x5(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 06                	add    %al,(%rsi)
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 d8                	add    %bl,%al
    3e09:	03 00                	add    (%rax),%eax
    3e0b:	00 00                	add    %al,(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 0a                	add    %cl,(%rdx)
    3e11:	00 00                	add    %al,(%rax)
    3e13:	00 00                	add    %al,(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 eb                	add    %ch,%bl
    3e19:	00 00                	add    %al,(%rax)
    3e1b:	00 00                	add    %al,(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 0b                	add    %cl,(%rbx)
    3e21:	00 00                	add    %al,(%rax)
    3e23:	00 00                	add    %al,(%rax)
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 18                	add    %bl,(%rax)
    3e29:	00 00                	add    %al,(%rax)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e35 <_DYNAMIC+0xc5>
	...
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 03                	add    %al,(%rbx)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 60 3f             	add    %ah,0x3f(%rax)
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	02 00                	add    (%rax),%al
    3e52:	00 00                	add    %al,(%rax)
    3e54:	00 00                	add    %al,(%rax)
    3e56:	00 00                	add    %al,(%rax)
    3e58:	20 01                	and    %al,(%rcx)
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	14 00                	adc    $0x0,%al
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	07                   	(bad)  
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 17                	add    %dl,(%rdi)
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 98 07 00 00 00    	add    %bl,0x7(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 07                	add    %al,(%rdi)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 d8                	add    %bl,%al
    3e89:	06                   	(bad)  
    3e8a:	00 00                	add    %al,(%rax)
    3e8c:	00 00                	add    %al,(%rax)
    3e8e:	00 00                	add    %al,(%rax)
    3e90:	08 00                	or     %al,(%rax)
    3e92:	00 00                	add    %al,(%rax)
    3e94:	00 00                	add    %al,(%rax)
    3e96:	00 00                	add    %al,(%rax)
    3e98:	c0 00 00             	rolb   $0x0,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 09                	add    %cl,(%rcx)
    3ea1:	00 00                	add    %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 18                	add    %bl,(%rax)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 1e                	add    %bl,(%rsi)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 08                	add    %cl,(%rax)
    3eb9:	00 00                	add    %al,(%rax)
    3ebb:	00 00                	add    %al,(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 fb                	add    %bh,%bl
    3ec1:	ff                   	(bad)  
    3ec2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 01                	add    %al,(%rcx)
    3ec9:	00 00                	add    %al,(%rax)
    3ecb:	08 00                	or     %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 fe                	add    %bh,%dh
    3ed1:	ff                   	(bad)  
    3ed2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 98 06 00 00 00    	add    %bl,0x6(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 ff                	add    %bh,%bh
    3ee1:	ff                   	(bad)  
    3ee2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 01                	add    %al,(%rcx)
    3ee9:	00 00                	add    %al,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 f0                	add    %dh,%al
    3ef1:	ff                   	(bad)  
    3ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 74 06 00          	add    %dh,0x0(%rsi,%rax,1)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 f9                	add    %bh,%cl
    3f01:	ff                   	(bad)  
    3f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003f60 <_GLOBAL_OFFSET_TABLE_>:
    3f60:	70 3d                	jo     3f9f <_GLOBAL_OFFSET_TABLE_+0x3f>
	...
    3f76:	00 00                	add    %al,(%rax)
    3f78:	30 10                	xor    %dl,(%rax)
    3f7a:	00 00                	add    %al,(%rax)
    3f7c:	00 00                	add    %al,(%rax)
    3f7e:	00 00                	add    %al,(%rax)
    3f80:	40 10 00             	rex adc %al,(%rax)
    3f83:	00 00                	add    %al,(%rax)
    3f85:	00 00                	add    %al,(%rax)
    3f87:	00 50 10             	add    %dl,0x10(%rax)
    3f8a:	00 00                	add    %al,(%rax)
    3f8c:	00 00                	add    %al,(%rax)
    3f8e:	00 00                	add    %al,(%rax)
    3f90:	60                   	(bad)  
    3f91:	10 00                	adc    %al,(%rax)
    3f93:	00 00                	add    %al,(%rax)
    3f95:	00 00                	add    %al,(%rax)
    3f97:	00 70 10             	add    %dh,0x10(%rax)
    3f9a:	00 00                	add    %al,(%rax)
    3f9c:	00 00                	add    %al,(%rax)
    3f9e:	00 00                	add    %al,(%rax)
    3fa0:	80 10 00             	adcb   $0x0,(%rax)
    3fa3:	00 00                	add    %al,(%rax)
    3fa5:	00 00                	add    %al,(%rax)
    3fa7:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
    3fad:	00 00                	add    %al,(%rax)
    3faf:	00 a0 10 00 00 00    	add    %ah,0x10(%rax)
    3fb5:	00 00                	add    %al,(%rax)
    3fb7:	00 b0 10 00 00 00    	add    %dh,0x10(%rax)
    3fbd:	00 00                	add    %al,(%rax)
    3fbf:	00 c0                	add    %al,%al
    3fc1:	10 00                	adc    %al,(%rax)
    3fc3:	00 00                	add    %al,(%rax)
    3fc5:	00 00                	add    %al,(%rax)
    3fc7:	00 d0                	add    %dl,%al
    3fc9:	10 00                	adc    %al,(%rax)
    3fcb:	00 00                	add    %al,(%rax)
    3fcd:	00 00                	add    %al,(%rax)
    3fcf:	00 e0                	add    %ah,%al
    3fd1:	10 00                	adc    %al,(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004010 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__abi_tag-0x314>
   a:	74 75                	je     81 <__abi_tag-0x30b>
   c:	20 31                	and    %dh,(%rcx)
   e:	31 2e                	xor    %ebp,(%rsi)
  10:	34 2e                	xor    $0x2e,%al
  12:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627549 <_end+0x75623531>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__abi_tag-0x2fc>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	32 2e                	xor    (%rsi),%ch
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	31 2e                	xor    %ebp,(%rsi)
  27:	34 2e                	xor    $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
